{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/meitu.zip","path":"meitu.zip","modified":0,"renderable":0},{"_id":"source/images/1.png","path":"images/1.png","modified":0,"renderable":0},{"_id":"source/images/2.png","path":"images/2.png","modified":0,"renderable":0},{"_id":"source/images/3.png","path":"images/3.png","modified":0,"renderable":0},{"_id":"source/images/4.png","path":"images/4.png","modified":0,"renderable":0},{"_id":"source/images/5.png","path":"images/5.png","modified":0,"renderable":0},{"_id":"source/images/7.png","path":"images/7.png","modified":0,"renderable":0},{"_id":"source/images/8.jpg","path":"images/8.jpg","modified":0,"renderable":0},{"_id":"source/images/6.png","path":"images/6.png","modified":0,"renderable":0},{"_id":"source/images/选区_011.png","path":"images/选区_011.png","modified":0,"renderable":0},{"_id":"source/images/选区_013.png","path":"images/选区_013.png","modified":0,"renderable":0},{"_id":"source/images/选区_021.png","path":"images/选区_021.png","modified":0,"renderable":0},{"_id":"source/images/选区_022.png","path":"images/选区_022.png","modified":0,"renderable":0},{"_id":"source/images/9.jpg","path":"images/9.jpg","modified":0,"renderable":0},{"_id":"source/images/选区_002.png","path":"images/选区_002.png","modified":0,"renderable":0},{"_id":"source/images/选区_006.png","path":"images/选区_006.png","modified":0,"renderable":0},{"_id":"source/images/选区_036.png","path":"images/选区_036.png","modified":0,"renderable":0},{"_id":"source/images/选区_037.png","path":"images/选区_037.png","modified":0,"renderable":0},{"_id":"source/images/选区_038.png","path":"images/选区_038.png","modified":0,"renderable":0},{"_id":"source/images/选区_072.png","path":"images/选区_072.png","modified":0,"renderable":0},{"_id":"source/images/选区_073.png","path":"images/选区_073.png","modified":0,"renderable":0},{"_id":"source/images/选区_074.png","path":"images/选区_074.png","modified":0,"renderable":0},{"_id":"source/images/选区_075.png","path":"images/选区_075.png","modified":0,"renderable":0},{"_id":"source/images/选区_076.png","path":"images/选区_076.png","modified":0,"renderable":0},{"_id":"source/images/选区_077.png","path":"images/选区_077.png","modified":0,"renderable":0},{"_id":"source/images/选区_079.png","path":"images/选区_079.png","modified":0,"renderable":0},{"_id":"source/images/选区_080.png","path":"images/选区_080.png","modified":0,"renderable":0},{"_id":"source/images/选区_083.png","path":"images/选区_083.png","modified":0,"renderable":0},{"_id":"source/images/选区_084.png","path":"images/选区_084.png","modified":0,"renderable":0},{"_id":"source/images/选区_091.png","path":"images/选区_091.png","modified":0,"renderable":0},{"_id":"source/images/选区_092.png","path":"images/选区_092.png","modified":0,"renderable":0},{"_id":"source/images/选区_093.png","path":"images/选区_093.png","modified":0,"renderable":0},{"_id":"source/images/logo.png","path":"images/logo.png","modified":0,"renderable":0},{"_id":"source/images/选区_003.png","path":"images/选区_003.png","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (101).jpg","path":"love/16-17shenghuo/16-17shenghuo (101).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (102).jpg","path":"love/16-17shenghuo/16-17shenghuo (102).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (113).jpg","path":"love/16-17shenghuo/16-17shenghuo (113).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (117).jpg","path":"love/16-17shenghuo/16-17shenghuo (117).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (116).jpg","path":"love/16-17shenghuo/16-17shenghuo (116).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (119).jpg","path":"love/16-17shenghuo/16-17shenghuo (119).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (12).jpg","path":"love/16-17shenghuo/16-17shenghuo (12).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (120).jpg","path":"love/16-17shenghuo/16-17shenghuo (120).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (121).jpg","path":"love/16-17shenghuo/16-17shenghuo (121).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (122).jpg","path":"love/16-17shenghuo/16-17shenghuo (122).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (123).jpg","path":"love/16-17shenghuo/16-17shenghuo (123).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (124).jpg","path":"love/16-17shenghuo/16-17shenghuo (124).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (125).jpg","path":"love/16-17shenghuo/16-17shenghuo (125).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (126).jpg","path":"love/16-17shenghuo/16-17shenghuo (126).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (127).jpg","path":"love/16-17shenghuo/16-17shenghuo (127).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (128).jpg","path":"love/16-17shenghuo/16-17shenghuo (128).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (13).jpg","path":"love/16-17shenghuo/16-17shenghuo (13).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (130).jpg","path":"love/16-17shenghuo/16-17shenghuo (130).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (14).jpg","path":"love/16-17shenghuo/16-17shenghuo (14).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (15).jpg","path":"love/16-17shenghuo/16-17shenghuo (15).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (19).jpg","path":"love/16-17shenghuo/16-17shenghuo (19).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (2).jpg","path":"love/16-17shenghuo/16-17shenghuo (2).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (20).jpg","path":"love/16-17shenghuo/16-17shenghuo (20).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (23).jpg","path":"love/16-17shenghuo/16-17shenghuo (23).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (22).jpg","path":"love/16-17shenghuo/16-17shenghuo (22).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (24).jpg","path":"love/16-17shenghuo/16-17shenghuo (24).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (26).jpg","path":"love/16-17shenghuo/16-17shenghuo (26).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (27).jpg","path":"love/16-17shenghuo/16-17shenghuo (27).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (28).jpg","path":"love/16-17shenghuo/16-17shenghuo (28).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (29).jpg","path":"love/16-17shenghuo/16-17shenghuo (29).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (3).jpg","path":"love/16-17shenghuo/16-17shenghuo (3).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (30).jpg","path":"love/16-17shenghuo/16-17shenghuo (30).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (31).jpg","path":"love/16-17shenghuo/16-17shenghuo (31).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (25).jpg","path":"love/16-17shenghuo/16-17shenghuo (25).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (34).jpg","path":"love/16-17shenghuo/16-17shenghuo (34).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (37).jpg","path":"love/16-17shenghuo/16-17shenghuo (37).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (38).jpg","path":"love/16-17shenghuo/16-17shenghuo (38).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (4).jpg","path":"love/16-17shenghuo/16-17shenghuo (4).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (40).jpg","path":"love/16-17shenghuo/16-17shenghuo (40).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (41).jpg","path":"love/16-17shenghuo/16-17shenghuo (41).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (46).jpg","path":"love/16-17shenghuo/16-17shenghuo (46).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (47).jpg","path":"love/16-17shenghuo/16-17shenghuo (47).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (54).jpg","path":"love/16-17shenghuo/16-17shenghuo (54).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (59).jpg","path":"love/16-17shenghuo/16-17shenghuo (59).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (6).jpg","path":"love/16-17shenghuo/16-17shenghuo (6).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (61).jpg","path":"love/16-17shenghuo/16-17shenghuo (61).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (64).jpg","path":"love/16-17shenghuo/16-17shenghuo (64).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (66).jpg","path":"love/16-17shenghuo/16-17shenghuo (66).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (69).jpg","path":"love/16-17shenghuo/16-17shenghuo (69).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (70).jpg","path":"love/16-17shenghuo/16-17shenghuo (70).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (7).jpg","path":"love/16-17shenghuo/16-17shenghuo (7).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (71).jpg","path":"love/16-17shenghuo/16-17shenghuo (71).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (72).jpg","path":"love/16-17shenghuo/16-17shenghuo (72).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (73).jpg","path":"love/16-17shenghuo/16-17shenghuo (73).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (77).jpg","path":"love/16-17shenghuo/16-17shenghuo (77).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (78).jpg","path":"love/16-17shenghuo/16-17shenghuo (78).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (79).jpg","path":"love/16-17shenghuo/16-17shenghuo (79).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (82).jpg","path":"love/16-17shenghuo/16-17shenghuo (82).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (85).jpg","path":"love/16-17shenghuo/16-17shenghuo (85).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (93).jpg","path":"love/16-17shenghuo/16-17shenghuo (93).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (96).jpg","path":"love/16-17shenghuo/16-17shenghuo (96).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (97).jpg","path":"love/16-17shenghuo/16-17shenghuo (97).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (98).jpg","path":"love/16-17shenghuo/16-17shenghuo (98).jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/1.jpg","path":"love/1617meitu/1.jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (95).jpg","path":"love/16-17shenghuo/16-17shenghuo (95).jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/15.jpg","path":"love/1617meitu/15.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/16.jpg","path":"love/1617meitu/16.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/19.jpg","path":"love/1617meitu/19.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/21.jpg","path":"love/1617meitu/21.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/20.jpg","path":"love/1617meitu/20.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/23.jpg","path":"love/1617meitu/23.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/22.jpg","path":"love/1617meitu/22.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/28.jpg","path":"love/1617meitu/28.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/30.jpg","path":"love/1617meitu/30.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/34.jpg","path":"love/1617meitu/34.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/6.jpg","path":"love/1617meitu/6.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/7.jpg","path":"love/1617meitu/7.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/8.jpg","path":"love/1617meitu/8.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/9.jpg","path":"love/1617meitu/9.jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (1).jpg","path":"love/qinhuangdao/qinhuangdao (1).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (10).jpg","path":"love/qinhuangdao/qinhuangdao (10).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (11).jpg","path":"love/qinhuangdao/qinhuangdao (11).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (12).jpg","path":"love/qinhuangdao/qinhuangdao (12).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (13).jpg","path":"love/qinhuangdao/qinhuangdao (13).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (15).jpg","path":"love/qinhuangdao/qinhuangdao (15).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (16).jpg","path":"love/qinhuangdao/qinhuangdao (16).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (17).jpg","path":"love/qinhuangdao/qinhuangdao (17).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (18).jpg","path":"love/qinhuangdao/qinhuangdao (18).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (19).jpg","path":"love/qinhuangdao/qinhuangdao (19).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (2).jpg","path":"love/qinhuangdao/qinhuangdao (2).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (23).jpg","path":"love/qinhuangdao/qinhuangdao (23).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (22).jpg","path":"love/qinhuangdao/qinhuangdao (22).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (24).jpg","path":"love/qinhuangdao/qinhuangdao (24).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (25).jpg","path":"love/qinhuangdao/qinhuangdao (25).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (26).jpg","path":"love/qinhuangdao/qinhuangdao (26).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (27).jpg","path":"love/qinhuangdao/qinhuangdao (27).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (29).jpg","path":"love/qinhuangdao/qinhuangdao (29).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (3).jpg","path":"love/qinhuangdao/qinhuangdao (3).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (30).jpg","path":"love/qinhuangdao/qinhuangdao (30).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (31).jpg","path":"love/qinhuangdao/qinhuangdao (31).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (32).jpg","path":"love/qinhuangdao/qinhuangdao (32).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (33).jpg","path":"love/qinhuangdao/qinhuangdao (33).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (34).jpg","path":"love/qinhuangdao/qinhuangdao (34).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (35).jpg","path":"love/qinhuangdao/qinhuangdao (35).jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/33.jpg","path":"love/1617meitu/33.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/4.jpg","path":"love/1617meitu/4.jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (36).jpg","path":"love/qinhuangdao/qinhuangdao (36).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (37).jpg","path":"love/qinhuangdao/qinhuangdao (37).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (4).jpg","path":"love/qinhuangdao/qinhuangdao (4).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (5).jpg","path":"love/qinhuangdao/qinhuangdao (5).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (6).jpg","path":"love/qinhuangdao/qinhuangdao (6).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (8).jpg","path":"love/qinhuangdao/qinhuangdao (8).jpg","modified":0,"renderable":0},{"_id":"source/images/选区_001.png","path":"images/选区_001.png","modified":0,"renderable":0},{"_id":"themes/indigo/source/css/style.less","path":"css/style.less","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/alipay.jpg","path":"img/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/brand.jpg","path":"img/brand.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/cc.png","path":"img/cc.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/img-err.png","path":"img/img-err.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/img-loading.png","path":"img/img-loading.png","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/wechat.jpg","path":"img/wechat.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/main.min.js","path":"js/main.min.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/search.min.js","path":"js/search.min.js","modified":0,"renderable":1},{"_id":"source/love/16-17shenghuo/16-17shenghuo (1).jpg","path":"love/16-17shenghuo/16-17shenghuo (1).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (10).jpg","path":"love/16-17shenghuo/16-17shenghuo (10).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (100).jpg","path":"love/16-17shenghuo/16-17shenghuo (100).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (103).jpg","path":"love/16-17shenghuo/16-17shenghuo (103).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (104).jpg","path":"love/16-17shenghuo/16-17shenghuo (104).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (105).jpg","path":"love/16-17shenghuo/16-17shenghuo (105).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (106).jpg","path":"love/16-17shenghuo/16-17shenghuo (106).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (107).jpg","path":"love/16-17shenghuo/16-17shenghuo (107).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (108).jpg","path":"love/16-17shenghuo/16-17shenghuo (108).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (109).jpg","path":"love/16-17shenghuo/16-17shenghuo (109).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (11).jpg","path":"love/16-17shenghuo/16-17shenghuo (11).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (110).jpg","path":"love/16-17shenghuo/16-17shenghuo (110).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (111).jpg","path":"love/16-17shenghuo/16-17shenghuo (111).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (112).jpg","path":"love/16-17shenghuo/16-17shenghuo (112).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (114).jpg","path":"love/16-17shenghuo/16-17shenghuo (114).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (115).jpg","path":"love/16-17shenghuo/16-17shenghuo (115).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (118).jpg","path":"love/16-17shenghuo/16-17shenghuo (118).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (129).jpg","path":"love/16-17shenghuo/16-17shenghuo (129).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (131).jpg","path":"love/16-17shenghuo/16-17shenghuo (131).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (17).jpg","path":"love/16-17shenghuo/16-17shenghuo (17).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (18).jpg","path":"love/16-17shenghuo/16-17shenghuo (18).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (16).jpg","path":"love/16-17shenghuo/16-17shenghuo (16).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (21).jpg","path":"love/16-17shenghuo/16-17shenghuo (21).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (32).jpg","path":"love/16-17shenghuo/16-17shenghuo (32).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (33).jpg","path":"love/16-17shenghuo/16-17shenghuo (33).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (35).jpg","path":"love/16-17shenghuo/16-17shenghuo (35).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (36).jpg","path":"love/16-17shenghuo/16-17shenghuo (36).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (39).jpg","path":"love/16-17shenghuo/16-17shenghuo (39).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (42).jpg","path":"love/16-17shenghuo/16-17shenghuo (42).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (43).jpg","path":"love/16-17shenghuo/16-17shenghuo (43).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (44).jpg","path":"love/16-17shenghuo/16-17shenghuo (44).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (45).jpg","path":"love/16-17shenghuo/16-17shenghuo (45).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (48).jpg","path":"love/16-17shenghuo/16-17shenghuo (48).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (49).jpg","path":"love/16-17shenghuo/16-17shenghuo (49).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (5).jpg","path":"love/16-17shenghuo/16-17shenghuo (5).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (50).jpg","path":"love/16-17shenghuo/16-17shenghuo (50).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (51).jpg","path":"love/16-17shenghuo/16-17shenghuo (51).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (52).jpg","path":"love/16-17shenghuo/16-17shenghuo (52).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (55).jpg","path":"love/16-17shenghuo/16-17shenghuo (55).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (56).jpg","path":"love/16-17shenghuo/16-17shenghuo (56).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (57).jpg","path":"love/16-17shenghuo/16-17shenghuo (57).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (58).jpg","path":"love/16-17shenghuo/16-17shenghuo (58).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (62).jpg","path":"love/16-17shenghuo/16-17shenghuo (62).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (60).jpg","path":"love/16-17shenghuo/16-17shenghuo (60).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (63).jpg","path":"love/16-17shenghuo/16-17shenghuo (63).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (65).jpg","path":"love/16-17shenghuo/16-17shenghuo (65).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (67).jpg","path":"love/16-17shenghuo/16-17shenghuo (67).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (68).jpg","path":"love/16-17shenghuo/16-17shenghuo (68).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (74).jpg","path":"love/16-17shenghuo/16-17shenghuo (74).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (75).jpg","path":"love/16-17shenghuo/16-17shenghuo (75).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (76).jpg","path":"love/16-17shenghuo/16-17shenghuo (76).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (8).jpg","path":"love/16-17shenghuo/16-17shenghuo (8).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (80).jpg","path":"love/16-17shenghuo/16-17shenghuo (80).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (81).jpg","path":"love/16-17shenghuo/16-17shenghuo (81).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (83).jpg","path":"love/16-17shenghuo/16-17shenghuo (83).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (84).jpg","path":"love/16-17shenghuo/16-17shenghuo (84).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (86).jpg","path":"love/16-17shenghuo/16-17shenghuo (86).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (87).jpg","path":"love/16-17shenghuo/16-17shenghuo (87).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (88).jpg","path":"love/16-17shenghuo/16-17shenghuo (88).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (89).jpg","path":"love/16-17shenghuo/16-17shenghuo (89).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (9).jpg","path":"love/16-17shenghuo/16-17shenghuo (9).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (90).jpg","path":"love/16-17shenghuo/16-17shenghuo (90).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (91).jpg","path":"love/16-17shenghuo/16-17shenghuo (91).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (92).jpg","path":"love/16-17shenghuo/16-17shenghuo (92).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (94).jpg","path":"love/16-17shenghuo/16-17shenghuo (94).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (99).jpg","path":"love/16-17shenghuo/16-17shenghuo (99).jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/10.jpg","path":"love/1617meitu/10.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/11.jpg","path":"love/1617meitu/11.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/13.jpg","path":"love/1617meitu/13.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/14.jpg","path":"love/1617meitu/14.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/12.jpg","path":"love/1617meitu/12.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/17.jpg","path":"love/1617meitu/17.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/18.jpg","path":"love/1617meitu/18.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/2.jpg","path":"love/1617meitu/2.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/24.jpg","path":"love/1617meitu/24.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/26.jpg","path":"love/1617meitu/26.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/25.jpg","path":"love/1617meitu/25.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/27.jpg","path":"love/1617meitu/27.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/3.jpg","path":"love/1617meitu/3.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/29.jpg","path":"love/1617meitu/29.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/31.jpg","path":"love/1617meitu/31.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/32.jpg","path":"love/1617meitu/32.jpg","modified":0,"renderable":0},{"_id":"source/love/1617meitu/5.jpg","path":"love/1617meitu/5.jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (14).jpg","path":"love/qinhuangdao/qinhuangdao (14).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (21).jpg","path":"love/qinhuangdao/qinhuangdao (21).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (28).jpg","path":"love/qinhuangdao/qinhuangdao (28).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (7).jpg","path":"love/qinhuangdao/qinhuangdao (7).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (9).jpg","path":"love/qinhuangdao/qinhuangdao (9).jpg","modified":0,"renderable":0},{"_id":"source/love/16-17shenghuo/16-17shenghuo (53).jpg","path":"love/16-17shenghuo/16-17shenghuo (53).jpg","modified":0,"renderable":0},{"_id":"source/love/qinhuangdao/qinhuangdao (20).jpg","path":"love/qinhuangdao/qinhuangdao (20).jpg","modified":0,"renderable":0},{"_id":"themes/indigo/source/css/cloudTie/mobile.less","path":"css/cloudTie/mobile.less","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/cloudTie/pc.less","path":"css/cloudTie/pc.less","modified":0,"renderable":1},{"_id":"themes/indigo/source/img/author.jpg","path":"img/author.jpg","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/cloudTie/loader.js","path":"js/cloudTie/loader.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/cloudTie/loader.min.js","path":"js/cloudTie/loader.min.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/cloudTie/mobile.min.js","path":"js/cloudTie/mobile.min.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/cloudTie/mobile.js","path":"js/cloudTie/mobile.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/cloudTie/pc.min.js","path":"js/cloudTie/pc.min.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","path":"css/fonts/roboto/Roboto-Bold.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","path":"css/fonts/roboto/Roboto-Bold.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","path":"css/fonts/roboto/Roboto-Bold.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","path":"css/fonts/roboto/Roboto-Light.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","path":"css/fonts/roboto/Roboto-Light.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","path":"css/fonts/roboto/Roboto-Light.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","path":"css/fonts/roboto/Roboto-Medium.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","path":"css/fonts/roboto/Roboto-Medium.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","path":"css/fonts/roboto/Roboto-Medium.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","path":"css/fonts/roboto/Roboto-Regular.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","path":"css/fonts/roboto/Roboto-Regular.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","path":"css/fonts/roboto/Roboto-Regular.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","path":"css/fonts/roboto/Roboto-Thin.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","path":"css/fonts/roboto/Roboto-Thin.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","path":"css/fonts/roboto/Roboto-Thin.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/js/cloudTie/pc.js","path":"js/cloudTie/pc.js","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","path":"css/fonts/fontawesome/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","path":"css/fonts/fontawesome/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","path":"css/fonts/roboto/Roboto-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","path":"css/fonts/roboto/Roboto-Light.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","path":"css/fonts/roboto/Roboto-Medium.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","path":"css/fonts/roboto/Roboto-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","path":"css/fonts/roboto/Roboto-Thin.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","path":"css/fonts/fontawesome/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","path":"css/fonts/fontawesome/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","path":"css/fonts/fontawesome/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","path":"css/fonts/fontawesome/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/FontAwesome.otf","path":"font/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.eot","path":"font/coveredbyyourgrace-webfont.eot","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.ttf","path":"font/coveredbyyourgrace-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.woff","path":"font/coveredbyyourgrace-webfont.woff","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.eot","path":"font/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.woff","path":"font/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.eot","path":"font/fontdiao.eot","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.ttf","path":"font/fontdiao.ttf","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.woff","path":"font/fontdiao.woff","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/HeadPicture.png","path":"img/HeadPicture.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nc.svg","path":"img/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nd.svg","path":"img/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nc-nd.svg","path":"img/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by.svg","path":"img/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-nc-sa.svg","path":"img/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-by-sa.svg","path":"img/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/cc-zero.svg","path":"img/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/jacman.jpg","path":"img/jacman.jpg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/logo.svg","path":"img/logo.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/scrollup.png","path":"img/scrollup.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/creative.min.js","path":"js/creative.min.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/gallery.js","path":"js/gallery.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/jquery.imagesloaded.min.js","path":"js/jquery.imagesloaded.min.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/jquery.qrcode-0.12.0.min.js","path":"js/jquery.qrcode-0.12.0.min.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.ttf","path":"font/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.svg","path":"font/coveredbyyourgrace-webfont.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontdiao.svg","path":"font/fontdiao.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/header.jpg","path":"img/header.jpg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/logo.png","path":"img/logo.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/jquery-2.0.3.min.js","path":"js/jquery-2.0.3.min.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/author.jpg","path":"img/author.jpg","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/jacman/source/font/fontawesome-webfont.svg","path":"font/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/jacman/source/img/banner.jpg","path":"img/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/indigo/.editorconfig","hash":"9b0445427777519defe360ea38c61729d847b3d3","modified":1501328737692},{"_id":"themes/indigo/LICENSE","hash":"24944bf7920108f5a4790e6071c32e9102760c37","modified":1501328737692},{"_id":"themes/indigo/README.md","hash":"b188fb95a9c16eb188eeffa6caa0895a14676338","modified":1501328737692},{"_id":"themes/indigo/_config.yml","hash":"4074ec7ff9bce0412088fb29c87394caef2b72b1","modified":1501464874774},{"_id":"themes/indigo/package.json","hash":"9cf1c0843e6c3d6329c8a7cc1bf7a3e31c5e3fac","modified":1501329015976},{"_id":"source/meitu.zip","hash":"f401cb3a335971614bcdce6bc82ffe6f6fcbd050","modified":1496065332294},{"_id":"source/_posts/16-17美图集.md","hash":"5e3137d991a4f72dff422eb0f5008001dd3f521b","modified":1496579697181},{"_id":"source/_posts/16-17跟媳妇平凡的日子.md","hash":"6f68ad9d8e7e897e0bbc18f649e77397fe08d871","modified":1496241019249},{"_id":"source/_posts/Difference-between-GET-and-POST.md","hash":"aba3e889c6ca2d9be31f40f2a26d07aab056c01b","modified":1501383731784},{"_id":"source/_posts/Enable-https-in-Spring-Boot.md","hash":"a4dd5900b42fe745936e345a01915e0bbbb19975","modified":1498483557353},{"_id":"source/_posts/IDEA性能优化篇.md","hash":"0f01987edb8cac18e834263d87c8211afaed8615","modified":1496240783325},{"_id":"source/_posts/Solve-js-asynchronously.md","hash":"9e0f70cbd2b24ee973f2d9a3d3b1bb55c2109270","modified":1500022413524},{"_id":"source/_posts/Spring-Idea-Ubuntu环境搭建.md","hash":"1b65d3a52e48f12fe6a849986d665498d99f3577","modified":1501383774811},{"_id":"source/_posts/The-brief-process-of-building-a-personal-blog.md","hash":"819a50ecf2dacb8bc57d948fdfaa1c3c3673885f","modified":1501383829284},{"_id":"source/_posts/Using-session-in-SpringMVC.md","hash":"b32ec2a764bd5d6d495f1f3a1a0072b00aeeb0de","modified":1499300124250},{"_id":"source/_posts/WaterPurifier-API.md","hash":"a07de6b860e5325ff14cb30b1d8544ca15c89a23","modified":1501396677341},{"_id":"source/_posts/angular-thinkphp上传图片.md","hash":"ebab0b3b2b877f5cae51028de88b7544057bfa5a","modified":1501381468038},{"_id":"source/_posts/css浮动流代码实现及实例讲解.md","hash":"2623805faabd9d8d5fffddea5ada860d2fa56ce5","modified":1496583736692},{"_id":"source/_posts/git-command.md","hash":"1a04c4692d52003e237a7bcaa7f8b256ee989b06","modified":1501384838099},{"_id":"source/_posts/http-and-https.md","hash":"3f6fc33e3422702c824dc5257ad4d3724d891026","modified":1501464836661},{"_id":"source/_posts/http请求的封装与过滤.md","hash":"050afa53dd7c23ce1694105ba33b20263a82e1d2","modified":1498314665345},{"_id":"source/_posts/sql关键字报错.md","hash":"78967483c0af9c52bca43a416207514e42ef54ba","modified":1497513799202},{"_id":"source/_posts/test.md","hash":"d9899dd9a1725ceb1684fa61a4fe1c812c52e21d","modified":1501383846061},{"_id":"source/_posts/初始cookie与session.md","hash":"1e4d8c4d6602f447ea2c914de4225a2dd1f7f888","modified":1501383749349},{"_id":"source/_posts/在IDEA中部署tomcat.md","hash":"e3844d89dd41b50087a90efbb196eb7805032673","modified":1498482931105},{"_id":"source/_posts/基于链表的C语言信息管理系统.md","hash":"0a2eec97fb075bf7e8284dcc9dac291234534acc","modified":1501383955009},{"_id":"source/_posts/微信小程序wx-request请求服务器配置问题.md","hash":"8ae6263475b8e820be7a5779f8c4186df84c6776","modified":1501396750383},{"_id":"source/_posts/手把手hexo建站.md","hash":"f9520e59cdfc8a852ead9a6bbcf7021c36cd014e","modified":1495360617895},{"_id":"source/_posts/搭建个人博客简要.md","hash":"fc764cdcf73b86c09b2bbeb1d67e0e44829dcf1e","modified":1501381563957},{"_id":"source/_posts/时序图使用记录.md","hash":"aaa78631f437e6c03d33063c664d837703e77c51","modified":1498489121791},{"_id":"source/_posts/秦皇岛.md","hash":"e226a06546c52c1b3d9391188ecc0e268e076ba5","modified":1496579680202},{"_id":"source/_posts/订单号生成规则简述.md","hash":"9bca74ad10d4468a12ec1b5f940fae96d370a46b","modified":1501383889876},{"_id":"source/_posts/链表.md","hash":"90bf859925255a68777a2f02e0d0bb71180f5ddf","modified":1501381539033},{"_id":"source/_posts/错题本.md","hash":"d6934fc12d7a48007da6dd828b757e4d3e0440ea","modified":1501381599631},{"_id":"source/_posts/验证信息真伪加密算法记录.md","hash":"06feccd7579593fe9fef4012a9ef3f58677820da","modified":1500170279849},{"_id":"source/about/index.md","hash":"c6ddca1fff2460098031697e0978a83ebc887807","modified":1487259073607},{"_id":"source/categories/index.md","hash":"0551cca6ad56b15e940e9ab57389b023aaebe338","modified":1501384847847},{"_id":"source/images/1.png","hash":"46b0327d8ffc5be2c882fe4ad8d52b7cc3d0dc3d","modified":1497449362849},{"_id":"source/images/2.png","hash":"baba73f906c03c84713b157c54140e7ddb12f2c4","modified":1497449456727},{"_id":"source/images/3.png","hash":"2d37d6400b5c51adc5e775fd750e5e33cf3ea37f","modified":1497451201670},{"_id":"source/images/4.png","hash":"a031f285a8088be2c3f9848720f3a7585404d188","modified":1497452335991},{"_id":"source/images/5.png","hash":"9ffdaf7e61490bcae3fd6650d237c6d65115bf97","modified":1487369666410},{"_id":"source/images/7.png","hash":"870f929169c20260d68a43cf1410bdd42ca94c3e","modified":1498267617861},{"_id":"source/images/8.jpg","hash":"ef3c31fd6e696cd66649528e9c4eb6a1f9b55163","modified":1498270928528},{"_id":"source/images/6.png","hash":"d80cc46a21bb3abc140aeda8bd48d188e6e52c94","modified":1498220161020},{"_id":"source/images/选区_011.png","hash":"404c8a9504679490e152b49a1e5366a0a5980ba2","modified":1495785441000},{"_id":"source/images/选区_013.png","hash":"78fb169e2cd5708653a23ff60d2b5e0d98458f5e","modified":1495804726000},{"_id":"source/images/选区_021.png","hash":"c2209ffd804a5fbecab3008c3284d835dd70b689","modified":1496239255000},{"_id":"source/images/选区_022.png","hash":"3331eac52b378ef8040341a69118cfcb06fc37ce","modified":1496240734000},{"_id":"source/images/9.jpg","hash":"9f26f5c8f7a03a8c45a9411a97b70a4231880964","modified":1498270945605},{"_id":"source/images/选区_002.png","hash":"ef10a9b1acc7997763f233f1ec52d78ee52e4f00","modified":1495333323000},{"_id":"source/images/选区_006.png","hash":"ca8840c8bb81862ed518ae98a696fb4771979e60","modified":1495547947000},{"_id":"source/images/选区_036.png","hash":"d2b2a41706a4af09aa998534e620b9f52857e7df","modified":1496581418000},{"_id":"source/images/选区_037.png","hash":"55cd1cb71047bb7351471c6abb17c18901e9bce3","modified":1496581907000},{"_id":"source/images/选区_038.png","hash":"c75041e335d114917351d4e67b6937bfd6a24fab","modified":1496582284000},{"_id":"source/images/选区_072.png","hash":"8c32795b678a25b8c24a3409cbbb4272a9b3efe4","modified":1498189196000},{"_id":"source/images/选区_073.png","hash":"b91125a0ecc6b1c0f5ebe855079be82a0155837b","modified":1498196555000},{"_id":"source/images/选区_074.png","hash":"ea5e9937eb6ccf8586eeefd0ece0b91da0df1617","modified":1498218319000},{"_id":"source/images/选区_075.png","hash":"286f4ead9f71eb6f5620e10c5836e8907eef7af7","modified":1498218783000},{"_id":"source/images/选区_076.png","hash":"6e2eae9629e949acd040233b141dcdfb24412c09","modified":1498220612000},{"_id":"source/images/选区_077.png","hash":"f50b1e998329b729379212f8142b48777c1bbbf2","modified":1498230568000},{"_id":"source/images/选区_079.png","hash":"c7028bfc3ed58bd68d863637444ac23c36359165","modified":1498480225000},{"_id":"source/images/选区_080.png","hash":"c981153206a90320f0c28635c174a5e9203dc19a","modified":1498482837000},{"_id":"source/images/选区_083.png","hash":"42413a543ae9c81cf76801bbc15c0367122534fc","modified":1499264039000},{"_id":"source/images/选区_084.png","hash":"29032b4f2994f7c063ce3038d69b61acabeae394","modified":1499266128000},{"_id":"source/images/选区_091.png","hash":"b9f1f16d4263a6062b567a2807c2150b296948d2","modified":1501463568000},{"_id":"source/images/选区_092.png","hash":"60aa79c2d363364038782aa6055758021ff78b99","modified":1501463840000},{"_id":"source/images/选区_093.png","hash":"8c1e39cfe1ad52d9ff151c164a16f44af4e54c94","modified":1501464130000},{"_id":"source/source/index.md","hash":"9d32eb480fc44814e7c5c5122665626c3fa0fdc9","modified":1487609868245},{"_id":"source/tags/index.md","hash":"c329b60f788503e5ab3c09bb0388ffff458f0eb2","modified":1501384892452},{"_id":"themes/indigo/.git/HEAD","hash":"da237e0de55301608e7c572e119ab5c4e43c0e85","modified":1501328737676},{"_id":"themes/indigo/.git/config","hash":"cee770db0685d40d5335c51a1980bebd07c2b5e5","modified":1501328737676},{"_id":"themes/indigo/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1501328636151},{"_id":"themes/indigo/.git/index","hash":"29586eb3a1c53b11a5a9c1523a9f294a33b961e8","modified":1501328737712},{"_id":"themes/indigo/.git/packed-refs","hash":"d51b5ea506316d6a9af0cc79d4a3b9d76b6abd56","modified":1501328737676},{"_id":"themes/indigo/.git/shallow","hash":"dbb6000cae189daa40bb8fbde52512a451a1744d","modified":1501328638815},{"_id":"themes/indigo/layout/archive.ejs","hash":"d039719e21f6a6fa2925b00aaa623a180a78c818","modified":1501328737692},{"_id":"themes/indigo/layout/categories.ejs","hash":"41783d2069d5080566a99e6312aa2113105f8b41","modified":1501328737692},{"_id":"themes/indigo/layout/category.ejs","hash":"7ea26a8a935886963eda82f41c7bd5270cf780d9","modified":1501328737692},{"_id":"themes/indigo/layout/index.ejs","hash":"39477807b98b2d2df78f3b82498a11e90be8222c","modified":1501328737692},{"_id":"themes/indigo/layout/layout.ejs","hash":"d52f43fa9572d70cae834e4887c8897b43744805","modified":1501328737692},{"_id":"themes/indigo/layout/page.ejs","hash":"afb98face24d39a21ebbbde6592a9afc98572aa4","modified":1501328737692},{"_id":"themes/indigo/layout/post.ejs","hash":"afbf8532dc8d148ca4dff2ca127a3382907cf2f5","modified":1501328737692},{"_id":"themes/indigo/layout/tag.ejs","hash":"36786a3de7f6cad58209603f7d84ba23addea174","modified":1501328737692},{"_id":"themes/indigo/layout/tags.ejs","hash":"20466446c41409d14a3d42ccaec24a65a045efef","modified":1501328737692},{"_id":"themes/indigo/languages/en.yml","hash":"1957d2bfc3a4cef299f4f169b431e9b1128ba162","modified":1501328737692},{"_id":"themes/indigo/languages/zh-CN.yml","hash":"7dc6ae434dde390b6768d244132e23cc78c33817","modified":1501328737692},{"_id":"themes/indigo/languages/zh-TW.yml","hash":"6a9e820be66eb12ae746f2527e0dc1adf927c685","modified":1501328737692},{"_id":"themes/indigo/scripts/plugins.js","hash":"e439d717513616bedeed37ba9b05117470809b21","modified":1501328737696},{"_id":"source/images/logo.png","hash":"64e2cf379aa3c956af5a30245303af09400e48c2","modified":1487538509302},{"_id":"source/images/选区_003.png","hash":"26b134073573587cd73912045f3689da58e7596f","modified":1495337080000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (101).jpg","hash":"c1b7963d71bbeede288c5c2a91059c327401ddfa","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (102).jpg","hash":"59945d7acf6e5d81d636a9dc5cb5dfc5d2d6f358","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (113).jpg","hash":"033186e93a166371345eeef4f4fed1d62257e379","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (117).jpg","hash":"55f3630a591106a7b718228c311c994329f2ecdc","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (116).jpg","hash":"948060b4b3091122caab7346bba8ac753943e032","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (119).jpg","hash":"a271b3401dab1bc6b4f58ea6caff1f9ed37c837a","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (12).jpg","hash":"54e4f1eafb53c10100a8b3dabd54d30fc09d2da7","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (120).jpg","hash":"5c06d9819bdaecdacb7d20a65dd841a532d27718","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (121).jpg","hash":"ed42ce842404558fd66bedbdb172674a5f3dc6ec","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (122).jpg","hash":"04f5a7993610a3ec32bfe64f60138f712d681e53","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (123).jpg","hash":"4e1984c09bc3440a3dfc5c777657ed38eac382b8","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (124).jpg","hash":"60c76ddee2c656a72bfa450f32157945f8b52691","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (125).jpg","hash":"7f5923b0d884a23e25ac45325079b82b15da6763","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (126).jpg","hash":"6a944c4445fdc6bb1eaefb65e5fb5f4c25703766","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (127).jpg","hash":"e02f32c3d297bce464770711b2eeeaca75d89e5d","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (128).jpg","hash":"5259dbd19158d43130950558657f4b0456b73f06","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (13).jpg","hash":"5a13798d530a13fc0a5158aed624ec0725735dc8","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (130).jpg","hash":"39bf53d73355b9057cbfc09822501ffa74093b90","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (14).jpg","hash":"121068910023a888f89d4077a54cfb13de1b511b","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (15).jpg","hash":"aa6128bd03f845d86a36d2090174bfc2835a8dec","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (19).jpg","hash":"1d59e149426c7b6eb0ce45fcc9c6e99e9dca79f1","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (2).jpg","hash":"aba261a99d13340fb018445f3af614bbf8327768","modified":1496084310000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (20).jpg","hash":"1c12c44431dbcecd6598c04e269353718dad5c85","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (23).jpg","hash":"f4988b91168be9d7cb544c2eb4b76b24aef09968","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (22).jpg","hash":"c6e8f52f0005ef2288b5bd07cb6336b43bb35b89","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (24).jpg","hash":"588fc9b55335181e07c800bf5d082f43da4949be","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (26).jpg","hash":"20d534755aa84d00b4f4d93709fa74f65f0446de","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (27).jpg","hash":"1481bceb79428f46bfa45508dacb7fe82ae07e48","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (28).jpg","hash":"a960f8c150e33dd52d122d068ca1f524ba3caed7","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (29).jpg","hash":"e2f9f83bba31bf6007dc7e910a5446ce7edb0af3","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (3).jpg","hash":"de530091eab8981b065a4f49d95b3487c5916b26","modified":1496084310000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (30).jpg","hash":"d8b4fc7bfa94e311bab315a5025fc88d48c5d6af","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (31).jpg","hash":"d2da59633628c6863795cedfb6e8bf4f91b73d8c","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (25).jpg","hash":"2692564debd4adab0e5f377f86748514ae384274","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (34).jpg","hash":"10fc2fb5bdee9a0039f0c7c5abb8eda4e637cac3","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (37).jpg","hash":"f951ae16a2fd73825b523f56d6bab9378aa4f24b","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (38).jpg","hash":"76c33d1880778d83c52d490965e0b2e1d055df7b","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (4).jpg","hash":"dcac6df5d7659b90bf4bb4775c50d8c40c5647f8","modified":1496084310000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (40).jpg","hash":"3875530583c81d1801b976c9d421d8682647d0f6","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (41).jpg","hash":"6972be782fbe6a3ed5ae83944033f44868a7fe4b","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (46).jpg","hash":"1394e8555a421fd8750078afb5d0addc5ecf3f24","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (47).jpg","hash":"7fe09592aa61f568539c52b3c906993fa7ea1d99","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (54).jpg","hash":"79e348bfc3a5ea6f0914267b2ca86c7cc4fee02f","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (59).jpg","hash":"b75cff8f077e4dd5fbfb9d09d26a7d4b8c0302e1","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (6).jpg","hash":"ff7eb103d218b4af7215b39f5890c01dc8996be0","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (61).jpg","hash":"0d69d32911617d1f8a83c7087146335d246dc88f","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (64).jpg","hash":"af2d967dd346a7acda94e64653898891c656c7ef","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (66).jpg","hash":"c59a8a44077685bc8140c33bfa23b84d952a5cc2","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (69).jpg","hash":"2cdebb6f1a58903fa1fda74aa5c3bbc864bdc6c3","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (70).jpg","hash":"7f0c098a988ae04b28cf6efe44a3af7b9de3e465","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (7).jpg","hash":"c8924167d3619abc8368acd24fa69ac75e84fdb0","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (71).jpg","hash":"776ec67a86b1ce711a8992a3fa8169ca53947553","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (72).jpg","hash":"b69ff5fc3152eba31494c2a66d104e3bd695f2a7","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (73).jpg","hash":"e6982875f1f6269386a795761b684facc8265b93","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (77).jpg","hash":"7c96dbdd5f1c5b8560ce2e25d86bbd850af7fbf6","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (78).jpg","hash":"84212c8647d71018844c4798e9bf20f6490063c6","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (79).jpg","hash":"e2c2a44a9edd007be5d4cdc963bc43e05815a06f","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (82).jpg","hash":"15b35ca84b0dc43a8b5506acdbbcefb8b702e769","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (85).jpg","hash":"fa7a03cb23a893a2945c4c567e14c9abb575508e","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (93).jpg","hash":"34a7f80884206a22994ad9500903a058e1886e70","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (96).jpg","hash":"68415be63aedeb925d0a09bd9db99362cc4f9520","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (97).jpg","hash":"f58dd538d386e8ad81843d914f392b8124160b76","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (98).jpg","hash":"d9d22ea652dfdd42f0c40d0583e22a492fca9ba9","modified":1496084312000},{"_id":"source/love/1617meitu/1.jpg","hash":"b88a6007df22010884d4d2274a9b9be19bdd028e","modified":1496115382000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (95).jpg","hash":"6f0290ac8f25dbd6100cf2bfb3c7879ed9e59af1","modified":1496084312000},{"_id":"source/love/1617meitu/15.jpg","hash":"cd1bf322f694e8bd4d460c5b04b5e418e30e6baa","modified":1496115382000},{"_id":"source/love/1617meitu/16.jpg","hash":"b68a83f937cf50d738f0778c2e1d0250df9f4c05","modified":1496115382000},{"_id":"source/love/1617meitu/19.jpg","hash":"748076802b9f8efc3acd5bfd10c8edbde0d2924f","modified":1496115382000},{"_id":"source/love/1617meitu/21.jpg","hash":"0b39cf40560500a8c561fd14a1b5dc4cf12ea90d","modified":1496115382000},{"_id":"source/love/1617meitu/20.jpg","hash":"4ca7f5a98df0eaa88840000ba99c909b64fdb315","modified":1496115382000},{"_id":"source/love/1617meitu/23.jpg","hash":"19f67b4b560a84f2d79a3301a1efa3b27b39ee61","modified":1496115382000},{"_id":"source/love/1617meitu/22.jpg","hash":"2f79de3bd061d5b35006a4a52f5df0a2fb252519","modified":1496115382000},{"_id":"source/love/1617meitu/28.jpg","hash":"182cb6ac18f58dfba4da4b93e3acc1db46713932","modified":1496115382000},{"_id":"source/love/1617meitu/30.jpg","hash":"386e5fa461d06bf3968373b27189bbc7e603f4d7","modified":1496115382000},{"_id":"source/love/1617meitu/34.jpg","hash":"ca1ffcbfe7e53fe702b31cfbfd714d74c1a2fcd2","modified":1496115382000},{"_id":"source/love/1617meitu/6.jpg","hash":"40f4796d0bd51cd478d74d6a4a3be6de6f056f19","modified":1496115382000},{"_id":"source/love/1617meitu/7.jpg","hash":"89b789c15e2aeee83a2cf1b32e969f492af7a001","modified":1496115382000},{"_id":"source/love/1617meitu/8.jpg","hash":"0123a6a0a18b611843a933fe3f904bdcb91a6250","modified":1496115382000},{"_id":"source/love/1617meitu/9.jpg","hash":"06e63c9781cd57f701d9a6b11275cd251537941e","modified":1496115382000},{"_id":"source/love/qinhuangdao/qinhuangdao (1).jpg","hash":"1fc5c65192f889fe6bf45b10f40958a566ec0b3d","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (10).jpg","hash":"3a69d5ee110dcf43054ce71b99287bad0ab1f068","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (11).jpg","hash":"4fea31b35669ceac74654caea7d0d1c0d90f76c4","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (12).jpg","hash":"a05692a3b6626001e029ab75dda11854d62f20fc","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (13).jpg","hash":"4ae9e8b9f2446241c2ffcea356db3930ad257e1d","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (15).jpg","hash":"22dce11e696e02e880b2a6f73982834027f6d341","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (16).jpg","hash":"13fa3ac54f98fdf0d2d5e0682046b62cb9f1de42","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (17).jpg","hash":"b692d1b027464dbd9c25d3b62495537e691f9b2d","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (18).jpg","hash":"3470c512f5a8a3dd70b9282abddb91bd507a68b1","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (19).jpg","hash":"15d1ae80559b616e731f7d6922353a443ca4c61a","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (2).jpg","hash":"6480e8be7a1c96a6a7f7e4c853a8d6a0ab71556b","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (23).jpg","hash":"1ee49f9ac1e05e91effae12a64be1a64a5c3a26d","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (22).jpg","hash":"186fd0631eb773a156fcf0a580722b75532eead8","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (24).jpg","hash":"b045ac94ecaf2554b95ed699814cf2286c9540b0","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (25).jpg","hash":"1f6a6d1469724364d882fdcfe860a95b4909502e","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (26).jpg","hash":"d98ffbc4e27aee81e7cfb20448ba3c0a7240847e","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (27).jpg","hash":"4bd702a2d316c4074abf643dc5de80b1df0696eb","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (29).jpg","hash":"3999d223b9f54c44852695399bd7d8c4a7505e7c","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (3).jpg","hash":"92fcf92c6c6caa7ef53b5fccc4e15315d94c014b","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (30).jpg","hash":"388284c232c0eb41e8fc5779f3ca7da117ab6d9f","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (31).jpg","hash":"2d6486869372357e64ca284eb6c37cb98582e494","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (32).jpg","hash":"976b3b0f01ae6f6867c6efaa6d78e2845e9d8a52","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (33).jpg","hash":"72897e5f8fb8c84a3ec85b18e858b0739d218949","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (34).jpg","hash":"65dcf10b577cc471a4de2d27e58a19d500599117","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (35).jpg","hash":"b95e717bc3f989be66000660453e6bd0d654539e","modified":1496066464000},{"_id":"source/love/1617meitu/33.jpg","hash":"4c6f2dbca620b5637ef7a2c2cf20d5a549180a23","modified":1496115382000},{"_id":"source/love/1617meitu/4.jpg","hash":"9abf158ec6a30698561bd168bd997c52f4a36da9","modified":1496115382000},{"_id":"source/love/qinhuangdao/qinhuangdao (36).jpg","hash":"2ce3b13e10fecf5b1f697227f2999144889a99db","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (37).jpg","hash":"94b5e0fa17e33797b808fa75fa4e09c3627ade28","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (4).jpg","hash":"36aeb9d1b3edca111e8a012a68996e8ed54deb2e","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (5).jpg","hash":"4013b4b8630c6a55030a1453cdf9cb8f11f136f2","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (6).jpg","hash":"20a7ab8d45740a0c57c1abae68c2740f2dbb2f62","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (8).jpg","hash":"bd575e99ad0a08998ea1fa5ad78da7dd94eac95e","modified":1496066464000},{"_id":"source/images/选区_001.png","hash":"07660ebf6634039a6ba2ba0c67d664c3b075567f","modified":1495331473000},{"_id":"themes/indigo/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1501328636151},{"_id":"themes/indigo/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1501328636151},{"_id":"themes/indigo/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1501328636151},{"_id":"themes/indigo/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1501328636151},{"_id":"themes/indigo/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1501328636151},{"_id":"themes/indigo/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1501328636151},{"_id":"themes/indigo/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1501328636151},{"_id":"themes/indigo/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1501328636151},{"_id":"themes/indigo/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1501328636151},{"_id":"themes/indigo/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1501328636151},{"_id":"themes/indigo/.git/logs/HEAD","hash":"723bdc2fb168ebea44e1a67eef3c12735c308813","modified":1501328737676},{"_id":"themes/indigo/layout/_partial/after-footer.ejs","hash":"9ac30b9439fab69973cf4722dbf2945a18fd3804","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/archive.ejs","hash":"55cd81ef9183426d6d99fd91550fce0a9cc92aa0","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/footer.ejs","hash":"e1a71a30a1c7a664ddf3ba3e7eb3a5b90bc4b33c","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/head.ejs","hash":"e01d1987f1016c521a19355d38d35dc78d20f3da","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/header.ejs","hash":"6156bf20791e46fc1c5872113276c1c1f5c13773","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/index-item.ejs","hash":"ec7b3ec79bbbead9c7e43e2e6c6b5c8bef509410","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/loading.ejs","hash":"bc4cb19b20de55a0332647f4dca9684184383685","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/menu.ejs","hash":"d39afaad6b0dd2a3ae27e6db3e9a6cd6014622fa","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/paginator.ejs","hash":"dc27242927890f130a64400596b9b7ad5fca8972","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/post.ejs","hash":"a87d9b0485b3bf4cdfdad890e5974c43dbaa8240","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/script.ejs","hash":"439d6315a1b16e32b77a68c3f0cb2961d581086a","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/search.ejs","hash":"c2091c621b5480ef1e69d72027028cec8e929892","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/tags-bar.ejs","hash":"19eff4876d31080a427644f7a43fe172d0c008c6","modified":1501328737692},{"_id":"themes/indigo/source/css/style.less","hash":"3e151cd162e8af87d7ca90e3067f7bd99a25f823","modified":1501328737708},{"_id":"themes/indigo/source/img/alipay.jpg","hash":"6054d9ed2ca7cd1f645b729e05632134467d4daa","modified":1501328737708},{"_id":"themes/indigo/source/img/avatar.jpg","hash":"62a4893b1a32e997dcdb6e467b10559df75221e2","modified":1501328737708},{"_id":"themes/indigo/source/img/brand.jpg","hash":"0e237f1b433851c156e1f1cdaeb044054b3b9879","modified":1501328737712},{"_id":"themes/indigo/source/img/cc.png","hash":"ebce75a62b40976a72d43f0bd937d859ac24d87c","modified":1501328737712},{"_id":"themes/indigo/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1501328737712},{"_id":"themes/indigo/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1501328737712},{"_id":"themes/indigo/source/img/wechat.jpg","hash":"ef069cc9e80c7553fd60589b0727bbbf8c6de372","modified":1501328737712},{"_id":"themes/indigo/source/js/main.js","hash":"26688338ac55bed772e630099d2ce1ed69ef1431","modified":1501328737712},{"_id":"themes/indigo/source/js/main.min.js","hash":"dcec14830cf056fbbab82313ecd5886a03cdf580","modified":1501328737712},{"_id":"themes/indigo/source/js/search.js","hash":"c3f80dee3bab6bd4895b55b849085c8af7d1e647","modified":1501328737712},{"_id":"themes/indigo/source/js/search.min.js","hash":"c0c3d048af0d6b840f6f1dfda08911c7bfdb5dc1","modified":1501328737712},{"_id":"source/love/16-17shenghuo/16-17shenghuo (1).jpg","hash":"540b1c93a47858514e44db0b81d8e0d1296426ce","modified":1496084310000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (10).jpg","hash":"3f443c47a2e1ead8385d75da457d3fc8bcb1f2d6","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (100).jpg","hash":"915a33bdbbd0b770a32b5ef4e694d753e080f456","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (103).jpg","hash":"67e50748e7643fd557aef9bba83d45674b7861c7","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (104).jpg","hash":"12b370acca8dcad5b01e27ac5e2a02e15d465854","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (105).jpg","hash":"b41b13fe03c61ec28b615c32b6a95d55cb9b9347","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (106).jpg","hash":"b3103ddedb35000e2f0c87bb621461a3fdd329e6","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (107).jpg","hash":"8c789477b4c01a21ae82a290d74303da1b58c7e9","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (108).jpg","hash":"420fa000c514415b47d41a60ce45803332c38ce8","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (109).jpg","hash":"826da0fcf49b515560e70390c0faa73687ba89ac","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (11).jpg","hash":"af71eea214b78a0adc156c67123d42bcc5a7eaf8","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (110).jpg","hash":"4237a5703ea38a05406417d6fd8f292f66487998","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (111).jpg","hash":"fc1bda67f927d42f4a57cec5fc3dd4b8a64f55f9","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (112).jpg","hash":"4ada47d2206d5adbce1b21cc3155565e0b206a25","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (114).jpg","hash":"30f45a527569c55570292cd4c53a781baf0ba12f","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (115).jpg","hash":"75ce705469a77955406bb41aac999fbc096f6d1c","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (118).jpg","hash":"2f8c5c2a87964efab65a087fcad405d9d2ca8885","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (129).jpg","hash":"61c067ef99e9056d65d2c5be325b5937488904a8","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (131).jpg","hash":"2313cfc023d219781cb8bb0956dcd51a69bb18a2","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (17).jpg","hash":"8531e909ce24ab42e6489c79c9ecbeae5815fa3c","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (18).jpg","hash":"53b60814183ccae3dbde43d24d95ddaa370d9030","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (16).jpg","hash":"d00330ce9b703a0281e91fb4e380b2270a6e19fc","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (21).jpg","hash":"d943c87540b0195367748e656a1512fd425c417d","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (32).jpg","hash":"8002ed69a2cffe482f697c3c6037dd5f9db2659a","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (33).jpg","hash":"ff68feee3c43a32a472004140c9d2612f67144d2","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (35).jpg","hash":"876ac4a0c11de0fe2f8d17b2ec5c069bacfc5dd9","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (36).jpg","hash":"da416b29c1852223e9b3b8d4c32a99d37e6214b2","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (39).jpg","hash":"dffdf2d4c54ccae98bab8355c1c88a21d42c56f1","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (42).jpg","hash":"72b3814b662c313ab65ea03ea4e7dce71bea16cc","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (43).jpg","hash":"fd7454b649574a33e3bc8366ee804423c5a48c6e","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (44).jpg","hash":"c9d803f955ff260a2a37e4667778cc3f0c9ca308","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (45).jpg","hash":"ef9529227fda1b2f23c1968de4bf43cb9349f513","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (48).jpg","hash":"474aa0f264b6e61f07c59469e6ef91bcddf9e5ec","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (49).jpg","hash":"b3178c635f351400e495cceccd4b2149f81501c4","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (5).jpg","hash":"058d7e69d795f746d9545a0b29f46201f87f6f52","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (50).jpg","hash":"eff6dbc5c0600a5bdebfc384de7fa5a1cc02652f","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (51).jpg","hash":"6b53ca2aa476c1e193994c1ca757ef0da8570093","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (52).jpg","hash":"8b9fbb0ec183f9fd74c45d60f6cab40d3747b772","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (55).jpg","hash":"c6b2f76480f455f352d10de37da9366b2fa0b8d7","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (56).jpg","hash":"500ab7819259fac4a3ce84c7b2d225ebadd9e6c5","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (57).jpg","hash":"72a2c3cfead5b7fd6f4346e00d1ee6043adbf724","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (58).jpg","hash":"ae83468df02852cf373d677effcb88310d64aca3","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (62).jpg","hash":"78f638f68644fbae3c41c7110509638a51ede62a","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (60).jpg","hash":"b3862eb91574ab278f4767e8949b31ae6705fb6f","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (63).jpg","hash":"ee60ab4626cdc1974a84fd21edf130fa141f7310","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (65).jpg","hash":"32ae7e4a4a8e6a98e3c7570a85d39dce33529155","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (67).jpg","hash":"96b4ba9edcf9a3368e7c8113ad1cea9f35fa15f4","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (68).jpg","hash":"df2754f5c8851e62a7f05b205c607909ee7adad8","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (74).jpg","hash":"05a3071a59fa62dee355e95bb9f9880d1a7154e7","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (75).jpg","hash":"02c36f61e54c685304c7f82f1559e36c731c85e5","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (76).jpg","hash":"be8136749beaf39542459296fcfd264a1cf0f0be","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (8).jpg","hash":"4f4dba8bcf459a1f9a2349ba4db5e1b8c3c81dbe","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (80).jpg","hash":"5563ca10cb724392b886f4d758d2cf092bc4c909","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (81).jpg","hash":"46e3afeecfb1c0bd34dfa7860444a769cfb89cb2","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (83).jpg","hash":"c8aa3df611a7c1ceea6f18c9ede8d499868d18db","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (84).jpg","hash":"4cb089ecfd309df6676a5336877f36d9dba68e2e","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (86).jpg","hash":"c72b42c7a2ed5ef7ff6f6455ea155c2726f57cb2","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (87).jpg","hash":"fe040683ed856f082b4602a4514776b27e93ce6e","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (88).jpg","hash":"392f602d108f038533bad02d1b0773b3a4b4ea34","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (89).jpg","hash":"940c6bfb01ef3751f82df7eca86ef13f80ccfdbd","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (9).jpg","hash":"6de0a62744fec6388db1657b20ecd0f23197614a","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (90).jpg","hash":"23b5cd95deb9f4e45dd0794f73c0ff16cfcf0904","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (91).jpg","hash":"b87ad310416efae3ae19f83e886f9e40e9aea826","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (92).jpg","hash":"268d1a4c032ecb7d874b6da8bcc8dcc158b37fec","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (94).jpg","hash":"84b10a49091dd15ae6da3f1716a744547f36d0bf","modified":1496084312000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (99).jpg","hash":"e2d7f20f77a3fecf6a7a877a5622aa76ae7eef28","modified":1496084312000},{"_id":"source/love/1617meitu/10.jpg","hash":"092793ec78e8d862c0b3f11cac7ca37376b2a7be","modified":1496115382000},{"_id":"source/love/1617meitu/11.jpg","hash":"8ca9054c0022fbcbb4e60c114263237a7bef60c2","modified":1496115382000},{"_id":"source/love/1617meitu/13.jpg","hash":"82666a6dbb30eaf564831c4e07ace050ca0e9216","modified":1496115382000},{"_id":"source/love/1617meitu/14.jpg","hash":"b0d08ae26fc49adb6c5e67422ec51e48bebcbebf","modified":1496115382000},{"_id":"source/love/1617meitu/12.jpg","hash":"c174201e46b54fc6ffd94cda72be3fb99fc20317","modified":1496115382000},{"_id":"source/love/1617meitu/17.jpg","hash":"1cf7135258dad188f743a3391dca036a4ab2aa11","modified":1496115382000},{"_id":"source/love/1617meitu/18.jpg","hash":"86ee07c60dbf5a99aea1fdb2f92e6b6c85eb3148","modified":1496115382000},{"_id":"source/love/1617meitu/2.jpg","hash":"90619aaee3c208d755eda81ef24574c43fa8e9a0","modified":1496115382000},{"_id":"source/love/1617meitu/24.jpg","hash":"1595e4bdb179f66c65fd94400016782694b3170f","modified":1496115382000},{"_id":"source/love/1617meitu/26.jpg","hash":"46716717aa52a898b2891bf7d62880e7f4cf4f41","modified":1496115382000},{"_id":"source/love/1617meitu/25.jpg","hash":"f6dbf86a3bd500ca9ec764c527698c33dbece3ac","modified":1496115382000},{"_id":"source/love/1617meitu/27.jpg","hash":"6f57a4ac1bba94a3a9ff69157fc2100e29ac699f","modified":1496115382000},{"_id":"source/love/1617meitu/3.jpg","hash":"2e93c656c3d8ec0ffb0d626b2757717915527e38","modified":1496115382000},{"_id":"source/love/1617meitu/29.jpg","hash":"76be1a33f1690badc7b61b60d4a45b493dac522e","modified":1496115382000},{"_id":"source/love/1617meitu/31.jpg","hash":"bd35e0dc04c1b9a490f18a7b0262b9b1495385ba","modified":1496115382000},{"_id":"source/love/1617meitu/32.jpg","hash":"77b70c89562cfd3790eee9410f20f17bbc11cca2","modified":1496115382000},{"_id":"source/love/1617meitu/5.jpg","hash":"e48211a420e3c1f82a13f0f592659d4a3d7e1776","modified":1496115382000},{"_id":"source/love/qinhuangdao/qinhuangdao (14).jpg","hash":"28128dee802664295f981ae56ce77ad94a4b8edf","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (21).jpg","hash":"1e48b69722e92ec5e7ced6461742c8eafba08c3c","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (28).jpg","hash":"f208710d361d2d679a12b0e1f35505c86916c589","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (7).jpg","hash":"2a0b71482cc92aaf7190a4d342a5bfe1b4229c1a","modified":1496066464000},{"_id":"source/love/qinhuangdao/qinhuangdao (9).jpg","hash":"eef60d34a8495dce5456c662ff1359848f1eef92","modified":1496066464000},{"_id":"source/love/16-17shenghuo/16-17shenghuo (53).jpg","hash":"0cf83100d82a11b14c66222ee6044c74b3fb7261","modified":1496084312000},{"_id":"source/love/qinhuangdao/qinhuangdao (20).jpg","hash":"57a7d255c1f15c0e1517beb64793bbc37f1d5d53","modified":1496066464000},{"_id":"themes/indigo/.git/objects/pack/pack-f8ce95ec3bac06f9439200b7ad441811d007a50d.idx","hash":"a6e8f2bb25b8f449534e7b05ba77dc5ea2f17c1a","modified":1501328737484},{"_id":"themes/indigo/.git/refs/heads/card","hash":"dbb6000cae189daa40bb8fbde52512a451a1744d","modified":1501328737676},{"_id":"themes/indigo/layout/_partial/plugins/baidu.ejs","hash":"e44d526029f122e9c2c74f3a647c35002c818cbe","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/plugins/disqus.ejs","hash":"4a0c01e4195f685f9825fcd016d01249dbdd52ca","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/plugins/dynamic-title.ejs","hash":"23c101d45911eb0846533aaa2d409c43aa5e899a","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/plugins/gitment.ejs","hash":"5723d507eca4390e8e5d18c0770e7953b8c22f5a","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/plugins/google-analytics.ejs","hash":"a947f4076b54b48d4df5baf2d5b3c39b632c7576","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/plugins/mathjax.ejs","hash":"ea603a057196de53bd6afab1fddb93d11f27eb81","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/plugins/page-visit.ejs","hash":"2decb77bf3c1a064ea6ce1d4e78892c434d9c884","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/plugins/site-visit.ejs","hash":"8fbd0910828f1ab6eba728bdecc9811d623baae2","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/plugins/tajs.ejs","hash":"97b48fe10be1c71d4ff25ccec3bd92d97466c9c5","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/plugins/uyan.ejs","hash":"e370bd04ea5cf1c83e0c20516aff7ba3ca8b2d0b","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/plugins/wangyi-ygt.ejs","hash":"0540808912afbbd8dddbdd15b8d1b54426d8b221","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/post/category.ejs","hash":"c7476165721a3a5e34d00d8c5c07e1e5474cd800","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/post/comment.ejs","hash":"298e3ad59b358620b49dc933d39e5f26388d43be","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/post/copyright.ejs","hash":"968b27ca952d01b066cfe49fb670faf177d6b67e","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/post/date.ejs","hash":"ea85b46e12d3b9c3612eef7aa76289a663fbc096","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/post/head-meta.ejs","hash":"b0c680ce5b8aaf461a6731b1ff1287bd140c168a","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/post/nav.ejs","hash":"11e7d504f7c7a3c4c052da13cfa8ea4862c9383e","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/post/reward-btn.ejs","hash":"41c242fe3159dc68cec8dd00ab6d2663f5a51179","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/post/reward.ejs","hash":"801d786ed00ba615a3e3b9f19b238de81225a32e","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/post/share-fab.ejs","hash":"93482ad7d1e01b966f5ee1c5d12b88564e02b349","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/post/share.ejs","hash":"8df0d7bf6f8e106cdbdac2dd10a97367aa0695f8","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/post/tag.ejs","hash":"b3dc38652c4a018a37418136478dcd522fc49f79","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/post/title.ejs","hash":"062d56cb88ae2be3a6616b911d4ebeffcbfe3cff","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/post/toc.ejs","hash":"b6123e895c16ace651f1832281ff655776d4068c","modified":1501328737692},{"_id":"themes/indigo/layout/_partial/post/updated.ejs","hash":"5caa71745aa340ce57938a930f3b898ee7518d74","modified":1501328737692},{"_id":"themes/indigo/source/css/_partial/archives.less","hash":"7d2a6886265386c640e94ffca3f042675f701a35","modified":1501328737696},{"_id":"themes/indigo/source/css/_partial/article.less","hash":"f701f8120cac05fe392d129b28715bed87ee453f","modified":1501471110804},{"_id":"themes/indigo/source/css/_partial/gotop.less","hash":"b7db31b9bc563c10b9e3cf3e6d9cfddfeb3e805a","modified":1501328737696},{"_id":"themes/indigo/source/css/_partial/header.less","hash":"90f0948a9182c14b1dac1e9dbed3c883543266f9","modified":1501328737696},{"_id":"themes/indigo/source/css/_partial/highlight.less","hash":"58492b7cdb45fe09b026b2f34e8ae69c2ddb8228","modified":1501328737696},{"_id":"themes/indigo/source/css/_partial/layout.less","hash":"d648da036a12470009f852902946b6c3521ad49b","modified":1501328737696},{"_id":"themes/indigo/source/css/_partial/lightbox.less","hash":"9b961eb1d70e7658f42cf2ca895fa5e35a6b6541","modified":1501328737696},{"_id":"themes/indigo/source/css/_partial/loading.less","hash":"f9d06a1e24fb4857fd18d7a0bfbb3a0ab2d1c742","modified":1501328737696},{"_id":"themes/indigo/source/css/_partial/page.less","hash":"e92ccb53e6ac73a51498c6a9672db9d0d2bc7f1a","modified":1501328737696},{"_id":"themes/indigo/source/css/_partial/postlist.less","hash":"1c041bf91106808e5480c60d9ece45431bb503b3","modified":1501328737696},{"_id":"themes/indigo/source/css/_partial/reward.less","hash":"4857f90bb57fc22ca3f942d8934d86d5e9e82c1e","modified":1501328737696},{"_id":"themes/indigo/source/css/_partial/roboto.less","hash":"2e0469ed8161d5672d903ca1a8027cd65fe007f1","modified":1501328737696},{"_id":"themes/indigo/source/css/_partial/search.less","hash":"1d6641ae7568a0153d24beba9fd9704d2b155f6c","modified":1501328737696},{"_id":"themes/indigo/source/css/_partial/share.less","hash":"27d80bcc96a53dd1e7eaa9a7d746e4b212357302","modified":1501328737696},{"_id":"themes/indigo/source/css/_partial/tags.less","hash":"959f4373fda6e45f6a4041a995ed3ea8a05a5170","modified":1501328737696},{"_id":"themes/indigo/source/css/_partial/variable.less","hash":"d714ad7a29b1d124140a25924286b497e65f6c6c","modified":1501470948621},{"_id":"themes/indigo/source/css/_partial/waves.less","hash":"77bfd0b373b0469eb0176167fb076ccda4edf2a7","modified":1501328737696},{"_id":"themes/indigo/source/css/cloudTie/_inputBox.less","hash":"3156898bbbbe0d897f475c03e1e6245e97399613","modified":1501328737696},{"_id":"themes/indigo/source/css/cloudTie/_joinCount.less","hash":"c1e5821189d17419869249cbd556d8da992fbfd3","modified":1501328737696},{"_id":"themes/indigo/source/css/cloudTie/_reset.less","hash":"9228ab9e7d92a3cd8cda340ae67f5b172863c835","modified":1501328737696},{"_id":"themes/indigo/source/css/cloudTie/_share.less","hash":"9c95ca439e85fadbca00778463a9375fbeba9ad2","modified":1501328737696},{"_id":"themes/indigo/source/css/cloudTie/mobile.less","hash":"0d68b7606a1b3c14a18a03ae3c80e4602f13c75b","modified":1501328737696},{"_id":"themes/indigo/source/css/cloudTie/pc.less","hash":"8038abcea49d6f74a6ff155cc565b4a675107ae6","modified":1501328737696},{"_id":"themes/indigo/source/img/author.jpg","hash":"4f3adaac9cdd22d388a98ceae77dddf36b3950a7","modified":1495611431985},{"_id":"themes/indigo/source/js/cloudTie/loader.js","hash":"299d58e74946a2aeb8db74d3e4b6b5adfe694e15","modified":1501328737712},{"_id":"themes/indigo/source/js/cloudTie/loader.min.js","hash":"e73fcd885be2c4585f154861c9969e3c955d03e3","modified":1501328737712},{"_id":"themes/indigo/source/js/cloudTie/mobile.min.js","hash":"859e3efb15db88cedfd18f8523ecfd21f3a22324","modified":1501328737712},{"_id":"themes/indigo/source/css/_partial/fontawesome.less","hash":"c19f5e28365c7ba6fa938591a8021da7d603253d","modified":1501328737696},{"_id":"themes/indigo/source/js/cloudTie/mobile.js","hash":"67a0a31ee1e491635369b0401d629e97fccd4d94","modified":1501328737712},{"_id":"themes/indigo/source/js/cloudTie/pc.min.js","hash":"aea28510192fb36a36bf174716a39afd1ca20240","modified":1501328737712},{"_id":"themes/indigo/.git/logs/refs/heads/card","hash":"723bdc2fb168ebea44e1a67eef3c12735c308813","modified":1501328737676},{"_id":"themes/indigo/.git/refs/remotes/origin/HEAD","hash":"7f141be72288af81f8e55d94df5da3f87101e8f1","modified":1501328737676},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1501328737704},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1501328737704},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1501328737704},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1501328737704},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1501328737704},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1501328737704},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1501328737704},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1501328737708},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1501328737708},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1501328737708},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1501328737708},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1501328737708},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1501328737708},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1501328737708},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1501328737708},{"_id":"themes/indigo/source/js/cloudTie/pc.js","hash":"25d4ae345f8122f8c7e8e48959d37523dd1e4abb","modified":1501328737712},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1501328737700},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1501328737700},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1501328737704},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1501328737704},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1501328737704},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1501328737708},{"_id":"themes/indigo/source/css/fonts/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1501328737708},{"_id":"themes/indigo/.git/logs/refs/remotes/origin/HEAD","hash":"723bdc2fb168ebea44e1a67eef3c12735c308813","modified":1501328737676},{"_id":"themes/indigo/source/css/fonts/fontawesome/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1501328737696},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1501328737696},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1501328737700},{"_id":"themes/indigo/source/css/fonts/fontawesome/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1501328737700},{"_id":"themes/indigo/.git/objects/pack/pack-f8ce95ec3bac06f9439200b7ad441811d007a50d.pack","hash":"4b2cc5cab80703efb0e13733631c6e224b334887","modified":1501328737484},{"_id":"public/atom.xml","hash":"bff79d8bcc7f8ec2ce69b2d160e8ff33728f3b3e","modified":1501482762038},{"_id":"public/content.json","hash":"dbbac26bf860ebd01b7521a75378634ea2bc63c2","modified":1501482763368},{"_id":"public/search.xml","hash":"0ee537a7472ab37db0a8482497ced89e38a14c2c","modified":1501482763402},{"_id":"public/about/index.html","hash":"628bf6155a477bf63ed72d05b36872f2d5b9b79f","modified":1501483547397},{"_id":"public/source/index.html","hash":"e4700963fcc11b853f74546ea992f5d793ca0c29","modified":1501483547398},{"_id":"public/2017/05/16/错题本/index.html","hash":"b5a72a7155c187d984f63820db5eee2a7952e548","modified":1501483547399},{"_id":"public/2017/04/16/test/index.html","hash":"2d33f6c5337b0338f51859d8bfd3212f22617e0e","modified":1501483547399},{"_id":"public/categories/photos/index.html","hash":"97b3dac22f5eab515e89cff43ac3acf98fa997d6","modified":1501483547399},{"_id":"public/categories/English/index.html","hash":"5347663703ed0e85b44f3eece700c16ddd758f94","modified":1501483547399},{"_id":"public/categories/SpringMvc/index.html","hash":"92632c181f4b461b9f85adde1eedab5d279b4340","modified":1501483547399},{"_id":"public/categories/js/index.html","hash":"4d72d15b52c38f5b6a095ddc74f05a299fd92bf6","modified":1501483547399},{"_id":"public/categories/java/index.html","hash":"4fd6343e8a15f89e508311d0972df386faa2e9e9","modified":1501483547399},{"_id":"public/categories/angularjs/index.html","hash":"04b64316d071e65b706e4848cd13dbd6044d2b13","modified":1501483547399},{"_id":"public/categories/css/index.html","hash":"1a1729e8399fa0033b81a75e8dbac7ba6dfb7688","modified":1501483547399},{"_id":"public/categories/php/index.html","hash":"99b1e7ad45525e27d3113ce9496f7e4be7da2a70","modified":1501483547399},{"_id":"public/categories/数据结构/index.html","hash":"f0c587ba4e09513cd862d3e2c416aa6024e531d1","modified":1501483547399},{"_id":"public/archives/2017/04/index.html","hash":"9dad3658b9e6f50de7b7b2a57177c08d42a57572","modified":1501483547399},{"_id":"public/archives/2017/06/page/2/index.html","hash":"b2d1b9a7b474d404f5544100a13771c2c24f7dc2","modified":1501483547399},{"_id":"public/archives/2017/07/index.html","hash":"585fba814c4e16cd57f9f38571971ab9abb18008","modified":1501483547399},{"_id":"public/tags/GET/index.html","hash":"2d7b3a3a6acc36b730d137c15765359e076af470","modified":1501483547399},{"_id":"public/tags/POST/index.html","hash":"79a5f6f2591bee1e44ad2592cce8aef7c72cb57d","modified":1501483547399},{"_id":"public/tags/https/index.html","hash":"9cdc915897ab91fd9a5bc6d97bb61c35715d4f89","modified":1501483547400},{"_id":"public/tags/asynchronously/index.html","hash":"cde8250a99bf38d8df15a81cb57e49603a4dedcc","modified":1501483547400},{"_id":"public/tags/ubuntu/index.html","hash":"800907349e583b9213ab4b5cbf64b8d6b3e75b81","modified":1501483547400},{"_id":"public/tags/enviroment/index.html","hash":"9ca1173f3ca83949e3826fa0f562637214cc93ba","modified":1501483547400},{"_id":"public/tags/session/index.html","hash":"55690d139c4b9e30008652202f129d8daa8445ba","modified":1501483547400},{"_id":"public/tags/API/index.html","hash":"91b7aec37dafd7c9f0ba980dfab21e24f5132e36","modified":1501483547400},{"_id":"public/tags/demo/index.html","hash":"f4d614259a15b77d4c8627cc90c0bae5f6c72df0","modified":1501483547400},{"_id":"public/tags/浮动/index.html","hash":"6691ecdf73a167cab59d7b40f0ea1ea4095f91d7","modified":1501483547400},{"_id":"public/tags/实战/index.html","hash":"a12f2a8c965860acfbfdc43c16a70e2ab86717cc","modified":1501483547400},{"_id":"public/tags/git/index.html","hash":"3f7fc21e36364603c4d34558a38e1acec36c60c7","modified":1501483547400},{"_id":"public/tags/安全/index.html","hash":"ba1b459ed53a5cce2c8bec2727ac7de35b8a3511","modified":1501483547400},{"_id":"public/tags/服务器/index.html","hash":"4c15e63637a2eb663e5e16a281f6ad66f9ec8c98","modified":1501483547400},{"_id":"public/tags/性能/index.html","hash":"31f4cd3da3828da80330dd103d489104396853c4","modified":1501483547400},{"_id":"public/tags/小程序/index.html","hash":"53fc17f4da880b536f38669e04521ab2e9970214","modified":1501483547400},{"_id":"public/tags/sql/index.html","hash":"a973bd062d4cbc32c99c73588a68d758a00ad9a5","modified":1501483547400},{"_id":"public/tags/关键字/index.html","hash":"6702f5871edcd576897517f3b1177d0334155d88","modified":1501483547400},{"_id":"public/tags/hebinate/index.html","hash":"43ebcf83d44db6ced6945dad22d5775c50499b71","modified":1501483547400},{"_id":"public/tags/链表/index.html","hash":"9967ecee79bf7e8fa62f92e99d9e11acb905394c","modified":1501483547400},{"_id":"public/tags/wx-request/index.html","hash":"88b681efa86379e920893e51017a692184dcf18c","modified":1501483547400},{"_id":"public/tags/hexo/index.html","hash":"bef9aff99df04874327846a8152ce07ec1641b3d","modified":1501483547400},{"_id":"public/tags/时序图/index.html","hash":"c9405e028a1554a0621ec291e527825fc340541d","modified":1501483547400},{"_id":"public/tags/web/index.html","hash":"d98b41e32f52388fea22e9b06e3b3b0c1ad6aa7f","modified":1501483547400},{"_id":"public/tags/错题/index.html","hash":"d7325497cbedcee6363fa466f32eab9fbbcc76a3","modified":1501483547400},{"_id":"public/tags/加密/index.html","hash":"3e5ae71e28ec2946744ba2d4f726f84f7cc7eeb2","modified":1501483547400},{"_id":"public/tags/算法/index.html","hash":"1d6caf8c4cb6776a4af20c4b8abea8a75ad92eea","modified":1501483547401},{"_id":"public/categories/index.html","hash":"b0108a8a1e40e974be659f82ca3aa446c507eb4e","modified":1501483547401},{"_id":"public/tags/index.html","hash":"eff0c19bb5d50fb2c404fb03dd88d5a5dc01338c","modified":1501483547401},{"_id":"public/2017/07/16/http-and-https/index.html","hash":"1adf660f7247cf19d23d5030db476e93055978d4","modified":1501483547401},{"_id":"public/2017/07/06/Using-session-in-SpringMVC/index.html","hash":"67c27571cde804f729d35509c798d63e46aaf758","modified":1501483547401},{"_id":"public/2017/07/05/Solve-js-asynchronously/index.html","hash":"69559476982a379c09688ae332b7234215b6a3fb","modified":1501483547401},{"_id":"public/2017/06/29/WaterPurifier-API/index.html","hash":"2a9521d9c07114958eb1ce00453d7be8c0abda86","modified":1501483547401},{"_id":"public/2017/06/26/git-command/index.html","hash":"3a1c617f8f9ddadcc077a34ce8240194d89e21af","modified":1501483547401},{"_id":"public/2017/06/26/Enable-https-in-Spring-Boot/index.html","hash":"16e6a189b8802718be77d45b69be905ef5218c5b","modified":1501483547401},{"_id":"public/2017/06/23/http请求的封装与过滤/index.html","hash":"ef8904cf21978573ea96333a652369aa18d3cf8b","modified":1501483547401},{"_id":"public/2017/06/23/时序图使用记录/index.html","hash":"f7ce1c1f995cd7b6f4b402568031658a3207c3a3","modified":1501483547401},{"_id":"public/2017/06/23/在IDEA中部署tomcat/index.html","hash":"8cfaeab0ee4d01dab3793d1f3992368db427b72a","modified":1501483547401},{"_id":"public/2017/06/16/Spring-Idea-Ubuntu环境搭建/index.html","hash":"76db5445bc823e51f26f3f87c8ea6b5b762a7316","modified":1501483547401},{"_id":"public/2017/06/14/微信小程序wx-request请求服务器配置问题/index.html","hash":"8e5e9ee0c5c2d7409b7636ad5aed8218bc9fa7f2","modified":1501483547401},{"_id":"public/2017/06/13/验证信息真伪加密算法记录/index.html","hash":"971ca502c37fc466145fbadcebe9dd5f1a40a06d","modified":1501483547401},{"_id":"public/2017/06/06/sql关键字报错/index.html","hash":"d68267e15350579c3fcfbf56a81990993232b1a9","modified":1501483547401},{"_id":"public/2017/06/03/css浮动流代码实现及实例讲解/index.html","hash":"f1506f9882171ef026bf7508858f480f6e33ed00","modified":1501483547401},{"_id":"public/2017/05/27/IDEA性能优化篇/index.html","hash":"49d72e0ab87abc89276a8d9ccd1c9986bea78719","modified":1501483547401},{"_id":"public/2017/05/19/手把手hexo建站/index.html","hash":"6eeb401c27508e7ef75d523878f9c7c177876cda","modified":1501483547401},{"_id":"public/2017/05/16/初始cookie与session/index.html","hash":"0d479aafc6d9172a7157db6f1efdde1988024462","modified":1501483547402},{"_id":"public/2017/05/16/The-brief-process-of-building-a-personal-blog/index.html","hash":"3f557304d09ba94a0f4032e2f98756cc010624d0","modified":1501483547402},{"_id":"public/2017/05/16/Difference-between-GET-and-POST/index.html","hash":"6523d5715db66a650c0a1cd767dbc0f70c82802d","modified":1501483547402},{"_id":"public/2017/05/16/链表/index.html","hash":"8b0531b95086f88fe5d3a2c8f1e40a81d3079e56","modified":1501483547402},{"_id":"public/2017/05/13/基于链表的C语言信息管理系统/index.html","hash":"344da861f6568f909664c4b2212b3585b7c045e4","modified":1501483547402},{"_id":"public/2017/05/13/angular-thinkphp上传图片/index.html","hash":"02efdaed422391c75ad4b2594835532ee75c8780","modified":1501483547402},{"_id":"public/2017/05/13/订单号生成规则简述/index.html","hash":"3cd765bd775e46e537706368745588dbcb5bf935","modified":1501483547402},{"_id":"public/2017/04/30/16-17跟媳妇平凡的日子/index.html","hash":"6e7cbe7aa1b4bbc4f39549af8f94cc1d2448f165","modified":1501483547402},{"_id":"public/2017/04/30/16-17美图集/index.html","hash":"287d3a8b54862e65dbf2141ef730b207e82eea17","modified":1501483547402},{"_id":"public/2017/04/29/秦皇岛/index.html","hash":"c6d8faaa3224c9e2fe0b5f3fc4b1f622e0a92067","modified":1501483547402},{"_id":"public/2017/04/16/搭建个人博客简要/index.html","hash":"918f2e0dbfde8a4bfcbf1d08d9cf81cb47f66baa","modified":1501483547402},{"_id":"public/archives/index.html","hash":"7009d83543c711eece870d25da95634d84616abe","modified":1501483547402},{"_id":"public/archives/page/2/index.html","hash":"84e59940ff74b71be07105419f700a2437fd396e","modified":1501483547402},{"_id":"public/archives/page/3/index.html","hash":"ed12f7af11d68672507d3330cef69b3338a4a85c","modified":1501483547402},{"_id":"public/archives/2017/index.html","hash":"52ce61f976743d0ef6bd90e9986bfc90e9172e66","modified":1501483547402},{"_id":"public/archives/2017/page/2/index.html","hash":"b3c5bd2a3a866b94d32bb871b83945eae5117985","modified":1501483547402},{"_id":"public/archives/2017/page/3/index.html","hash":"cd710be59082918fae8afe8704090edeb6261a21","modified":1501483547402},{"_id":"public/archives/2017/05/index.html","hash":"850a68907cfa86ed5202509ecc52623e7c92aeee","modified":1501483547402},{"_id":"public/archives/2017/06/index.html","hash":"8686a3462cddda1833de48981bec9bee43c209b0","modified":1501483547403},{"_id":"public/index.html","hash":"ca77c9456ff498f096852ea441a0a5aca15d5aa0","modified":1501483547403},{"_id":"public/page/2/index.html","hash":"c4b46c808121948b5bfe6d18305dac9ae428e32a","modified":1501483547403},{"_id":"public/page/3/index.html","hash":"919bf13d88e55073153738a36c499a7e69ac549c","modified":1501483547403},{"_id":"public/images/1.png","hash":"46b0327d8ffc5be2c882fe4ad8d52b7cc3d0dc3d","modified":1501482763524},{"_id":"public/images/2.png","hash":"baba73f906c03c84713b157c54140e7ddb12f2c4","modified":1501482763524},{"_id":"public/images/3.png","hash":"2d37d6400b5c51adc5e775fd750e5e33cf3ea37f","modified":1501482763524},{"_id":"public/images/4.png","hash":"a031f285a8088be2c3f9848720f3a7585404d188","modified":1501482763524},{"_id":"public/images/5.png","hash":"9ffdaf7e61490bcae3fd6650d237c6d65115bf97","modified":1501482763525},{"_id":"public/images/7.png","hash":"870f929169c20260d68a43cf1410bdd42ca94c3e","modified":1501482763525},{"_id":"public/images/8.jpg","hash":"ef3c31fd6e696cd66649528e9c4eb6a1f9b55163","modified":1501482763525},{"_id":"public/images/6.png","hash":"d80cc46a21bb3abc140aeda8bd48d188e6e52c94","modified":1501482763525},{"_id":"public/images/选区_011.png","hash":"404c8a9504679490e152b49a1e5366a0a5980ba2","modified":1501482763525},{"_id":"public/images/选区_013.png","hash":"78fb169e2cd5708653a23ff60d2b5e0d98458f5e","modified":1501482763525},{"_id":"public/images/选区_021.png","hash":"c2209ffd804a5fbecab3008c3284d835dd70b689","modified":1501482763525},{"_id":"public/images/选区_022.png","hash":"3331eac52b378ef8040341a69118cfcb06fc37ce","modified":1501482763525},{"_id":"public/images/9.jpg","hash":"9f26f5c8f7a03a8c45a9411a97b70a4231880964","modified":1501482763525},{"_id":"public/images/选区_002.png","hash":"ef10a9b1acc7997763f233f1ec52d78ee52e4f00","modified":1501482763525},{"_id":"public/images/选区_006.png","hash":"ca8840c8bb81862ed518ae98a696fb4771979e60","modified":1501482763525},{"_id":"public/images/选区_036.png","hash":"d2b2a41706a4af09aa998534e620b9f52857e7df","modified":1501482763525},{"_id":"public/images/选区_037.png","hash":"55cd1cb71047bb7351471c6abb17c18901e9bce3","modified":1501482763525},{"_id":"public/images/选区_038.png","hash":"c75041e335d114917351d4e67b6937bfd6a24fab","modified":1501482763525},{"_id":"public/images/选区_072.png","hash":"8c32795b678a25b8c24a3409cbbb4272a9b3efe4","modified":1501482763525},{"_id":"public/images/选区_073.png","hash":"b91125a0ecc6b1c0f5ebe855079be82a0155837b","modified":1501482763525},{"_id":"public/images/选区_074.png","hash":"ea5e9937eb6ccf8586eeefd0ece0b91da0df1617","modified":1501482763525},{"_id":"public/images/选区_075.png","hash":"286f4ead9f71eb6f5620e10c5836e8907eef7af7","modified":1501482763525},{"_id":"public/images/选区_076.png","hash":"6e2eae9629e949acd040233b141dcdfb24412c09","modified":1501482763525},{"_id":"public/images/选区_077.png","hash":"f50b1e998329b729379212f8142b48777c1bbbf2","modified":1501482763525},{"_id":"public/images/选区_079.png","hash":"c7028bfc3ed58bd68d863637444ac23c36359165","modified":1501482763525},{"_id":"public/images/选区_080.png","hash":"c981153206a90320f0c28635c174a5e9203dc19a","modified":1501482763525},{"_id":"public/images/选区_083.png","hash":"42413a543ae9c81cf76801bbc15c0367122534fc","modified":1501482763525},{"_id":"public/images/选区_084.png","hash":"29032b4f2994f7c063ce3038d69b61acabeae394","modified":1501482763525},{"_id":"public/images/选区_091.png","hash":"b9f1f16d4263a6062b567a2807c2150b296948d2","modified":1501482763526},{"_id":"public/images/选区_092.png","hash":"60aa79c2d363364038782aa6055758021ff78b99","modified":1501482763526},{"_id":"public/images/选区_093.png","hash":"8c1e39cfe1ad52d9ff151c164a16f44af4e54c94","modified":1501482763526},{"_id":"public/love/16-17shenghuo/16-17shenghuo (101).jpg","hash":"c1b7963d71bbeede288c5c2a91059c327401ddfa","modified":1501482763526},{"_id":"public/love/16-17shenghuo/16-17shenghuo (102).jpg","hash":"59945d7acf6e5d81d636a9dc5cb5dfc5d2d6f358","modified":1501482763526},{"_id":"public/love/16-17shenghuo/16-17shenghuo (113).jpg","hash":"033186e93a166371345eeef4f4fed1d62257e379","modified":1501482763526},{"_id":"public/love/16-17shenghuo/16-17shenghuo (117).jpg","hash":"55f3630a591106a7b718228c311c994329f2ecdc","modified":1501482763526},{"_id":"public/love/16-17shenghuo/16-17shenghuo (116).jpg","hash":"948060b4b3091122caab7346bba8ac753943e032","modified":1501482763526},{"_id":"public/love/16-17shenghuo/16-17shenghuo (119).jpg","hash":"a271b3401dab1bc6b4f58ea6caff1f9ed37c837a","modified":1501482763526},{"_id":"public/love/16-17shenghuo/16-17shenghuo (12).jpg","hash":"54e4f1eafb53c10100a8b3dabd54d30fc09d2da7","modified":1501482763526},{"_id":"public/love/16-17shenghuo/16-17shenghuo (120).jpg","hash":"5c06d9819bdaecdacb7d20a65dd841a532d27718","modified":1501482763526},{"_id":"public/love/16-17shenghuo/16-17shenghuo (121).jpg","hash":"ed42ce842404558fd66bedbdb172674a5f3dc6ec","modified":1501482763526},{"_id":"public/love/16-17shenghuo/16-17shenghuo (122).jpg","hash":"04f5a7993610a3ec32bfe64f60138f712d681e53","modified":1501482763526},{"_id":"public/love/16-17shenghuo/16-17shenghuo (123).jpg","hash":"4e1984c09bc3440a3dfc5c777657ed38eac382b8","modified":1501482763526},{"_id":"public/love/16-17shenghuo/16-17shenghuo (124).jpg","hash":"60c76ddee2c656a72bfa450f32157945f8b52691","modified":1501482763526},{"_id":"public/love/16-17shenghuo/16-17shenghuo (125).jpg","hash":"7f5923b0d884a23e25ac45325079b82b15da6763","modified":1501482763526},{"_id":"public/love/16-17shenghuo/16-17shenghuo (126).jpg","hash":"6a944c4445fdc6bb1eaefb65e5fb5f4c25703766","modified":1501482763526},{"_id":"public/love/16-17shenghuo/16-17shenghuo (127).jpg","hash":"e02f32c3d297bce464770711b2eeeaca75d89e5d","modified":1501482763527},{"_id":"public/love/16-17shenghuo/16-17shenghuo (128).jpg","hash":"5259dbd19158d43130950558657f4b0456b73f06","modified":1501482763527},{"_id":"public/love/16-17shenghuo/16-17shenghuo (13).jpg","hash":"5a13798d530a13fc0a5158aed624ec0725735dc8","modified":1501482763528},{"_id":"public/love/16-17shenghuo/16-17shenghuo (130).jpg","hash":"39bf53d73355b9057cbfc09822501ffa74093b90","modified":1501482763528},{"_id":"public/love/16-17shenghuo/16-17shenghuo (14).jpg","hash":"121068910023a888f89d4077a54cfb13de1b511b","modified":1501482763528},{"_id":"public/love/16-17shenghuo/16-17shenghuo (19).jpg","hash":"1d59e149426c7b6eb0ce45fcc9c6e99e9dca79f1","modified":1501482763528},{"_id":"public/love/16-17shenghuo/16-17shenghuo (15).jpg","hash":"aa6128bd03f845d86a36d2090174bfc2835a8dec","modified":1501482763528},{"_id":"public/love/16-17shenghuo/16-17shenghuo (2).jpg","hash":"aba261a99d13340fb018445f3af614bbf8327768","modified":1501482763528},{"_id":"public/love/16-17shenghuo/16-17shenghuo (20).jpg","hash":"1c12c44431dbcecd6598c04e269353718dad5c85","modified":1501482763528},{"_id":"public/love/16-17shenghuo/16-17shenghuo (23).jpg","hash":"f4988b91168be9d7cb544c2eb4b76b24aef09968","modified":1501482763528},{"_id":"public/love/16-17shenghuo/16-17shenghuo (22).jpg","hash":"c6e8f52f0005ef2288b5bd07cb6336b43bb35b89","modified":1501482763528},{"_id":"public/love/16-17shenghuo/16-17shenghuo (24).jpg","hash":"588fc9b55335181e07c800bf5d082f43da4949be","modified":1501482763528},{"_id":"public/love/16-17shenghuo/16-17shenghuo (26).jpg","hash":"20d534755aa84d00b4f4d93709fa74f65f0446de","modified":1501482763528},{"_id":"public/love/16-17shenghuo/16-17shenghuo (27).jpg","hash":"1481bceb79428f46bfa45508dacb7fe82ae07e48","modified":1501482763528},{"_id":"public/love/16-17shenghuo/16-17shenghuo (29).jpg","hash":"e2f9f83bba31bf6007dc7e910a5446ce7edb0af3","modified":1501482763528},{"_id":"public/love/16-17shenghuo/16-17shenghuo (28).jpg","hash":"a960f8c150e33dd52d122d068ca1f524ba3caed7","modified":1501482763529},{"_id":"public/love/16-17shenghuo/16-17shenghuo (3).jpg","hash":"de530091eab8981b065a4f49d95b3487c5916b26","modified":1501482763529},{"_id":"public/love/16-17shenghuo/16-17shenghuo (30).jpg","hash":"d8b4fc7bfa94e311bab315a5025fc88d48c5d6af","modified":1501482763529},{"_id":"public/love/16-17shenghuo/16-17shenghuo (25).jpg","hash":"2692564debd4adab0e5f377f86748514ae384274","modified":1501482763529},{"_id":"public/love/16-17shenghuo/16-17shenghuo (31).jpg","hash":"d2da59633628c6863795cedfb6e8bf4f91b73d8c","modified":1501482763529},{"_id":"public/love/16-17shenghuo/16-17shenghuo (37).jpg","hash":"f951ae16a2fd73825b523f56d6bab9378aa4f24b","modified":1501482763529},{"_id":"public/love/16-17shenghuo/16-17shenghuo (34).jpg","hash":"10fc2fb5bdee9a0039f0c7c5abb8eda4e637cac3","modified":1501482763529},{"_id":"public/love/16-17shenghuo/16-17shenghuo (4).jpg","hash":"dcac6df5d7659b90bf4bb4775c50d8c40c5647f8","modified":1501482763529},{"_id":"public/love/16-17shenghuo/16-17shenghuo (38).jpg","hash":"76c33d1880778d83c52d490965e0b2e1d055df7b","modified":1501482763529},{"_id":"public/love/16-17shenghuo/16-17shenghuo (40).jpg","hash":"3875530583c81d1801b976c9d421d8682647d0f6","modified":1501482763529},{"_id":"public/love/16-17shenghuo/16-17shenghuo (41).jpg","hash":"6972be782fbe6a3ed5ae83944033f44868a7fe4b","modified":1501482763529},{"_id":"public/love/16-17shenghuo/16-17shenghuo (46).jpg","hash":"1394e8555a421fd8750078afb5d0addc5ecf3f24","modified":1501482763529},{"_id":"public/love/16-17shenghuo/16-17shenghuo (47).jpg","hash":"7fe09592aa61f568539c52b3c906993fa7ea1d99","modified":1501482763529},{"_id":"public/love/16-17shenghuo/16-17shenghuo (54).jpg","hash":"79e348bfc3a5ea6f0914267b2ca86c7cc4fee02f","modified":1501482763529},{"_id":"public/love/16-17shenghuo/16-17shenghuo (59).jpg","hash":"b75cff8f077e4dd5fbfb9d09d26a7d4b8c0302e1","modified":1501482763529},{"_id":"public/love/16-17shenghuo/16-17shenghuo (6).jpg","hash":"ff7eb103d218b4af7215b39f5890c01dc8996be0","modified":1501482763530},{"_id":"public/love/16-17shenghuo/16-17shenghuo (61).jpg","hash":"0d69d32911617d1f8a83c7087146335d246dc88f","modified":1501482763530},{"_id":"public/love/16-17shenghuo/16-17shenghuo (64).jpg","hash":"af2d967dd346a7acda94e64653898891c656c7ef","modified":1501482763530},{"_id":"public/love/16-17shenghuo/16-17shenghuo (66).jpg","hash":"c59a8a44077685bc8140c33bfa23b84d952a5cc2","modified":1501482763530},{"_id":"public/love/16-17shenghuo/16-17shenghuo (69).jpg","hash":"2cdebb6f1a58903fa1fda74aa5c3bbc864bdc6c3","modified":1501482763530},{"_id":"public/love/16-17shenghuo/16-17shenghuo (70).jpg","hash":"7f0c098a988ae04b28cf6efe44a3af7b9de3e465","modified":1501482763530},{"_id":"public/love/16-17shenghuo/16-17shenghuo (7).jpg","hash":"c8924167d3619abc8368acd24fa69ac75e84fdb0","modified":1501482763530},{"_id":"public/love/16-17shenghuo/16-17shenghuo (71).jpg","hash":"776ec67a86b1ce711a8992a3fa8169ca53947553","modified":1501482763530},{"_id":"public/love/16-17shenghuo/16-17shenghuo (72).jpg","hash":"b69ff5fc3152eba31494c2a66d104e3bd695f2a7","modified":1501482763530},{"_id":"public/love/16-17shenghuo/16-17shenghuo (73).jpg","hash":"e6982875f1f6269386a795761b684facc8265b93","modified":1501482763530},{"_id":"public/love/16-17shenghuo/16-17shenghuo (77).jpg","hash":"7c96dbdd5f1c5b8560ce2e25d86bbd850af7fbf6","modified":1501482763530},{"_id":"public/love/16-17shenghuo/16-17shenghuo (78).jpg","hash":"84212c8647d71018844c4798e9bf20f6490063c6","modified":1501482763530},{"_id":"public/love/16-17shenghuo/16-17shenghuo (79).jpg","hash":"e2c2a44a9edd007be5d4cdc963bc43e05815a06f","modified":1501482763530},{"_id":"public/love/16-17shenghuo/16-17shenghuo (82).jpg","hash":"15b35ca84b0dc43a8b5506acdbbcefb8b702e769","modified":1501482763530},{"_id":"public/love/16-17shenghuo/16-17shenghuo (85).jpg","hash":"fa7a03cb23a893a2945c4c567e14c9abb575508e","modified":1501482763530},{"_id":"public/love/16-17shenghuo/16-17shenghuo (96).jpg","hash":"68415be63aedeb925d0a09bd9db99362cc4f9520","modified":1501482763530},{"_id":"public/love/16-17shenghuo/16-17shenghuo (93).jpg","hash":"34a7f80884206a22994ad9500903a058e1886e70","modified":1501482763530},{"_id":"public/love/16-17shenghuo/16-17shenghuo (97).jpg","hash":"f58dd538d386e8ad81843d914f392b8124160b76","modified":1501482763531},{"_id":"public/love/16-17shenghuo/16-17shenghuo (98).jpg","hash":"d9d22ea652dfdd42f0c40d0583e22a492fca9ba9","modified":1501482763531},{"_id":"public/love/1617meitu/1.jpg","hash":"b88a6007df22010884d4d2274a9b9be19bdd028e","modified":1501482763531},{"_id":"public/love/16-17shenghuo/16-17shenghuo (95).jpg","hash":"6f0290ac8f25dbd6100cf2bfb3c7879ed9e59af1","modified":1501482763531},{"_id":"public/love/1617meitu/15.jpg","hash":"cd1bf322f694e8bd4d460c5b04b5e418e30e6baa","modified":1501482763531},{"_id":"public/love/1617meitu/16.jpg","hash":"b68a83f937cf50d738f0778c2e1d0250df9f4c05","modified":1501482763531},{"_id":"public/love/1617meitu/19.jpg","hash":"748076802b9f8efc3acd5bfd10c8edbde0d2924f","modified":1501482763531},{"_id":"public/love/1617meitu/21.jpg","hash":"0b39cf40560500a8c561fd14a1b5dc4cf12ea90d","modified":1501482763531},{"_id":"public/love/1617meitu/20.jpg","hash":"4ca7f5a98df0eaa88840000ba99c909b64fdb315","modified":1501482763531},{"_id":"public/love/1617meitu/23.jpg","hash":"19f67b4b560a84f2d79a3301a1efa3b27b39ee61","modified":1501482763531},{"_id":"public/love/1617meitu/22.jpg","hash":"2f79de3bd061d5b35006a4a52f5df0a2fb252519","modified":1501482763531},{"_id":"public/love/1617meitu/28.jpg","hash":"182cb6ac18f58dfba4da4b93e3acc1db46713932","modified":1501482763531},{"_id":"public/love/1617meitu/30.jpg","hash":"386e5fa461d06bf3968373b27189bbc7e603f4d7","modified":1501482763531},{"_id":"public/love/1617meitu/34.jpg","hash":"ca1ffcbfe7e53fe702b31cfbfd714d74c1a2fcd2","modified":1501482763531},{"_id":"public/love/1617meitu/6.jpg","hash":"40f4796d0bd51cd478d74d6a4a3be6de6f056f19","modified":1501482763531},{"_id":"public/love/1617meitu/7.jpg","hash":"89b789c15e2aeee83a2cf1b32e969f492af7a001","modified":1501482763531},{"_id":"public/love/1617meitu/9.jpg","hash":"06e63c9781cd57f701d9a6b11275cd251537941e","modified":1501482763531},{"_id":"public/love/1617meitu/8.jpg","hash":"0123a6a0a18b611843a933fe3f904bdcb91a6250","modified":1501482763531},{"_id":"public/love/qinhuangdao/qinhuangdao (1).jpg","hash":"1fc5c65192f889fe6bf45b10f40958a566ec0b3d","modified":1501482763532},{"_id":"public/love/qinhuangdao/qinhuangdao (10).jpg","hash":"3a69d5ee110dcf43054ce71b99287bad0ab1f068","modified":1501482763532},{"_id":"public/love/qinhuangdao/qinhuangdao (11).jpg","hash":"4fea31b35669ceac74654caea7d0d1c0d90f76c4","modified":1501482763532},{"_id":"public/love/qinhuangdao/qinhuangdao (12).jpg","hash":"a05692a3b6626001e029ab75dda11854d62f20fc","modified":1501482763532},{"_id":"public/love/qinhuangdao/qinhuangdao (13).jpg","hash":"4ae9e8b9f2446241c2ffcea356db3930ad257e1d","modified":1501482763532},{"_id":"public/love/qinhuangdao/qinhuangdao (15).jpg","hash":"22dce11e696e02e880b2a6f73982834027f6d341","modified":1501482763532},{"_id":"public/love/qinhuangdao/qinhuangdao (16).jpg","hash":"13fa3ac54f98fdf0d2d5e0682046b62cb9f1de42","modified":1501482763532},{"_id":"public/love/qinhuangdao/qinhuangdao (17).jpg","hash":"b692d1b027464dbd9c25d3b62495537e691f9b2d","modified":1501482763532},{"_id":"public/love/qinhuangdao/qinhuangdao (18).jpg","hash":"3470c512f5a8a3dd70b9282abddb91bd507a68b1","modified":1501482763532},{"_id":"public/love/qinhuangdao/qinhuangdao (19).jpg","hash":"15d1ae80559b616e731f7d6922353a443ca4c61a","modified":1501482763532},{"_id":"public/love/qinhuangdao/qinhuangdao (2).jpg","hash":"6480e8be7a1c96a6a7f7e4c853a8d6a0ab71556b","modified":1501482763532},{"_id":"public/love/qinhuangdao/qinhuangdao (23).jpg","hash":"1ee49f9ac1e05e91effae12a64be1a64a5c3a26d","modified":1501482763532},{"_id":"public/love/qinhuangdao/qinhuangdao (22).jpg","hash":"186fd0631eb773a156fcf0a580722b75532eead8","modified":1501482763532},{"_id":"public/love/qinhuangdao/qinhuangdao (24).jpg","hash":"b045ac94ecaf2554b95ed699814cf2286c9540b0","modified":1501482763532},{"_id":"public/love/qinhuangdao/qinhuangdao (25).jpg","hash":"1f6a6d1469724364d882fdcfe860a95b4909502e","modified":1501482763532},{"_id":"public/love/qinhuangdao/qinhuangdao (26).jpg","hash":"d98ffbc4e27aee81e7cfb20448ba3c0a7240847e","modified":1501482763532},{"_id":"public/love/qinhuangdao/qinhuangdao (27).jpg","hash":"4bd702a2d316c4074abf643dc5de80b1df0696eb","modified":1501482763532},{"_id":"public/love/qinhuangdao/qinhuangdao (29).jpg","hash":"3999d223b9f54c44852695399bd7d8c4a7505e7c","modified":1501482763532},{"_id":"public/love/qinhuangdao/qinhuangdao (3).jpg","hash":"92fcf92c6c6caa7ef53b5fccc4e15315d94c014b","modified":1501482763532},{"_id":"public/love/qinhuangdao/qinhuangdao (30).jpg","hash":"388284c232c0eb41e8fc5779f3ca7da117ab6d9f","modified":1501482763532},{"_id":"public/love/qinhuangdao/qinhuangdao (32).jpg","hash":"976b3b0f01ae6f6867c6efaa6d78e2845e9d8a52","modified":1501482763533},{"_id":"public/love/qinhuangdao/qinhuangdao (31).jpg","hash":"2d6486869372357e64ca284eb6c37cb98582e494","modified":1501482763533},{"_id":"public/love/qinhuangdao/qinhuangdao (34).jpg","hash":"65dcf10b577cc471a4de2d27e58a19d500599117","modified":1501482763533},{"_id":"public/love/qinhuangdao/qinhuangdao (33).jpg","hash":"72897e5f8fb8c84a3ec85b18e858b0739d218949","modified":1501482763533},{"_id":"public/love/qinhuangdao/qinhuangdao (35).jpg","hash":"b95e717bc3f989be66000660453e6bd0d654539e","modified":1501482763533},{"_id":"public/love/1617meitu/33.jpg","hash":"4c6f2dbca620b5637ef7a2c2cf20d5a549180a23","modified":1501482763533},{"_id":"public/love/1617meitu/4.jpg","hash":"9abf158ec6a30698561bd168bd997c52f4a36da9","modified":1501482763533},{"_id":"public/love/qinhuangdao/qinhuangdao (36).jpg","hash":"2ce3b13e10fecf5b1f697227f2999144889a99db","modified":1501482763533},{"_id":"public/love/qinhuangdao/qinhuangdao (37).jpg","hash":"94b5e0fa17e33797b808fa75fa4e09c3627ade28","modified":1501482763533},{"_id":"public/love/qinhuangdao/qinhuangdao (4).jpg","hash":"36aeb9d1b3edca111e8a012a68996e8ed54deb2e","modified":1501482763533},{"_id":"public/love/qinhuangdao/qinhuangdao (5).jpg","hash":"4013b4b8630c6a55030a1453cdf9cb8f11f136f2","modified":1501482763533},{"_id":"public/love/qinhuangdao/qinhuangdao (6).jpg","hash":"20a7ab8d45740a0c57c1abae68c2740f2dbb2f62","modified":1501482763533},{"_id":"public/love/qinhuangdao/qinhuangdao (8).jpg","hash":"bd575e99ad0a08998ea1fa5ad78da7dd94eac95e","modified":1501482763533},{"_id":"public/img/alipay.jpg","hash":"6054d9ed2ca7cd1f645b729e05632134467d4daa","modified":1501482763533},{"_id":"public/img/avatar.jpg","hash":"62a4893b1a32e997dcdb6e467b10559df75221e2","modified":1501482763533},{"_id":"public/img/brand.jpg","hash":"0e237f1b433851c156e1f1cdaeb044054b3b9879","modified":1501482763533},{"_id":"public/img/cc.png","hash":"ebce75a62b40976a72d43f0bd937d859ac24d87c","modified":1501482763533},{"_id":"public/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1501482763533},{"_id":"public/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1501482763533},{"_id":"public/img/wechat.jpg","hash":"ef069cc9e80c7553fd60589b0727bbbf8c6de372","modified":1501482763534},{"_id":"public/css/fonts/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1501482763534},{"_id":"public/css/fonts/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1501482763534},{"_id":"public/css/fonts/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1501482763534},{"_id":"public/css/fonts/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1501482763534},{"_id":"public/css/fonts/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1501482763534},{"_id":"public/css/fonts/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1501482763534},{"_id":"public/css/fonts/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1501482763534},{"_id":"public/css/fonts/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1501482763534},{"_id":"public/css/fonts/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1501482763534},{"_id":"public/css/fonts/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1501482763534},{"_id":"public/css/fonts/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1501482763534},{"_id":"public/css/fonts/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1501482763534},{"_id":"public/css/fonts/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1501482763534},{"_id":"public/css/fonts/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1501482763534},{"_id":"public/css/fonts/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1501482763534},{"_id":"public/meitu.zip","hash":"f401cb3a335971614bcdce6bc82ffe6f6fcbd050","modified":1501482763660},{"_id":"public/images/logo.png","hash":"64e2cf379aa3c956af5a30245303af09400e48c2","modified":1501482763660},{"_id":"public/images/选区_003.png","hash":"26b134073573587cd73912045f3689da58e7596f","modified":1501482763664},{"_id":"public/love/16-17shenghuo/16-17shenghuo (1).jpg","hash":"540b1c93a47858514e44db0b81d8e0d1296426ce","modified":1501482763664},{"_id":"public/love/16-17shenghuo/16-17shenghuo (10).jpg","hash":"3f443c47a2e1ead8385d75da457d3fc8bcb1f2d6","modified":1501482763664},{"_id":"public/love/16-17shenghuo/16-17shenghuo (100).jpg","hash":"915a33bdbbd0b770a32b5ef4e694d753e080f456","modified":1501482763664},{"_id":"public/love/16-17shenghuo/16-17shenghuo (103).jpg","hash":"67e50748e7643fd557aef9bba83d45674b7861c7","modified":1501482763664},{"_id":"public/love/16-17shenghuo/16-17shenghuo (104).jpg","hash":"12b370acca8dcad5b01e27ac5e2a02e15d465854","modified":1501482763664},{"_id":"public/love/16-17shenghuo/16-17shenghuo (105).jpg","hash":"b41b13fe03c61ec28b615c32b6a95d55cb9b9347","modified":1501482763664},{"_id":"public/love/16-17shenghuo/16-17shenghuo (106).jpg","hash":"b3103ddedb35000e2f0c87bb621461a3fdd329e6","modified":1501482763664},{"_id":"public/love/16-17shenghuo/16-17shenghuo (108).jpg","hash":"420fa000c514415b47d41a60ce45803332c38ce8","modified":1501482763664},{"_id":"public/love/16-17shenghuo/16-17shenghuo (109).jpg","hash":"826da0fcf49b515560e70390c0faa73687ba89ac","modified":1501482763664},{"_id":"public/love/16-17shenghuo/16-17shenghuo (11).jpg","hash":"af71eea214b78a0adc156c67123d42bcc5a7eaf8","modified":1501482763664},{"_id":"public/love/16-17shenghuo/16-17shenghuo (111).jpg","hash":"fc1bda67f927d42f4a57cec5fc3dd4b8a64f55f9","modified":1501482763664},{"_id":"public/love/16-17shenghuo/16-17shenghuo (112).jpg","hash":"4ada47d2206d5adbce1b21cc3155565e0b206a25","modified":1501482763664},{"_id":"public/love/16-17shenghuo/16-17shenghuo (114).jpg","hash":"30f45a527569c55570292cd4c53a781baf0ba12f","modified":1501482763665},{"_id":"public/love/16-17shenghuo/16-17shenghuo (115).jpg","hash":"75ce705469a77955406bb41aac999fbc096f6d1c","modified":1501482763665},{"_id":"public/love/16-17shenghuo/16-17shenghuo (118).jpg","hash":"2f8c5c2a87964efab65a087fcad405d9d2ca8885","modified":1501482763665},{"_id":"public/love/16-17shenghuo/16-17shenghuo (129).jpg","hash":"61c067ef99e9056d65d2c5be325b5937488904a8","modified":1501482763665},{"_id":"public/love/16-17shenghuo/16-17shenghuo (131).jpg","hash":"2313cfc023d219781cb8bb0956dcd51a69bb18a2","modified":1501482763665},{"_id":"public/love/16-17shenghuo/16-17shenghuo (17).jpg","hash":"8531e909ce24ab42e6489c79c9ecbeae5815fa3c","modified":1501482763665},{"_id":"public/love/16-17shenghuo/16-17shenghuo (18).jpg","hash":"53b60814183ccae3dbde43d24d95ddaa370d9030","modified":1501482763665},{"_id":"public/love/16-17shenghuo/16-17shenghuo (16).jpg","hash":"d00330ce9b703a0281e91fb4e380b2270a6e19fc","modified":1501482763665},{"_id":"public/love/16-17shenghuo/16-17shenghuo (21).jpg","hash":"d943c87540b0195367748e656a1512fd425c417d","modified":1501482763665},{"_id":"public/love/16-17shenghuo/16-17shenghuo (110).jpg","hash":"4237a5703ea38a05406417d6fd8f292f66487998","modified":1501482763665},{"_id":"public/love/16-17shenghuo/16-17shenghuo (107).jpg","hash":"8c789477b4c01a21ae82a290d74303da1b58c7e9","modified":1501482763665},{"_id":"public/love/16-17shenghuo/16-17shenghuo (33).jpg","hash":"ff68feee3c43a32a472004140c9d2612f67144d2","modified":1501482763665},{"_id":"public/love/16-17shenghuo/16-17shenghuo (36).jpg","hash":"da416b29c1852223e9b3b8d4c32a99d37e6214b2","modified":1501482763665},{"_id":"public/love/16-17shenghuo/16-17shenghuo (39).jpg","hash":"dffdf2d4c54ccae98bab8355c1c88a21d42c56f1","modified":1501482763665},{"_id":"public/love/16-17shenghuo/16-17shenghuo (32).jpg","hash":"8002ed69a2cffe482f697c3c6037dd5f9db2659a","modified":1501482763666},{"_id":"public/love/16-17shenghuo/16-17shenghuo (43).jpg","hash":"fd7454b649574a33e3bc8366ee804423c5a48c6e","modified":1501482763666},{"_id":"public/love/16-17shenghuo/16-17shenghuo (35).jpg","hash":"876ac4a0c11de0fe2f8d17b2ec5c069bacfc5dd9","modified":1501482763666},{"_id":"public/love/16-17shenghuo/16-17shenghuo (45).jpg","hash":"ef9529227fda1b2f23c1968de4bf43cb9349f513","modified":1501482763666},{"_id":"public/love/16-17shenghuo/16-17shenghuo (48).jpg","hash":"474aa0f264b6e61f07c59469e6ef91bcddf9e5ec","modified":1501482763666},{"_id":"public/love/16-17shenghuo/16-17shenghuo (49).jpg","hash":"b3178c635f351400e495cceccd4b2149f81501c4","modified":1501482763666},{"_id":"public/love/16-17shenghuo/16-17shenghuo (44).jpg","hash":"c9d803f955ff260a2a37e4667778cc3f0c9ca308","modified":1501482763666},{"_id":"public/love/16-17shenghuo/16-17shenghuo (50).jpg","hash":"eff6dbc5c0600a5bdebfc384de7fa5a1cc02652f","modified":1501482763666},{"_id":"public/love/16-17shenghuo/16-17shenghuo (5).jpg","hash":"058d7e69d795f746d9545a0b29f46201f87f6f52","modified":1501482763666},{"_id":"public/love/16-17shenghuo/16-17shenghuo (52).jpg","hash":"8b9fbb0ec183f9fd74c45d60f6cab40d3747b772","modified":1501482763666},{"_id":"public/love/16-17shenghuo/16-17shenghuo (51).jpg","hash":"6b53ca2aa476c1e193994c1ca757ef0da8570093","modified":1501482763666},{"_id":"public/love/16-17shenghuo/16-17shenghuo (56).jpg","hash":"500ab7819259fac4a3ce84c7b2d225ebadd9e6c5","modified":1501482763666},{"_id":"public/love/16-17shenghuo/16-17shenghuo (57).jpg","hash":"72a2c3cfead5b7fd6f4346e00d1ee6043adbf724","modified":1501482763666},{"_id":"public/love/16-17shenghuo/16-17shenghuo (58).jpg","hash":"ae83468df02852cf373d677effcb88310d64aca3","modified":1501482763666},{"_id":"public/love/16-17shenghuo/16-17shenghuo (55).jpg","hash":"c6b2f76480f455f352d10de37da9366b2fa0b8d7","modified":1501482763666},{"_id":"public/love/16-17shenghuo/16-17shenghuo (60).jpg","hash":"b3862eb91574ab278f4767e8949b31ae6705fb6f","modified":1501482763666},{"_id":"public/love/16-17shenghuo/16-17shenghuo (42).jpg","hash":"72b3814b662c313ab65ea03ea4e7dce71bea16cc","modified":1501482763666},{"_id":"public/love/16-17shenghuo/16-17shenghuo (63).jpg","hash":"ee60ab4626cdc1974a84fd21edf130fa141f7310","modified":1501482763666},{"_id":"public/love/16-17shenghuo/16-17shenghuo (65).jpg","hash":"32ae7e4a4a8e6a98e3c7570a85d39dce33529155","modified":1501482763667},{"_id":"public/love/16-17shenghuo/16-17shenghuo (68).jpg","hash":"df2754f5c8851e62a7f05b205c607909ee7adad8","modified":1501482763667},{"_id":"public/love/16-17shenghuo/16-17shenghuo (74).jpg","hash":"05a3071a59fa62dee355e95bb9f9880d1a7154e7","modified":1501482763667},{"_id":"public/love/16-17shenghuo/16-17shenghuo (67).jpg","hash":"96b4ba9edcf9a3368e7c8113ad1cea9f35fa15f4","modified":1501482763667},{"_id":"public/love/16-17shenghuo/16-17shenghuo (76).jpg","hash":"be8136749beaf39542459296fcfd264a1cf0f0be","modified":1501482763667},{"_id":"public/love/16-17shenghuo/16-17shenghuo (62).jpg","hash":"78f638f68644fbae3c41c7110509638a51ede62a","modified":1501482763667},{"_id":"public/love/16-17shenghuo/16-17shenghuo (80).jpg","hash":"5563ca10cb724392b886f4d758d2cf092bc4c909","modified":1501482763667},{"_id":"public/love/16-17shenghuo/16-17shenghuo (8).jpg","hash":"4f4dba8bcf459a1f9a2349ba4db5e1b8c3c81dbe","modified":1501482763667},{"_id":"public/love/16-17shenghuo/16-17shenghuo (83).jpg","hash":"c8aa3df611a7c1ceea6f18c9ede8d499868d18db","modified":1501482763667},{"_id":"public/love/16-17shenghuo/16-17shenghuo (81).jpg","hash":"46e3afeecfb1c0bd34dfa7860444a769cfb89cb2","modified":1501482763667},{"_id":"public/love/16-17shenghuo/16-17shenghuo (86).jpg","hash":"c72b42c7a2ed5ef7ff6f6455ea155c2726f57cb2","modified":1501482763667},{"_id":"public/love/16-17shenghuo/16-17shenghuo (87).jpg","hash":"fe040683ed856f082b4602a4514776b27e93ce6e","modified":1501482763667},{"_id":"public/love/16-17shenghuo/16-17shenghuo (88).jpg","hash":"392f602d108f038533bad02d1b0773b3a4b4ea34","modified":1501482763667},{"_id":"public/love/16-17shenghuo/16-17shenghuo (75).jpg","hash":"02c36f61e54c685304c7f82f1559e36c731c85e5","modified":1501482763667},{"_id":"public/love/16-17shenghuo/16-17shenghuo (9).jpg","hash":"6de0a62744fec6388db1657b20ecd0f23197614a","modified":1501482763667},{"_id":"public/love/16-17shenghuo/16-17shenghuo (90).jpg","hash":"23b5cd95deb9f4e45dd0794f73c0ff16cfcf0904","modified":1501482763667},{"_id":"public/love/16-17shenghuo/16-17shenghuo (91).jpg","hash":"b87ad310416efae3ae19f83e886f9e40e9aea826","modified":1501482763668},{"_id":"public/love/16-17shenghuo/16-17shenghuo (92).jpg","hash":"268d1a4c032ecb7d874b6da8bcc8dcc158b37fec","modified":1501482763668},{"_id":"public/love/16-17shenghuo/16-17shenghuo (84).jpg","hash":"4cb089ecfd309df6676a5336877f36d9dba68e2e","modified":1501482763668},{"_id":"public/love/16-17shenghuo/16-17shenghuo (94).jpg","hash":"84b10a49091dd15ae6da3f1716a744547f36d0bf","modified":1501482763668},{"_id":"public/love/1617meitu/10.jpg","hash":"092793ec78e8d862c0b3f11cac7ca37376b2a7be","modified":1501482763668},{"_id":"public/love/1617meitu/11.jpg","hash":"8ca9054c0022fbcbb4e60c114263237a7bef60c2","modified":1501482763668},{"_id":"public/love/16-17shenghuo/16-17shenghuo (89).jpg","hash":"940c6bfb01ef3751f82df7eca86ef13f80ccfdbd","modified":1501482763668},{"_id":"public/love/1617meitu/14.jpg","hash":"b0d08ae26fc49adb6c5e67422ec51e48bebcbebf","modified":1501482763668},{"_id":"public/love/1617meitu/13.jpg","hash":"82666a6dbb30eaf564831c4e07ace050ca0e9216","modified":1501482763668},{"_id":"public/love/1617meitu/17.jpg","hash":"1cf7135258dad188f743a3391dca036a4ab2aa11","modified":1501482763668},{"_id":"public/love/1617meitu/18.jpg","hash":"86ee07c60dbf5a99aea1fdb2f92e6b6c85eb3148","modified":1501482763668},{"_id":"public/love/1617meitu/2.jpg","hash":"90619aaee3c208d755eda81ef24574c43fa8e9a0","modified":1501482763668},{"_id":"public/love/16-17shenghuo/16-17shenghuo (99).jpg","hash":"e2d7f20f77a3fecf6a7a877a5622aa76ae7eef28","modified":1501482763668},{"_id":"public/love/1617meitu/26.jpg","hash":"46716717aa52a898b2891bf7d62880e7f4cf4f41","modified":1501482763668},{"_id":"public/love/1617meitu/25.jpg","hash":"f6dbf86a3bd500ca9ec764c527698c33dbece3ac","modified":1501482763669},{"_id":"public/love/1617meitu/12.jpg","hash":"c174201e46b54fc6ffd94cda72be3fb99fc20317","modified":1501482763669},{"_id":"public/love/1617meitu/27.jpg","hash":"6f57a4ac1bba94a3a9ff69157fc2100e29ac699f","modified":1501482763669},{"_id":"public/love/1617meitu/3.jpg","hash":"2e93c656c3d8ec0ffb0d626b2757717915527e38","modified":1501482763669},{"_id":"public/love/1617meitu/31.jpg","hash":"bd35e0dc04c1b9a490f18a7b0262b9b1495385ba","modified":1501482763669},{"_id":"public/love/1617meitu/5.jpg","hash":"e48211a420e3c1f82a13f0f592659d4a3d7e1776","modified":1501482763669},{"_id":"public/love/1617meitu/29.jpg","hash":"76be1a33f1690badc7b61b60d4a45b493dac522e","modified":1501482763669},{"_id":"public/love/qinhuangdao/qinhuangdao (14).jpg","hash":"28128dee802664295f981ae56ce77ad94a4b8edf","modified":1501482763669},{"_id":"public/love/1617meitu/24.jpg","hash":"1595e4bdb179f66c65fd94400016782694b3170f","modified":1501482763669},{"_id":"public/love/qinhuangdao/qinhuangdao (7).jpg","hash":"2a0b71482cc92aaf7190a4d342a5bfe1b4229c1a","modified":1501482763669},{"_id":"public/love/qinhuangdao/qinhuangdao (28).jpg","hash":"f208710d361d2d679a12b0e1f35505c86916c589","modified":1501482763669},{"_id":"public/love/qinhuangdao/qinhuangdao (21).jpg","hash":"1e48b69722e92ec5e7ced6461742c8eafba08c3c","modified":1501482763669},{"_id":"public/love/1617meitu/32.jpg","hash":"77b70c89562cfd3790eee9410f20f17bbc11cca2","modified":1501482763669},{"_id":"public/love/qinhuangdao/qinhuangdao (9).jpg","hash":"eef60d34a8495dce5456c662ff1359848f1eef92","modified":1501482763669},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1501482763669},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1501482763670},{"_id":"public/css/fonts/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1501482763670},{"_id":"public/css/fonts/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1501482763670},{"_id":"public/css/fonts/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1501482763670},{"_id":"public/css/fonts/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1501482763670},{"_id":"public/css/fonts/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1501482763670},{"_id":"public/js/main.min.js","hash":"dcec14830cf056fbbab82313ecd5886a03cdf580","modified":1501482763686},{"_id":"public/js/search.js","hash":"c3f80dee3bab6bd4895b55b849085c8af7d1e647","modified":1501482763686},{"_id":"public/js/search.min.js","hash":"c0c3d048af0d6b840f6f1dfda08911c7bfdb5dc1","modified":1501482763686},{"_id":"public/js/cloudTie/loader.js","hash":"299d58e74946a2aeb8db74d3e4b6b5adfe694e15","modified":1501482763686},{"_id":"public/js/cloudTie/loader.min.js","hash":"e73fcd885be2c4585f154861c9969e3c955d03e3","modified":1501482763686},{"_id":"public/js/main.js","hash":"26688338ac55bed772e630099d2ce1ed69ef1431","modified":1501482763686},{"_id":"public/js/cloudTie/mobile.min.js","hash":"859e3efb15db88cedfd18f8523ecfd21f3a22324","modified":1501482763686},{"_id":"public/js/cloudTie/mobile.js","hash":"67a0a31ee1e491635369b0401d629e97fccd4d94","modified":1501482763686},{"_id":"public/js/cloudTie/pc.min.js","hash":"aea28510192fb36a36bf174716a39afd1ca20240","modified":1501482763686},{"_id":"public/js/cloudTie/pc.js","hash":"25d4ae345f8122f8c7e8e48959d37523dd1e4abb","modified":1501482763687},{"_id":"public/images/选区_001.png","hash":"07660ebf6634039a6ba2ba0c67d664c3b075567f","modified":1501482763687},{"_id":"public/love/16-17shenghuo/16-17shenghuo (53).jpg","hash":"0cf83100d82a11b14c66222ee6044c74b3fb7261","modified":1501482763687},{"_id":"public/love/qinhuangdao/qinhuangdao (20).jpg","hash":"57a7d255c1f15c0e1517beb64793bbc37f1d5d53","modified":1501482763687},{"_id":"public/img/author.jpg","hash":"4f3adaac9cdd22d388a98ceae77dddf36b3950a7","modified":1501482763687},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1501482763687},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1501482763687},{"_id":"public/css/fonts/fontawesome/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1501482763687},{"_id":"public/css/cloudTie/mobile.css","hash":"1b3dd9263c84bdc017669bbbb128574265bb8143","modified":1501482763701},{"_id":"public/css/fonts/fontawesome/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1501482763725},{"_id":"public/css/style.css","hash":"90083d99a27415a1703d21300e5cf71c1b6387cc","modified":1501483271340},{"_id":"public/css/cloudTie/pc.css","hash":"5020489bb2db5335e2a151b950f3bd20d22c2b16","modified":1501482764088},{"_id":"themes/jacman/.gitignore","hash":"7d65523f2a5afb69d76824dd1dfa62a34faa3197","modified":1487252894139},{"_id":"themes/jacman/LICENSE","hash":"931516aa36c53eb7843c83d82662eb50cc3c4367","modified":1487252894139},{"_id":"themes/jacman/README.md","hash":"75a5c9fbd7c9cec4d2f277042d2fee550e4936be","modified":1487252894139},{"_id":"themes/jacman/README_zh.md","hash":"d6014b16eaccc97dc54a7779c9e36003752410e1","modified":1487252894139},{"_id":"themes/jacman/_config.yml","hash":"41f69aeefb21a13f4538efc4215faa79f4983e6e","modified":1500641197320},{"_id":"themes/jacman/.git/FETCH_HEAD","hash":"3bbdfdf3435caa02da8c96448848ff0f5adec357","modified":1487259418131},{"_id":"themes/jacman/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1487252894095},{"_id":"themes/jacman/.git/ORIG_HEAD","hash":"51d4013e66aa8b536ba9b382ed64385114d32d9a","modified":1487259418163},{"_id":"themes/jacman/.git/config","hash":"be0a8da17af044443c4ba0add02e1cedebd88957","modified":1487252894095},{"_id":"themes/jacman/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1487252804991},{"_id":"themes/jacman/.git/index","hash":"94a30661426e0c7b449a915072bdbd5d419c5c6a","modified":1487252894151},{"_id":"themes/jacman/.git/packed-refs","hash":"facb04d8a7e4221a4b0b3dc3062a8ca586ade15d","modified":1487252894095},{"_id":"themes/jacman/languages/default.yml","hash":"eea72d6138497287c0b3f4bd93e4f6f62b7aff37","modified":1487252894139},{"_id":"themes/jacman/languages/zh-CN.yml","hash":"1f3b9d00dd4322352b0c9c82a76dc9865a616d41","modified":1487252894139},{"_id":"themes/jacman/languages/zh-TW.yml","hash":"61a02ba818d641579a86fcd7f5926ab1e6ab5f70","modified":1487252894139},{"_id":"themes/jacman/layout/archive.ejs","hash":"a18842e3d719fe3ca9b977a6995f8facc75c8673","modified":1487252894139},{"_id":"themes/jacman/layout/category.ejs","hash":"9b740fc33f6f028df60f0bc4312bf3ebd03aa8ea","modified":1487252894139},{"_id":"themes/jacman/layout/index.ejs","hash":"75cef2172c286994af412e11ab7f4f5a0daaf1f5","modified":1487252894139},{"_id":"themes/jacman/layout/layout.ejs","hash":"8565c9eb7ebb20ee294937b0560a356d77204a97","modified":1496496201755},{"_id":"themes/jacman/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1487252894139},{"_id":"themes/jacman/layout/page.ejs","hash":"bd6bbf2ea8e183bd835867ff617dc6366b56748c","modified":1487252894139},{"_id":"themes/jacman/layout/post.ejs","hash":"3114134775bdde5a83cf14feb019606fa2b2b2be","modified":1487252894139},{"_id":"themes/jacman/layout/tag.ejs","hash":"45150a2365768b6b67880193c9264ad2bb4814db","modified":1487333226342},{"_id":"themes/jacman/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1487252804987},{"_id":"themes/jacman/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1487252804975},{"_id":"themes/jacman/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1487252804987},{"_id":"themes/jacman/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1487252804987},{"_id":"themes/jacman/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1487252804987},{"_id":"themes/jacman/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1487252804987},{"_id":"themes/jacman/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1487252804963},{"_id":"themes/jacman/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1487252804975},{"_id":"themes/jacman/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1487252804975},{"_id":"themes/jacman/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1487252804991},{"_id":"themes/jacman/layout/_partial/analytics.ejs","hash":"101139f29add8536b90e4ce75d97b348c3037c33","modified":1487409434410},{"_id":"themes/jacman/layout/_partial/after_footer.ejs","hash":"cf8dccb09fc10f702cd7267b745d4a4f5563ce0e","modified":1496558131496},{"_id":"themes/jacman/layout/_partial/archive.ejs","hash":"2c7395e7563fe016521712a645c28a13f952d52a","modified":1487581504318},{"_id":"themes/jacman/layout/_partial/article.ejs","hash":"216233ea355575551c1abd42e13da29f537659a0","modified":1495193079380},{"_id":"themes/jacman/layout/_partial/article_row.ejs","hash":"4cb855d91ece7f67b2ca0992fffa55472d0b9c93","modified":1487252894139},{"_id":"themes/jacman/layout/_partial/footer.ejs","hash":"5f80bf6c6ddcf8c28c4599cd1540b14b25d54f18","modified":1487252894139},{"_id":"themes/jacman/layout/_partial/categories.ejs","hash":"8a52d0344d5bce1925cf586ed73c11192925209b","modified":1487252894139},{"_id":"themes/jacman/layout/_partial/head.ejs","hash":"185d296f52a4486e1d767e80ac101b75d9c7ac0e","modified":1496560672606},{"_id":"themes/jacman/layout/_partial/header.ejs","hash":"5fa9e0649a02672b6930150e342a0d054f40d720","modified":1500626686251},{"_id":"themes/jacman/layout/_partial/mathjax.ejs","hash":"d42994ac696f52ba99c1cbac382cd76d5b04a3e8","modified":1487252894139},{"_id":"themes/jacman/layout/_partial/pagination.ejs","hash":"6146ac37dfb4f8613090bc52b3fc8cfa911a186a","modified":1487252894139},{"_id":"themes/jacman/layout/_partial/nav.ejs","hash":"128fae8c3517984a20bcb6a418cecba0b7f5df59","modified":1487622149841},{"_id":"themes/jacman/layout/_partial/portfolio.ejs","hash":"ae64f0de199735f0ee676efef60693c21af1a9ee","modified":1487590965758},{"_id":"themes/jacman/layout/_partial/search.ejs","hash":"624d4eb7b79747b4e8174d21aef79339d7002f09","modified":1500620683228},{"_id":"themes/jacman/layout/_partial/sidebar.ejs","hash":"c4f527fff0070fbe65919053a16224412317f40d","modified":1487252894139},{"_id":"themes/jacman/layout/_partial/tags.ejs","hash":"b33b2b5d08f1d53a8de25a95f660f7f1cea7b3cb","modified":1487357349506},{"_id":"themes/jacman/layout/_partial/tinysou_search.ejs","hash":"953023b3477eac5f93b497910bb37a58843955ca","modified":1495353953354},{"_id":"themes/jacman/layout/_widget/archive.ejs","hash":"39ea6b7888406fbd1b4cf236ebd718e881493374","modified":1487252894139},{"_id":"themes/jacman/layout/_partial/totop.ejs","hash":"bea5bb7cb9350b8af7d97a8d223af63a5b30ab78","modified":1487252894139},{"_id":"themes/jacman/layout/_widget/douban.ejs","hash":"e3820c36169e88663e6c9177666b2904c1ce47e6","modified":1487252894139},{"_id":"themes/jacman/layout/_widget/category.ejs","hash":"c1fae96b5053da021bcc04ab2ce5c2c8d30de8a2","modified":1487252894139},{"_id":"themes/jacman/layout/_widget/rss.ejs","hash":"0a4b5f2a2e36a1d504fe2e7c6c8372cbb4628aab","modified":1487252894139},{"_id":"themes/jacman/layout/_widget/links.ejs","hash":"e49868063439c2092cdf9a8ec82cc295b0e42f66","modified":1487252894139},{"_id":"themes/jacman/layout/_widget/tag.ejs","hash":"7e82ad9c916b9ce871b2f65ce8f283c5ba47947b","modified":1487252894139},{"_id":"themes/jacman/layout/_widget/github-card.ejs","hash":"5c759b6ea214bac56a393247de27e67ce73fb33f","modified":1487252894139},{"_id":"themes/jacman/layout/_widget/weibo.ejs","hash":"a31c2b223d0feb2a227e203cac9e5d13b7d328a8","modified":1487252894139},{"_id":"themes/jacman/layout/_widget/tagcloud.ejs","hash":"10a1001189d5c28ce6d42494563b9637c302b454","modified":1487252894139},{"_id":"themes/jacman/source/css/style.styl","hash":"e1a21feddf85963920d98eee973327119f645442","modified":1496038396216},{"_id":"themes/jacman/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1487252894139},{"_id":"themes/jacman/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1487252894139},{"_id":"themes/jacman/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1487252894139},{"_id":"themes/jacman/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1487252894139},{"_id":"themes/jacman/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1487252894139},{"_id":"themes/jacman/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1487252894139},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1487252894143},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1487252894143},{"_id":"themes/jacman/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1487252894143},{"_id":"themes/jacman/source/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1487252894143},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1487252894143},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1487252894143},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1487252894143},{"_id":"themes/jacman/source/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1487252894143},{"_id":"themes/jacman/source/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1487252894147},{"_id":"themes/jacman/source/font/fontdiao.eot","hash":"9544a0d7ba208989302bc4da5a184faeb0e883c9","modified":1487252894147},{"_id":"themes/jacman/source/font/fontdiao.ttf","hash":"ee9fd7be2493c9bf6d2841044e69a0830d9d3fab","modified":1487252894147},{"_id":"themes/jacman/source/font/fontdiao.woff","hash":"71f54eb6e98aa28cafeb04aab71c0e5b349ea89f","modified":1487252894147},{"_id":"themes/jacman/source/img/HeadPicture.png","hash":"94daa136fb08c10c735e50ad959ac5d5d48ee9ba","modified":1487538478078},{"_id":"themes/jacman/source/img/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1487252894151},{"_id":"themes/jacman/source/img/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1487252894151},{"_id":"themes/jacman/source/img/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1487252894151},{"_id":"themes/jacman/source/img/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1487252894151},{"_id":"themes/jacman/source/img/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1487252894151},{"_id":"themes/jacman/source/img/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1487252894151},{"_id":"themes/jacman/source/img/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1487252894151},{"_id":"themes/jacman/source/img/favicon.ico","hash":"2d22a3e0c7905a894e832c831dd91c29c209c7a5","modified":1487252894151},{"_id":"themes/jacman/source/img/jacman.jpg","hash":"0ba14a4a5e3be012826fc713c33479912126d34e","modified":1487252894151},{"_id":"themes/jacman/source/img/logo.svg","hash":"9ae38f7225c38624faeb7b74996efa9de7bf065b","modified":1487252894151},{"_id":"themes/jacman/source/img/scrollup.png","hash":"2137d4f1739aa8aa3fcb0348c3ddf1e41d62f2e3","modified":1487252894151},{"_id":"themes/jacman/source/js/creative.min.js","hash":"8c7ac020ed83c2f6be3ab676cbbdc860f831de40","modified":1471639055000},{"_id":"themes/jacman/source/js/bootstrap.min.js","hash":"430a443d74830fe9be26efca431f448c1b3740f9","modified":1471639055000},{"_id":"themes/jacman/source/js/gallery.js","hash":"f8a4ba7fb8349cca374a3c69fff9b2bf21f742ed","modified":1487252894151},{"_id":"themes/jacman/source/js/jquery.imagesloaded.min.js","hash":"4109837b1f6477bacc6b095a863b1b95b1b3693f","modified":1487252894151},{"_id":"themes/jacman/source/js/jquery.qrcode-0.12.0.min.js","hash":"57c3987166a26415a71292162690e82c21e315ad","modified":1487252894151},{"_id":"themes/jacman/.git/logs/HEAD","hash":"2bf7952a8a7f854d62262d3418c2729cd7d2688c","modified":1487252894095},{"_id":"themes/jacman/source/js/totop.js","hash":"cad23c5ea7163d1e5c05a0fd3ef9233469da10cb","modified":1487252894151},{"_id":"themes/jacman/source/css/bootstrap.min.css","hash":"6527d8bf3e1e9368bab8c7b60f56bc01fa3afd68","modified":1471639055000},{"_id":"themes/jacman/source/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1487252894147},{"_id":"themes/jacman/source/font/coveredbyyourgrace-webfont.svg","hash":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1487252894143},{"_id":"themes/jacman/source/font/fontdiao.svg","hash":"334a94e6a66a8b089be7315d876bec93efe38d2b","modified":1487252894147},{"_id":"themes/jacman/source/img/header.jpg","hash":"8fc993a20593a19d7d8c5629d2106f54ef340283","modified":1487326266746},{"_id":"themes/jacman/source/img/logo.png","hash":"64e2cf379aa3c956af5a30245303af09400e48c2","modified":1487538509302},{"_id":"themes/jacman/source/js/jquery-2.0.3.min.js","hash":"a0ae3697b0ab8c0e8bd3186c80db42abd6d97a8d","modified":1487252894151},{"_id":"themes/jacman/source/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1471639055000},{"_id":"themes/jacman/.git/objects/pack/pack-ab6dc588f377f30f418f9a0dee75d73a3ddfefbe.idx","hash":"ffce738349b28c63d2b58fc59c8966bb54f558e4","modified":1487252893951},{"_id":"themes/jacman/.git/refs/heads/master","hash":"51d4013e66aa8b536ba9b382ed64385114d32d9a","modified":1487252894095},{"_id":"themes/jacman/layout/_partial/post/catetags.ejs","hash":"0e37bababc8f4659f5b59a552a946b46d89e4158","modified":1487252894139},{"_id":"themes/jacman/layout/_partial/post/comment.ejs","hash":"a59677d0a7044c57bdd01d6e33a0fcbbd4138cd0","modified":1495335075618},{"_id":"themes/jacman/layout/_partial/post/footer.ejs","hash":"7341c3301a04ad9dcdb8bfa4f9baca5fb1af6b53","modified":1487360196226},{"_id":"themes/jacman/layout/_partial/post/gallery.ejs","hash":"fafc2501d7e65983b0f5c2b58151ca12e57c0574","modified":1496062343042},{"_id":"themes/jacman/layout/_partial/post/header.ejs","hash":"7fc8363dd5d32c5bc44f4fcad7056e1d93221e10","modified":1487520674202},{"_id":"themes/jacman/layout/_partial/post/article.ejs","hash":"b09e3acea7076e1f01dfe0c2295e19951ea09437","modified":1487581192646},{"_id":"themes/jacman/layout/_partial/post/jiathis.ejs","hash":"d7f5960039ac74924559ab6ba03c64457b8f0966","modified":1487252894139},{"_id":"themes/jacman/layout/_partial/post/pagination.ejs","hash":"7de9c07a4c968429a8088c31a28b7f3a993ded1b","modified":1487252894139},{"_id":"themes/jacman/source/css/_base/font.styl","hash":"c8a0faf43b08e37ad07a5669db76d595da966159","modified":1487252894139},{"_id":"themes/jacman/source/css/_base/variable.styl","hash":"cb652eb83c28a208743fabab92de896f8b7cbf7b","modified":1487252894139},{"_id":"themes/jacman/source/css/_base/public.styl","hash":"f016180726019927b9a835ed01e04d153f27a149","modified":1487252894139},{"_id":"themes/jacman/source/css/_partial/article.styl","hash":"c69641b4a34a8c62986b335414413dbde26de25e","modified":1487252894139},{"_id":"themes/jacman/source/css/_my/creative.styl","hash":"4bc6bd3db6690e9fdadc6cbf3f4cd4e31ff303be","modified":1495978535943},{"_id":"themes/jacman/source/css/_partial/aside.styl","hash":"506fde1d67ce750452cbe84bee01a19c7d027c5e","modified":1487252894139},{"_id":"themes/jacman/source/css/_my/mycss.styl","hash":"5b7509d5f2dc47b44dbf8221b47bdd7793159fe3","modified":1496558103237},{"_id":"themes/jacman/source/css/_partial/duoshuo.styl","hash":"e85f1192283f043115c272a9deb3cb6ced793990","modified":1487252894139},{"_id":"themes/jacman/source/css/_partial/footer.styl","hash":"1911613a19b605a58f801c21b03b5d4c83b90f9c","modified":1487252894139},{"_id":"themes/jacman/source/css/_partial/gallery.styl","hash":"7246809f4ce3166ec1b259bf475cae1a48e29aad","modified":1487252894139},{"_id":"themes/jacman/source/css/_partial/header.styl","hash":"6dd90090c8de009ff7fab7e777304f17b1752118","modified":1487610299805},{"_id":"themes/jacman/source/css/_partial/helper.styl","hash":"1136600932b97534b88465bf05ef313630b2de3d","modified":1487252894139},{"_id":"themes/jacman/source/css/_partial/totop.styl","hash":"96363d7c5aaed5f649667fc0752a62620a67e872","modified":1487252894139},{"_id":"themes/jacman/source/css/_partial/index.styl","hash":"a72ff14effd276015264f870f47ed8f8413bf5d3","modified":1487252894139},{"_id":"themes/jacman/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1487252894143},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1487252894143},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1487252894143},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1487252894143},{"_id":"themes/jacman/source/img/author.jpg","hash":"4f3adaac9cdd22d388a98ceae77dddf36b3950a7","modified":1495611431985},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1487252894143},{"_id":"themes/jacman/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1487252894143},{"_id":"themes/jacman/source/font/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1487252894147},{"_id":"themes/jacman/source/img/banner.jpg","hash":"5104860c4f8b2e84ef734ba6c37fe7a288bf0d74","modified":1487252894147},{"_id":"themes/jacman/source/css/_base/highlight/highlight.styl","hash":"91b62bfc58390b0d5db782a75be6965ee3665eb3","modified":1487252894139},{"_id":"themes/jacman/source/css/_base/highlight/theme.styl","hash":"e3a59bd427ba37a54ead9eeba9a5356b3f720a48","modified":1487252894139},{"_id":"themes/jacman/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1487252894095},{"_id":"themes/jacman/.git/logs/refs/heads/master","hash":"2bf7952a8a7f854d62262d3418c2729cd7d2688c","modified":1487252894095},{"_id":"themes/jacman/.git/logs/refs/remotes/origin/HEAD","hash":"2bf7952a8a7f854d62262d3418c2729cd7d2688c","modified":1487252894095},{"_id":"themes/jacman/.git/objects/pack/pack-ab6dc588f377f30f418f9a0dee75d73a3ddfefbe.pack","hash":"2ffe527650d1415ff773818614141d27a97fba7d","modified":1487252893951},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1501483270324},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1501483270324},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1501483270324},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1501483270324},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1501483270324},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1501483270324},{"_id":"public/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1501483270324},{"_id":"public/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1501483270324},{"_id":"public/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1501483270324},{"_id":"public/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1501483270324},{"_id":"public/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1501483270324},{"_id":"public/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1501483270324},{"_id":"public/font/fontdiao.eot","hash":"9544a0d7ba208989302bc4da5a184faeb0e883c9","modified":1501483270325},{"_id":"public/font/fontdiao.woff","hash":"71f54eb6e98aa28cafeb04aab71c0e5b349ea89f","modified":1501483270325},{"_id":"public/font/fontdiao.ttf","hash":"ee9fd7be2493c9bf6d2841044e69a0830d9d3fab","modified":1501483270325},{"_id":"public/img/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1501483270325},{"_id":"public/img/HeadPicture.png","hash":"94daa136fb08c10c735e50ad959ac5d5d48ee9ba","modified":1501483270325},{"_id":"public/img/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1501483270325},{"_id":"public/img/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1501483270325},{"_id":"public/img/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1501483270325},{"_id":"public/img/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1501483270325},{"_id":"public/img/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1501483270325},{"_id":"public/img/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1501483270325},{"_id":"public/img/favicon.ico","hash":"2d22a3e0c7905a894e832c831dd91c29c209c7a5","modified":1501483270325},{"_id":"public/img/jacman.jpg","hash":"0ba14a4a5e3be012826fc713c33479912126d34e","modified":1501483270325},{"_id":"public/img/logo.svg","hash":"9ae38f7225c38624faeb7b74996efa9de7bf065b","modified":1501483270325},{"_id":"public/img/scrollup.png","hash":"2137d4f1739aa8aa3fcb0348c3ddf1e41d62f2e3","modified":1501483270325},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1501483270325},{"_id":"public/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1501483271324},{"_id":"public/font/coveredbyyourgrace-webfont.svg","hash":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1501483271327},{"_id":"public/font/fontdiao.svg","hash":"334a94e6a66a8b089be7315d876bec93efe38d2b","modified":1501483271328},{"_id":"public/img/header.jpg","hash":"8fc993a20593a19d7d8c5629d2106f54ef340283","modified":1501483271328},{"_id":"public/img/logo.png","hash":"64e2cf379aa3c956af5a30245303af09400e48c2","modified":1501483271328},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1501483271340},{"_id":"public/js/creative.min.js","hash":"8c7ac020ed83c2f6be3ab676cbbdc860f831de40","modified":1501483271340},{"_id":"public/js/gallery.js","hash":"f8a4ba7fb8349cca374a3c69fff9b2bf21f742ed","modified":1501483271340},{"_id":"public/js/jquery.imagesloaded.min.js","hash":"4109837b1f6477bacc6b095a863b1b95b1b3693f","modified":1501483271340},{"_id":"public/js/totop.js","hash":"cad23c5ea7163d1e5c05a0fd3ef9233469da10cb","modified":1501483271340},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1501483271340},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1501483271340},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1501483271340},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1501483271340},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1501483271340},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1501483271340},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1501483271341},{"_id":"public/js/bootstrap.min.js","hash":"430a443d74830fe9be26efca431f448c1b3740f9","modified":1501483271341},{"_id":"public/js/jquery.qrcode-0.12.0.min.js","hash":"57c3987166a26415a71292162690e82c21e315ad","modified":1501483271341},{"_id":"public/css/bootstrap.min.css","hash":"6527d8bf3e1e9368bab8c7b60f56bc01fa3afd68","modified":1501483271341},{"_id":"public/js/jquery-2.0.3.min.js","hash":"a0ae3697b0ab8c0e8bd3186c80db42abd6d97a8d","modified":1501483271341},{"_id":"public/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1501483271342},{"_id":"public/font/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1501483271345},{"_id":"public/img/banner.jpg","hash":"5104860c4f8b2e84ef734ba6c37fe7a288bf0d74","modified":1501483271345}],"Category":[{"name":"photos","_id":"cj5rs2em70004npjx56fvp393"},{"name":"English","_id":"cj5rs2emv000gnpjxlups8psh"},{"name":"SpringMvc","_id":"cj5rs2en0000lnpjxx5asuv95"},{"name":"js","_id":"cj5rs2en6000snpjxbisk4qik"},{"name":"java","_id":"cj5rs2ena000znpjxw99qqfed"},{"name":"angularjs","_id":"cj5rs2enl001anpjxu9os7g4v"},{"name":"css","_id":"cj5rs2enr001inpjxzd4dmj2i"},{"name":"php","_id":"cj5rs2eny001pnpjxak322pqy"},{"name":"数据结构","_id":"cj5rs2eo3001wnpjxqnburtix"}],"Data":[],"Page":[{"layout":"page","title":"About me","_content":"<div id=\"posts\" class=\"posts-expand\">\n    <h2>Name</h2><p>楚航</p>\n    <h2>I Am</h2><p>河北工业大学梦云智软件开发团队成员。</p>\n</div>\n","source":"about/index.md","raw":"---\nlayout: page\ntitle: About me\n---\n<div id=\"posts\" class=\"posts-expand\">\n    <h2>Name</h2><p>楚航</p>\n    <h2>I Am</h2><p>河北工业大学梦云智软件开发团队成员。</p>\n</div>\n","date":"2017-05-13T11:45:58.627Z","updated":"2017-02-16T15:31:13.607Z","path":"about/index.html","comments":1,"_id":"cj5rs2em10001npjx98qov0wh","content":"<div id=\"posts\" class=\"posts-expand\"><br>    <h2>Name</h2><p>楚航</p><br>    <h2>I Am</h2><p>河北工业大学梦云智软件开发团队成员。</p><br></div>\n","excerpt":"","more":"<div id=\"posts\" class=\"posts-expand\"><br>    <h2>Name</h2><p>楚航</p><br>    <h2>I Am</h2><p>河北工业大学梦云智软件开发团队成员。</p><br></div>\n"},{"title":"categories","date":"2017-07-30T02:04:50.000Z","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-07-30 10:04:50\nlayout: categories\n---\n","updated":"2017-07-30T03:20:47.847Z","path":"categories/index.html","comments":1,"_id":"cj5rs2em40003npjx3ejryp63","content":"","excerpt":"","more":""},{"layout":"search","title":"search","_content":"","source":"source/index.md","raw":"layout: search\ntitle: search\n---","date":"2017-05-13T11:45:58.627Z","updated":"2017-02-20T16:57:48.245Z","path":"source/index.html","comments":1,"_id":"cj5rs2eme0006npjxtl8hdhgn","content":"","excerpt":"","more":""},{"title":"tags","date":"2017-07-30T02:06:17.000Z","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-07-30 10:06:17\nlayout: tags\n---\n","updated":"2017-07-30T03:21:32.452Z","path":"tags/index.html","comments":1,"_id":"cj5rs2emj0008npjxysd01tov","content":"","excerpt":"","more":""}],"Post":[{"title":"16-17美图集","date":"2017-04-30T01:54:34.000Z","_content":"\n16-17和媳妇儿的美图\n<!--more-->\n\n<video src='http://oligray7m.bkt.clouddn.com/w0386t31jri.10703.1.mp4 ' type='video/mp4' controls='controls'  width='100%' height='100%'>\n</video>\n\n## 美图\n<img src=\"/love/1617meitu/1.jpg\">  <img src=\"/love/1617meitu/2.jpg\">\n<img src=\"/love/1617meitu/3.jpg\">  <img src=\"/love/1617meitu/4.jpg\"><img src=\"/love/1617meitu/5.jpg\">  <img src=\"/love/1617meitu/6.jpg\"><img src=\"/love/1617meitu/7.jpg\">  <img src=\"/love/1617meitu/8.jpg\"><img src=\"/love/1617meitu/9.jpg\">  <img src=\"/love/1617meitu/16.jpg\">\n<img src=\"/love/1617meitu/10.jpg\">  <img src=\"/love/1617meitu/17.jpg\">\n<img src=\"/love/1617meitu/11.jpg\">  <img src=\"/love/1617meitu/18.jpg\">\n<img src=\"/love/1617meitu/12.jpg\">  <img src=\"/love/1617meitu/19.jpg\">\n<img src=\"/love/1617meitu/13.jpg\">  <img src=\"/love/1617meitu/20.jpg\">\n<img src=\"/love/1617meitu/14.jpg\">  <img src=\"/love/1617meitu/21.jpg\">\n<img src=\"/love/1617meitu/15.jpg\">  <img src=\"/love/1617meitu/22.jpg\">\n<img src=\"/love/1617meitu/23.jpg\">  <img src=\"/love/1617meitu/27.jpg\">\n<img src=\"/love/1617meitu/24.jpg\">  <img src=\"/love/1617meitu/28.jpg\">\n<img src=\"/love/1617meitu/25.jpg\">  <img src=\"/love/1617meitu/29.jpg\">\n<img src=\"/love/1617meitu/26.jpg\">  <img src=\"/love/1617meitu/30.jpg\">\n<img src=\"/love/1617meitu/32.jpg\">  <img src=\"/love/1617meitu/31.jpg\">\n<img src=\"/love/1617meitu/33.jpg\">  <img src=\"/love/1617meitu/34.jpg\">\n","source":"_posts/16-17美图集.md","raw":"---\ntitle: 16-17美图集\ndate: 2017-04-30 09:54:34\ncategories: photos\n---\n\n16-17和媳妇儿的美图\n<!--more-->\n\n<video src='http://oligray7m.bkt.clouddn.com/w0386t31jri.10703.1.mp4 ' type='video/mp4' controls='controls'  width='100%' height='100%'>\n</video>\n\n## 美图\n<img src=\"/love/1617meitu/1.jpg\">  <img src=\"/love/1617meitu/2.jpg\">\n<img src=\"/love/1617meitu/3.jpg\">  <img src=\"/love/1617meitu/4.jpg\"><img src=\"/love/1617meitu/5.jpg\">  <img src=\"/love/1617meitu/6.jpg\"><img src=\"/love/1617meitu/7.jpg\">  <img src=\"/love/1617meitu/8.jpg\"><img src=\"/love/1617meitu/9.jpg\">  <img src=\"/love/1617meitu/16.jpg\">\n<img src=\"/love/1617meitu/10.jpg\">  <img src=\"/love/1617meitu/17.jpg\">\n<img src=\"/love/1617meitu/11.jpg\">  <img src=\"/love/1617meitu/18.jpg\">\n<img src=\"/love/1617meitu/12.jpg\">  <img src=\"/love/1617meitu/19.jpg\">\n<img src=\"/love/1617meitu/13.jpg\">  <img src=\"/love/1617meitu/20.jpg\">\n<img src=\"/love/1617meitu/14.jpg\">  <img src=\"/love/1617meitu/21.jpg\">\n<img src=\"/love/1617meitu/15.jpg\">  <img src=\"/love/1617meitu/22.jpg\">\n<img src=\"/love/1617meitu/23.jpg\">  <img src=\"/love/1617meitu/27.jpg\">\n<img src=\"/love/1617meitu/24.jpg\">  <img src=\"/love/1617meitu/28.jpg\">\n<img src=\"/love/1617meitu/25.jpg\">  <img src=\"/love/1617meitu/29.jpg\">\n<img src=\"/love/1617meitu/26.jpg\">  <img src=\"/love/1617meitu/30.jpg\">\n<img src=\"/love/1617meitu/32.jpg\">  <img src=\"/love/1617meitu/31.jpg\">\n<img src=\"/love/1617meitu/33.jpg\">  <img src=\"/love/1617meitu/34.jpg\">\n","slug":"16-17美图集","published":1,"updated":"2017-06-04T12:34:57.181Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2elw0000npjxxr23azb5","content":"<p>16-17和媳妇儿的美图<br><a id=\"more\"></a></p>\n<video src=\"http://oligray7m.bkt.clouddn.com/w0386t31jri.10703.1.mp4 \" type=\"video/mp4\" controls=\"controls\" width=\"100%\" height=\"100%\"><br></video>\n\n<h2 id=\"美图\"><a href=\"#美图\" class=\"headerlink\" title=\"美图\"></a>美图</h2><p><img src=\"/love/1617meitu/1.jpg\">  <img src=\"/love/1617meitu/2.jpg\"><br><img src=\"/love/1617meitu/3.jpg\">  <img src=\"/love/1617meitu/4.jpg\"><img src=\"/love/1617meitu/5.jpg\">  <img src=\"/love/1617meitu/6.jpg\"><img src=\"/love/1617meitu/7.jpg\">  <img src=\"/love/1617meitu/8.jpg\"><img src=\"/love/1617meitu/9.jpg\">  <img src=\"/love/1617meitu/16.jpg\"><br><img src=\"/love/1617meitu/10.jpg\">  <img src=\"/love/1617meitu/17.jpg\"><br><img src=\"/love/1617meitu/11.jpg\">  <img src=\"/love/1617meitu/18.jpg\"><br><img src=\"/love/1617meitu/12.jpg\">  <img src=\"/love/1617meitu/19.jpg\"><br><img src=\"/love/1617meitu/13.jpg\">  <img src=\"/love/1617meitu/20.jpg\"><br><img src=\"/love/1617meitu/14.jpg\">  <img src=\"/love/1617meitu/21.jpg\"><br><img src=\"/love/1617meitu/15.jpg\">  <img src=\"/love/1617meitu/22.jpg\"><br><img src=\"/love/1617meitu/23.jpg\">  <img src=\"/love/1617meitu/27.jpg\"><br><img src=\"/love/1617meitu/24.jpg\">  <img src=\"/love/1617meitu/28.jpg\"><br><img src=\"/love/1617meitu/25.jpg\">  <img src=\"/love/1617meitu/29.jpg\"><br><img src=\"/love/1617meitu/26.jpg\">  <img src=\"/love/1617meitu/30.jpg\"><br><img src=\"/love/1617meitu/32.jpg\">  <img src=\"/love/1617meitu/31.jpg\"><br><img src=\"/love/1617meitu/33.jpg\">  <img src=\"/love/1617meitu/34.jpg\"></p>\n","excerpt":"<p>16-17和媳妇儿的美图<br>","more":"</p>\n<video src='http://oligray7m.bkt.clouddn.com/w0386t31jri.10703.1.mp4 ' type='video/mp4' controls='controls'  width='100%' height='100%'><br></video>\n\n<h2 id=\"美图\"><a href=\"#美图\" class=\"headerlink\" title=\"美图\"></a>美图</h2><p><img src=\"/love/1617meitu/1.jpg\">  <img src=\"/love/1617meitu/2.jpg\"><br><img src=\"/love/1617meitu/3.jpg\">  <img src=\"/love/1617meitu/4.jpg\"><img src=\"/love/1617meitu/5.jpg\">  <img src=\"/love/1617meitu/6.jpg\"><img src=\"/love/1617meitu/7.jpg\">  <img src=\"/love/1617meitu/8.jpg\"><img src=\"/love/1617meitu/9.jpg\">  <img src=\"/love/1617meitu/16.jpg\"><br><img src=\"/love/1617meitu/10.jpg\">  <img src=\"/love/1617meitu/17.jpg\"><br><img src=\"/love/1617meitu/11.jpg\">  <img src=\"/love/1617meitu/18.jpg\"><br><img src=\"/love/1617meitu/12.jpg\">  <img src=\"/love/1617meitu/19.jpg\"><br><img src=\"/love/1617meitu/13.jpg\">  <img src=\"/love/1617meitu/20.jpg\"><br><img src=\"/love/1617meitu/14.jpg\">  <img src=\"/love/1617meitu/21.jpg\"><br><img src=\"/love/1617meitu/15.jpg\">  <img src=\"/love/1617meitu/22.jpg\"><br><img src=\"/love/1617meitu/23.jpg\">  <img src=\"/love/1617meitu/27.jpg\"><br><img src=\"/love/1617meitu/24.jpg\">  <img src=\"/love/1617meitu/28.jpg\"><br><img src=\"/love/1617meitu/25.jpg\">  <img src=\"/love/1617meitu/29.jpg\"><br><img src=\"/love/1617meitu/26.jpg\">  <img src=\"/love/1617meitu/30.jpg\"><br><img src=\"/love/1617meitu/32.jpg\">  <img src=\"/love/1617meitu/31.jpg\"><br><img src=\"/love/1617meitu/33.jpg\">  <img src=\"/love/1617meitu/34.jpg\"></p>"},{"title":"16-17跟媳妇平凡的日子","date":"2017-04-30T01:55:08.000Z","_content":"\n16-17和媳妇平凡的日子。\n<!--more-->\n\n## 图片\n\n<img src=\"/love/16-17shenghuo/16-17shenghuo (1).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (2).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (3).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (4).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (5).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (6).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (7).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (8).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (9).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (10).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (11).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (12).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (13).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (14).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (15).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (16).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (17).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (18).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (19).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (20).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (21).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (22).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (23).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (24).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (25).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (26).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (27).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (28).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (29).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (30).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (31).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (32).jpg\">   <img src=\"/love/16-17shenghuo/16-17shenghuo (33).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (34).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (35).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (36).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (37).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (38).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (39).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (40).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (41).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (42).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (43).jpg\"> <img src=\"/love/16-17shenghuo/16-17shenghuo (44).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (45).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (46).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (47).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (48).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (49).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (50).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (51).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (52).jpg\"> <img src=\"/love/16-17shenghuo/16-17shenghuo (53).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (54).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (55).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (56).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (57).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (58).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (59).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (60).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (61).jpg\"> ****","source":"_posts/16-17跟媳妇平凡的日子.md","raw":"---\ntitle: 16-17跟媳妇平凡的日子\ndate: 2017-04-30 09:55:08\ncategories: photos\n---\n\n16-17和媳妇平凡的日子。\n<!--more-->\n\n## 图片\n\n<img src=\"/love/16-17shenghuo/16-17shenghuo (1).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (2).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (3).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (4).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (5).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (6).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (7).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (8).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (9).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (10).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (11).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (12).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (13).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (14).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (15).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (16).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (17).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (18).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (19).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (20).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (21).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (22).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (23).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (24).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (25).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (26).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (27).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (28).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (29).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (30).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (31).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (32).jpg\">   <img src=\"/love/16-17shenghuo/16-17shenghuo (33).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (34).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (35).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (36).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (37).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (38).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (39).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (40).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (41).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (42).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (43).jpg\"> <img src=\"/love/16-17shenghuo/16-17shenghuo (44).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (45).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (46).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (47).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (48).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (49).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (50).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (51).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (52).jpg\"> <img src=\"/love/16-17shenghuo/16-17shenghuo (53).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (54).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (55).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (56).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (57).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (58).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (59).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (60).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (61).jpg\"> ****","slug":"16-17跟媳妇平凡的日子","published":1,"updated":"2017-05-31T14:30:19.249Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2em30002npjxmzw4y09w","content":"<p>16-17和媳妇平凡的日子。<br><a id=\"more\"></a></p>\n<h2 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h2><p><img src=\"/love/16-17shenghuo/16-17shenghuo (1).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (2).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (3).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (4).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (5).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (6).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (7).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (8).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (9).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (10).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (11).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (12).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (13).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (14).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (15).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (16).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (17).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (18).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (19).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (20).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (21).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (22).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (23).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (24).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (25).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (26).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (27).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (28).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (29).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (30).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (31).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (32).jpg\">   <img src=\"/love/16-17shenghuo/16-17shenghuo (33).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (34).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (35).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (36).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (37).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (38).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (39).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (40).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (41).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (42).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (43).jpg\"> <img src=\"/love/16-17shenghuo/16-17shenghuo (44).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (45).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (46).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (47).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (48).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (49).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (50).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (51).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (52).jpg\"> <img src=\"/love/16-17shenghuo/16-17shenghuo (53).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (54).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (55).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (56).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (57).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (58).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (59).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (60).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (61).jpg\"> <em>**</em></p>\n","excerpt":"<p>16-17和媳妇平凡的日子。<br>","more":"</p>\n<h2 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h2><p><img src=\"/love/16-17shenghuo/16-17shenghuo (1).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (2).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (3).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (4).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (5).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (6).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (7).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (8).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (9).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (10).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (11).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (12).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (13).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (14).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (15).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (16).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (17).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (18).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (19).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (20).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (21).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (22).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (23).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (24).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (25).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (26).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (27).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (28).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (29).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (30).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (31).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (32).jpg\">   <img src=\"/love/16-17shenghuo/16-17shenghuo (33).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (34).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (35).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (36).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (37).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (38).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (39).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (40).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (41).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (42).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (43).jpg\"> <img src=\"/love/16-17shenghuo/16-17shenghuo (44).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (45).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (46).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (47).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (48).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (49).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (50).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (51).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (52).jpg\"> <img src=\"/love/16-17shenghuo/16-17shenghuo (53).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (54).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (55).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (56).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (57).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (58).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (59).jpg\">  <img src=\"/love/16-17shenghuo/16-17shenghuo (60).jpg\"><img src=\"/love/16-17shenghuo/16-17shenghuo (61).jpg\"> <em>**</em></p>"},{"title":"Difference between GET and POST","date":"2017-05-16T01:51:34.000Z","_content":"\n\n\n\n According to the online information and the books of PHP, I have sorted out the difference between GET and  POST to deepen memory and share with you. Intrinsical distincetion in them is that GET is used to query information but POST is used to update or save information. \n \n <!--more-->\n \n### security\n We might see some documents  sometimes display that GET is safe but  disply it is not safe sometimes. But whether GET is safe or not ? GET is displayed to be safe in the documents because  we can not change data by using GET.  And GET is displayed to be not safe in the documents because when we use GET to submit data, data will display in url.\n \n###  The size of the data transfer\n \n + GET\n url is limited in special browser or server. For example, the length of url in IE browser is limited  as 2k+35 byters. As for other browsers, url might be limited by operating system instead of browsers. So when we use GET to transefer data, the length will be limited.\n \n+ POST\n because POST dose not use url to transfer data, the size of data is not limited theoretically. Actually, web server will limite the size of data of POST(Generally does not affect). So when we upload massive data, we can only use POST.\n \n\n \n###  Data encoding\nAs the GET data is displayed in the url, and url encoding is used in ASCII coding, so the data we submit  must be ASCII coding. If it is not ASCII coding, we need to convert.\n\n\n### Default form\nGET is the default action of form.\n\n### Relationship with server\nGET is used to get data from server, while POST is used to transfer data to server.","source":"_posts/Difference-between-GET-and-POST.md","raw":"---\ntitle: Difference between GET and POST\ndate: 2017-05-16 09:51:34\ntags: \n\t[GET, POST]\ncategories: English\n---\n\n\n\n\n According to the online information and the books of PHP, I have sorted out the difference between GET and  POST to deepen memory and share with you. Intrinsical distincetion in them is that GET is used to query information but POST is used to update or save information. \n \n <!--more-->\n \n### security\n We might see some documents  sometimes display that GET is safe but  disply it is not safe sometimes. But whether GET is safe or not ? GET is displayed to be safe in the documents because  we can not change data by using GET.  And GET is displayed to be not safe in the documents because when we use GET to submit data, data will display in url.\n \n###  The size of the data transfer\n \n + GET\n url is limited in special browser or server. For example, the length of url in IE browser is limited  as 2k+35 byters. As for other browsers, url might be limited by operating system instead of browsers. So when we use GET to transefer data, the length will be limited.\n \n+ POST\n because POST dose not use url to transfer data, the size of data is not limited theoretically. Actually, web server will limite the size of data of POST(Generally does not affect). So when we upload massive data, we can only use POST.\n \n\n \n###  Data encoding\nAs the GET data is displayed in the url, and url encoding is used in ASCII coding, so the data we submit  must be ASCII coding. If it is not ASCII coding, we need to convert.\n\n\n### Default form\nGET is the default action of form.\n\n### Relationship with server\nGET is used to get data from server, while POST is used to transfer data to server.","slug":"Difference-between-GET-and-POST","published":1,"updated":"2017-07-30T03:02:11.784Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2emc0005npjx80z90r8t","content":"<p> According to the online information and the books of PHP, I have sorted out the difference between GET and  POST to deepen memory and share with you. Intrinsical distincetion in them is that GET is used to query information but POST is used to update or save information. </p>\n <a id=\"more\"></a>\n<h3 id=\"security\"><a href=\"#security\" class=\"headerlink\" title=\"security\"></a>security</h3><p> We might see some documents  sometimes display that GET is safe but  disply it is not safe sometimes. But whether GET is safe or not ? GET is displayed to be safe in the documents because  we can not change data by using GET.  And GET is displayed to be not safe in the documents because when we use GET to submit data, data will display in url.</p>\n<h3 id=\"The-size-of-the-data-transfer\"><a href=\"#The-size-of-the-data-transfer\" class=\"headerlink\" title=\"The size of the data transfer\"></a>The size of the data transfer</h3><ul>\n<li>GET<br>url is limited in special browser or server. For example, the length of url in IE browser is limited  as 2k+35 byters. As for other browsers, url might be limited by operating system instead of browsers. So when we use GET to transefer data, the length will be limited.</li>\n</ul>\n<ul>\n<li>POST<br>because POST dose not use url to transfer data, the size of data is not limited theoretically. Actually, web server will limite the size of data of POST(Generally does not affect). So when we upload massive data, we can only use POST.</li>\n</ul>\n<h3 id=\"Data-encoding\"><a href=\"#Data-encoding\" class=\"headerlink\" title=\"Data encoding\"></a>Data encoding</h3><p>As the GET data is displayed in the url, and url encoding is used in ASCII coding, so the data we submit  must be ASCII coding. If it is not ASCII coding, we need to convert.</p>\n<h3 id=\"Default-form\"><a href=\"#Default-form\" class=\"headerlink\" title=\"Default form\"></a>Default form</h3><p>GET is the default action of form.</p>\n<h3 id=\"Relationship-with-server\"><a href=\"#Relationship-with-server\" class=\"headerlink\" title=\"Relationship with server\"></a>Relationship with server</h3><p>GET is used to get data from server, while POST is used to transfer data to server.</p>\n","excerpt":"<p> According to the online information and the books of PHP, I have sorted out the difference between GET and  POST to deepen memory and share with you. Intrinsical distincetion in them is that GET is used to query information but POST is used to update or save information. </p>","more":"<h3 id=\"security\"><a href=\"#security\" class=\"headerlink\" title=\"security\"></a>security</h3><p> We might see some documents  sometimes display that GET is safe but  disply it is not safe sometimes. But whether GET is safe or not ? GET is displayed to be safe in the documents because  we can not change data by using GET.  And GET is displayed to be not safe in the documents because when we use GET to submit data, data will display in url.</p>\n<h3 id=\"The-size-of-the-data-transfer\"><a href=\"#The-size-of-the-data-transfer\" class=\"headerlink\" title=\"The size of the data transfer\"></a>The size of the data transfer</h3><ul>\n<li>GET<br>url is limited in special browser or server. For example, the length of url in IE browser is limited  as 2k+35 byters. As for other browsers, url might be limited by operating system instead of browsers. So when we use GET to transefer data, the length will be limited.</li>\n</ul>\n<ul>\n<li>POST<br>because POST dose not use url to transfer data, the size of data is not limited theoretically. Actually, web server will limite the size of data of POST(Generally does not affect). So when we upload massive data, we can only use POST.</li>\n</ul>\n<h3 id=\"Data-encoding\"><a href=\"#Data-encoding\" class=\"headerlink\" title=\"Data encoding\"></a>Data encoding</h3><p>As the GET data is displayed in the url, and url encoding is used in ASCII coding, so the data we submit  must be ASCII coding. If it is not ASCII coding, we need to convert.</p>\n<h3 id=\"Default-form\"><a href=\"#Default-form\" class=\"headerlink\" title=\"Default form\"></a>Default form</h3><p>GET is the default action of form.</p>\n<h3 id=\"Relationship-with-server\"><a href=\"#Relationship-with-server\" class=\"headerlink\" title=\"Relationship with server\"></a>Relationship with server</h3><p>GET is used to get data from server, while POST is used to transfer data to server.</p>"},{"title":"在SpringMVC中启用https协议","date":"2017-06-26T08:02:03.000Z","_content":"\n由于项目需求，笔者使用SpringMVC开发的后台必须使用https协议。经过一番折腾后，终于完成了这一需求。但是由于刚接触spirng，水平有限，从中走了许多弯路，本文记录了问题的解决方案，并对从中踩过坑进行反思。\n\n<!--more-->\n## 获取SSL证书\n获取SSL证书的方式有两种\n+ 通过keytool生成在（需要java环境），打开终端输入下面的命令\n```\nkeytool -genkey -alias tomcat  -storetype PKCS12 -keyalg RSA -keysize 2048  -keystore keystore.p12 -validity 3650\n\nEnter keystore password:\nRe-enter new password:\nWhat is your first and last name?\n[Unknown]:\nWhat is the name of your organizational unit?\n[Unknown]:\nWhat is the name of your organization?\n[Unknown]:\nWhat is the name of your City or Locality?\n[Unknown]:\nWhat is the name of your State or Province?\n[Unknown]:\nWhat is the two-letter country code for this unit?\n[Unknown]:\nIs CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown correct?\n[no]: yes\n```\n完成后，将会在系统目录下生成 keystore.p12文件，你也可以在指定目录下生成该文件，如果在``/home/administrator/下载/installpackage/key``路径下生成keystore.p12文件，可使用下面的指令\n```\nkeytool -genkey -alias tomcat -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore /home/administrator/下载/installpackage/key/keystore.p12 -validity 3650\n```\n此方法比较方便快捷，但是浏览器会提示不安全（如下图），比较适用于开发阶段。\n![](/images/选区_079.png)\n+ 另外一种是通过正规渠道购买。\n\n## 在SpringMVC中启用https协议\n首先，在配置文件中引入Spring Boot依赖。Spring Boot内嵌的tomcat服务器会在http服务的8080端口启动。在application.properties文件中通过一下配置可启用https协议：\n```\nserver.port=8443\nserver.ssl.key-store=classpath:keystore.p12 \t\t//把之前生成的证书放在src/main/resources目录下\nserver.ssl.key-store-password=changeit\nserver.ssl.key-password=changeit\n```\n按照以上配置，启动应用程序，即可访问[https://localhost:8443](https://localhost:8443) 。\n\n## 将http请求重定向至http\n如果你也想使你的应用程序支持http服务，可以在配置文件中增加一下代码\n```\n  @Bean\n  public EmbeddedServletContainerFactory servletContainer() {\n      TomcatEmbeddedServletContainerFactory tomcat = new TomcatEmbeddedServletContainerFactory() {\n      @Override\n      protected void postProcessContext(Context context) {\n        SecurityConstraint securityConstraint = new SecurityConstraint();\n        securityConstraint.setUserConstraint(\"CONFIDENTIAL\");\n        SecurityCollection collection = new SecurityCollection();\n        collection.addPattern(\"/*\");\n        securityConstraint.addCollection(collection);\n        context.addConstraint(securityConstraint);\n      }\n    };\n\n    tomcat.addAdditionalTomcatConnectors(initiateHttpConnector());\n    return tomcat;\n  }\n  private Connector initiateHttpConnector() {\n    Connector connector = new Connector(\"org.apache.coyote.http11.Http11NioProtocol\");\n    connector.setScheme(\"http\");\n    connector.setPort(8080);\n    connector.setSecure(false);\n    connector.setRedirectPort(8443);\n\n    return connector;\n  }\n```\n配置完成后，如果您访问[http://localhost8080](http://localhost8080) ,浏览器将会跳转至[https://localhost:8443/](https://localhost:8443/) 。\n\n## 所犯的错误\n+ 最开始google这个问题时，看到starkoverflow中有人说使用https服务的前提条件就是配置tomcat支持https。但是之前认为每次应用程序能在tomcat服务器上启动，是因为idea自带的tomcat。后来看了一篇[官方文档](https://spring.io/blog/2014/03/07/deploying-spring-boot-applications) ，才知道是spring boot集成了tomcat。\n+ 有时候过于追求完美，在linux、windows系统下分别配置tomcat多个版本，然后在idea中集成tomcat时windows系统一直出问题，也耽误了一些时间。也因此有了[这篇博客](https://chuhang123.github.io/2017/06/23/%E5%9C%A8IDEA%E4%B8%AD%E9%83%A8%E7%BD%B2tomcat/) \n\n## 总结\n解决这个问题花费了较长时间，主要原因是平时看文档看的太少，对很多东西都不了解。解决问题的过程中很多情况是不知道把代码放在那，不清楚是否适用于本项目。解决的问题中下载了多个实例，对sping的架构有了进一步的认识。\n\n > 参考文献：\n 1. [Enable HTTPS in Spring Boot](https://drissamri.be/blog/java/enable-https-in-spring-boot/) \n 2.  https://spring.io/blog/2014/03/07/deploying-spring-boot-applications\n 3. https://spring.io/guides/gs/securing-web/","source":"_posts/Enable-https-in-Spring-Boot.md","raw":"---\ntitle: 在SpringMVC中启用https协议\ndate: 2017-06-26 16:02:03\ncategories: SpringMvc\ntags: [https]\n---\n\n由于项目需求，笔者使用SpringMVC开发的后台必须使用https协议。经过一番折腾后，终于完成了这一需求。但是由于刚接触spirng，水平有限，从中走了许多弯路，本文记录了问题的解决方案，并对从中踩过坑进行反思。\n\n<!--more-->\n## 获取SSL证书\n获取SSL证书的方式有两种\n+ 通过keytool生成在（需要java环境），打开终端输入下面的命令\n```\nkeytool -genkey -alias tomcat  -storetype PKCS12 -keyalg RSA -keysize 2048  -keystore keystore.p12 -validity 3650\n\nEnter keystore password:\nRe-enter new password:\nWhat is your first and last name?\n[Unknown]:\nWhat is the name of your organizational unit?\n[Unknown]:\nWhat is the name of your organization?\n[Unknown]:\nWhat is the name of your City or Locality?\n[Unknown]:\nWhat is the name of your State or Province?\n[Unknown]:\nWhat is the two-letter country code for this unit?\n[Unknown]:\nIs CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown correct?\n[no]: yes\n```\n完成后，将会在系统目录下生成 keystore.p12文件，你也可以在指定目录下生成该文件，如果在``/home/administrator/下载/installpackage/key``路径下生成keystore.p12文件，可使用下面的指令\n```\nkeytool -genkey -alias tomcat -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore /home/administrator/下载/installpackage/key/keystore.p12 -validity 3650\n```\n此方法比较方便快捷，但是浏览器会提示不安全（如下图），比较适用于开发阶段。\n![](/images/选区_079.png)\n+ 另外一种是通过正规渠道购买。\n\n## 在SpringMVC中启用https协议\n首先，在配置文件中引入Spring Boot依赖。Spring Boot内嵌的tomcat服务器会在http服务的8080端口启动。在application.properties文件中通过一下配置可启用https协议：\n```\nserver.port=8443\nserver.ssl.key-store=classpath:keystore.p12 \t\t//把之前生成的证书放在src/main/resources目录下\nserver.ssl.key-store-password=changeit\nserver.ssl.key-password=changeit\n```\n按照以上配置，启动应用程序，即可访问[https://localhost:8443](https://localhost:8443) 。\n\n## 将http请求重定向至http\n如果你也想使你的应用程序支持http服务，可以在配置文件中增加一下代码\n```\n  @Bean\n  public EmbeddedServletContainerFactory servletContainer() {\n      TomcatEmbeddedServletContainerFactory tomcat = new TomcatEmbeddedServletContainerFactory() {\n      @Override\n      protected void postProcessContext(Context context) {\n        SecurityConstraint securityConstraint = new SecurityConstraint();\n        securityConstraint.setUserConstraint(\"CONFIDENTIAL\");\n        SecurityCollection collection = new SecurityCollection();\n        collection.addPattern(\"/*\");\n        securityConstraint.addCollection(collection);\n        context.addConstraint(securityConstraint);\n      }\n    };\n\n    tomcat.addAdditionalTomcatConnectors(initiateHttpConnector());\n    return tomcat;\n  }\n  private Connector initiateHttpConnector() {\n    Connector connector = new Connector(\"org.apache.coyote.http11.Http11NioProtocol\");\n    connector.setScheme(\"http\");\n    connector.setPort(8080);\n    connector.setSecure(false);\n    connector.setRedirectPort(8443);\n\n    return connector;\n  }\n```\n配置完成后，如果您访问[http://localhost8080](http://localhost8080) ,浏览器将会跳转至[https://localhost:8443/](https://localhost:8443/) 。\n\n## 所犯的错误\n+ 最开始google这个问题时，看到starkoverflow中有人说使用https服务的前提条件就是配置tomcat支持https。但是之前认为每次应用程序能在tomcat服务器上启动，是因为idea自带的tomcat。后来看了一篇[官方文档](https://spring.io/blog/2014/03/07/deploying-spring-boot-applications) ，才知道是spring boot集成了tomcat。\n+ 有时候过于追求完美，在linux、windows系统下分别配置tomcat多个版本，然后在idea中集成tomcat时windows系统一直出问题，也耽误了一些时间。也因此有了[这篇博客](https://chuhang123.github.io/2017/06/23/%E5%9C%A8IDEA%E4%B8%AD%E9%83%A8%E7%BD%B2tomcat/) \n\n## 总结\n解决这个问题花费了较长时间，主要原因是平时看文档看的太少，对很多东西都不了解。解决问题的过程中很多情况是不知道把代码放在那，不清楚是否适用于本项目。解决的问题中下载了多个实例，对sping的架构有了进一步的认识。\n\n > 参考文献：\n 1. [Enable HTTPS in Spring Boot](https://drissamri.be/blog/java/enable-https-in-spring-boot/) \n 2.  https://spring.io/blog/2014/03/07/deploying-spring-boot-applications\n 3. https://spring.io/guides/gs/securing-web/","slug":"Enable-https-in-Spring-Boot","published":1,"updated":"2017-06-26T13:25:57.353Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2emg0007npjx0f2qk1b2","content":"<p>由于项目需求，笔者使用SpringMVC开发的后台必须使用https协议。经过一番折腾后，终于完成了这一需求。但是由于刚接触spirng，水平有限，从中走了许多弯路，本文记录了问题的解决方案，并对从中踩过坑进行反思。</p>\n<a id=\"more\"></a>\n<h2 id=\"获取SSL证书\"><a href=\"#获取SSL证书\" class=\"headerlink\" title=\"获取SSL证书\"></a>获取SSL证书</h2><p>获取SSL证书的方式有两种</p>\n<ul>\n<li>通过keytool生成在（需要java环境），打开终端输入下面的命令<figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">keytool -genkey -<span class=\"keyword\">alias</span> tomcat  -storetype PKCS12 -keyalg RSA -keysize <span class=\"number\">2048</span>  -keystore keystore.p12 -validity <span class=\"number\">3650</span></div><div class=\"line\"></div><div class=\"line\">Enter keystore password:</div><div class=\"line\">Re-enter new password:</div><div class=\"line\">What <span class=\"keyword\">is</span> your first <span class=\"keyword\">and</span> last <span class=\"keyword\">name</span>?</div><div class=\"line\">[Unknown]:</div><div class=\"line\">What <span class=\"keyword\">is</span> the <span class=\"keyword\">name</span> <span class=\"keyword\">of</span> your organizational <span class=\"keyword\">unit</span>?</div><div class=\"line\">[Unknown]:</div><div class=\"line\">What <span class=\"keyword\">is</span> the <span class=\"keyword\">name</span> <span class=\"keyword\">of</span> your organization?</div><div class=\"line\">[Unknown]:</div><div class=\"line\">What <span class=\"keyword\">is</span> the <span class=\"keyword\">name</span> <span class=\"keyword\">of</span> your City <span class=\"keyword\">or</span> Locality?</div><div class=\"line\">[Unknown]:</div><div class=\"line\">What <span class=\"keyword\">is</span> the <span class=\"keyword\">name</span> <span class=\"keyword\">of</span> your State <span class=\"keyword\">or</span> Province?</div><div class=\"line\">[Unknown]:</div><div class=\"line\">What <span class=\"keyword\">is</span> the two-letter country code <span class=\"keyword\">for</span> this <span class=\"keyword\">unit</span>?</div><div class=\"line\">[Unknown]:</div><div class=\"line\"><span class=\"keyword\">Is</span> CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown correct?</div><div class=\"line\">[no]: yes</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>完成后，将会在系统目录下生成 keystore.p12文件，你也可以在指定目录下生成该文件，如果在<code>/home/administrator/下载/installpackage/key</code>路径下生成keystore.p12文件，可使用下面的指令<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">keytool -genkey -alias tomcat -storetype PKCS12 -keyalg RSA -keysize <span class=\"number\">2048</span> -keystore <span class=\"regexp\">/home/</span>administrator<span class=\"regexp\">/下载/i</span>nstallpackage<span class=\"regexp\">/key/</span>keystore.p12 -validity <span class=\"number\">3650</span></div></pre></td></tr></table></figure></p>\n<p>此方法比较方便快捷，但是浏览器会提示不安全（如下图），比较适用于开发阶段。<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/选区_079.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure></p>\n<ul>\n<li>另外一种是通过正规渠道购买。</li>\n</ul>\n<h2 id=\"在SpringMVC中启用https协议\"><a href=\"#在SpringMVC中启用https协议\" class=\"headerlink\" title=\"在SpringMVC中启用https协议\"></a>在SpringMVC中启用https协议</h2><p>首先，在配置文件中引入Spring Boot依赖。Spring Boot内嵌的tomcat服务器会在http服务的8080端口启动。在application.properties文件中通过一下配置可启用https协议：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">server.port=<span class=\"number\">8443</span></div><div class=\"line\">server<span class=\"selector-class\">.ssl</span><span class=\"selector-class\">.key-store</span>=classpath:keystore<span class=\"selector-class\">.p12</span> \t\t<span class=\"comment\">//把之前生成的证书放在src/main/resources目录下</span></div><div class=\"line\">server<span class=\"selector-class\">.ssl</span><span class=\"selector-class\">.key-store-password</span>=changeit</div><div class=\"line\">server<span class=\"selector-class\">.ssl</span><span class=\"selector-class\">.key-password</span>=changeit</div></pre></td></tr></table></figure></p>\n<p>按照以上配置，启动应用程序，即可访问<a href=\"https://localhost:8443\" target=\"_blank\" rel=\"external\">https://localhost:8443</a> 。</p>\n<h2 id=\"将http请求重定向至http\"><a href=\"#将http请求重定向至http\" class=\"headerlink\" title=\"将http请求重定向至http\"></a>将http请求重定向至http</h2><p>如果你也想使你的应用程序支持http服务，可以在配置文件中增加一下代码<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"keyword\">Bean</span></div><div class=\"line\">public EmbeddedServletContainerFactory servletContainer() &#123;</div><div class=\"line\">    TomcatEmbeddedServletContainerFactory tomcat = new TomcatEmbeddedServletContainerFactory() &#123;</div><div class=\"line\">    @Override</div><div class=\"line\">    protected void postProcessContext(<span class=\"built_in\">Context</span> <span class=\"built_in\">context</span>) &#123;</div><div class=\"line\">      SecurityConstraint securityConstraint = new SecurityConstraint()<span class=\"comment\">;</span></div><div class=\"line\">      securityConstraint.setUserConstraint(<span class=\"string\">\"CONFIDENTIAL\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">      SecurityCollection collection = new SecurityCollection()<span class=\"comment\">;</span></div><div class=\"line\">      collection.<span class=\"keyword\">addPattern(\"/*\");</span></div><div class=\"line\">      securityConstraint.<span class=\"keyword\">addCollection(collection);</span></div><div class=\"line\">      <span class=\"built_in\">context</span>.<span class=\"keyword\">addConstraint(securityConstraint);</span></div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;<span class=\"comment\">;</span></div><div class=\"line\"></div><div class=\"line\">  tomcat.<span class=\"keyword\">addAdditionalTomcatConnectors(initiateHttpConnector());</span></div><div class=\"line\">  return tomcat<span class=\"comment\">;</span></div><div class=\"line\">&#125;</div><div class=\"line\">private Connector initiateHttpConnector() &#123;</div><div class=\"line\">  Connector connector = new Connector(<span class=\"string\">\"org.apache.coyote.http11.Http11NioProtocol\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">  connector.setScheme(<span class=\"string\">\"http\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">  connector.setPort(<span class=\"number\">8080</span>)<span class=\"comment\">;</span></div><div class=\"line\">  connector.setSecure(false)<span class=\"comment\">;</span></div><div class=\"line\">  connector.setRedirectPort(<span class=\"number\">8443</span>)<span class=\"comment\">;</span></div><div class=\"line\"></div><div class=\"line\">  return connector<span class=\"comment\">;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>配置完成后，如果您访问<a href=\"http://localhost8080\" target=\"_blank\" rel=\"external\">http://localhost8080</a> ,浏览器将会跳转至<a href=\"https://localhost:8443/\" target=\"_blank\" rel=\"external\">https://localhost:8443/</a> 。</p>\n<h2 id=\"所犯的错误\"><a href=\"#所犯的错误\" class=\"headerlink\" title=\"所犯的错误\"></a>所犯的错误</h2><ul>\n<li>最开始google这个问题时，看到starkoverflow中有人说使用https服务的前提条件就是配置tomcat支持https。但是之前认为每次应用程序能在tomcat服务器上启动，是因为idea自带的tomcat。后来看了一篇<a href=\"https://spring.io/blog/2014/03/07/deploying-spring-boot-applications\" target=\"_blank\" rel=\"external\">官方文档</a> ，才知道是spring boot集成了tomcat。</li>\n<li>有时候过于追求完美，在linux、windows系统下分别配置tomcat多个版本，然后在idea中集成tomcat时windows系统一直出问题，也耽误了一些时间。也因此有了<a href=\"https://chuhang123.github.io/2017/06/23/%E5%9C%A8IDEA%E4%B8%AD%E9%83%A8%E7%BD%B2tomcat/\" target=\"_blank\" rel=\"external\">这篇博客</a> </li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>解决这个问题花费了较长时间，主要原因是平时看文档看的太少，对很多东西都不了解。解决问题的过程中很多情况是不知道把代码放在那，不清楚是否适用于本项目。解决的问题中下载了多个实例，对sping的架构有了进一步的认识。</p>\n<blockquote>\n<p>参考文献：</p>\n<ol>\n<li><a href=\"https://drissamri.be/blog/java/enable-https-in-spring-boot/\" target=\"_blank\" rel=\"external\">Enable HTTPS in Spring Boot</a> </li>\n<li><a href=\"https://spring.io/blog/2014/03/07/deploying-spring-boot-applications\" target=\"_blank\" rel=\"external\">https://spring.io/blog/2014/03/07/deploying-spring-boot-applications</a></li>\n<li><a href=\"https://spring.io/guides/gs/securing-web/\" target=\"_blank\" rel=\"external\">https://spring.io/guides/gs/securing-web/</a></li>\n</ol>\n</blockquote>\n","excerpt":"<p>由于项目需求，笔者使用SpringMVC开发的后台必须使用https协议。经过一番折腾后，终于完成了这一需求。但是由于刚接触spirng，水平有限，从中走了许多弯路，本文记录了问题的解决方案，并对从中踩过坑进行反思。</p>","more":"<h2 id=\"获取SSL证书\"><a href=\"#获取SSL证书\" class=\"headerlink\" title=\"获取SSL证书\"></a>获取SSL证书</h2><p>获取SSL证书的方式有两种</p>\n<ul>\n<li>通过keytool生成在（需要java环境），打开终端输入下面的命令<figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">keytool -genkey -<span class=\"keyword\">alias</span> tomcat  -storetype PKCS12 -keyalg RSA -keysize <span class=\"number\">2048</span>  -keystore keystore.p12 -validity <span class=\"number\">3650</span></div><div class=\"line\"></div><div class=\"line\">Enter keystore password:</div><div class=\"line\">Re-enter new password:</div><div class=\"line\">What <span class=\"keyword\">is</span> your first <span class=\"keyword\">and</span> last <span class=\"keyword\">name</span>?</div><div class=\"line\">[Unknown]:</div><div class=\"line\">What <span class=\"keyword\">is</span> the <span class=\"keyword\">name</span> <span class=\"keyword\">of</span> your organizational <span class=\"keyword\">unit</span>?</div><div class=\"line\">[Unknown]:</div><div class=\"line\">What <span class=\"keyword\">is</span> the <span class=\"keyword\">name</span> <span class=\"keyword\">of</span> your organization?</div><div class=\"line\">[Unknown]:</div><div class=\"line\">What <span class=\"keyword\">is</span> the <span class=\"keyword\">name</span> <span class=\"keyword\">of</span> your City <span class=\"keyword\">or</span> Locality?</div><div class=\"line\">[Unknown]:</div><div class=\"line\">What <span class=\"keyword\">is</span> the <span class=\"keyword\">name</span> <span class=\"keyword\">of</span> your State <span class=\"keyword\">or</span> Province?</div><div class=\"line\">[Unknown]:</div><div class=\"line\">What <span class=\"keyword\">is</span> the two-letter country code <span class=\"keyword\">for</span> this <span class=\"keyword\">unit</span>?</div><div class=\"line\">[Unknown]:</div><div class=\"line\"><span class=\"keyword\">Is</span> CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown correct?</div><div class=\"line\">[no]: yes</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>完成后，将会在系统目录下生成 keystore.p12文件，你也可以在指定目录下生成该文件，如果在<code>/home/administrator/下载/installpackage/key</code>路径下生成keystore.p12文件，可使用下面的指令<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">keytool -genkey -alias tomcat -storetype PKCS12 -keyalg RSA -keysize <span class=\"number\">2048</span> -keystore <span class=\"regexp\">/home/</span>administrator<span class=\"regexp\">/下载/i</span>nstallpackage<span class=\"regexp\">/key/</span>keystore.p12 -validity <span class=\"number\">3650</span></div></pre></td></tr></table></figure></p>\n<p>此方法比较方便快捷，但是浏览器会提示不安全（如下图），比较适用于开发阶段。<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/选区_079.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure></p>\n<ul>\n<li>另外一种是通过正规渠道购买。</li>\n</ul>\n<h2 id=\"在SpringMVC中启用https协议\"><a href=\"#在SpringMVC中启用https协议\" class=\"headerlink\" title=\"在SpringMVC中启用https协议\"></a>在SpringMVC中启用https协议</h2><p>首先，在配置文件中引入Spring Boot依赖。Spring Boot内嵌的tomcat服务器会在http服务的8080端口启动。在application.properties文件中通过一下配置可启用https协议：<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">server.port=<span class=\"number\">8443</span></div><div class=\"line\">server<span class=\"selector-class\">.ssl</span><span class=\"selector-class\">.key-store</span>=classpath:keystore<span class=\"selector-class\">.p12</span> \t\t<span class=\"comment\">//把之前生成的证书放在src/main/resources目录下</span></div><div class=\"line\">server<span class=\"selector-class\">.ssl</span><span class=\"selector-class\">.key-store-password</span>=changeit</div><div class=\"line\">server<span class=\"selector-class\">.ssl</span><span class=\"selector-class\">.key-password</span>=changeit</div></pre></td></tr></table></figure></p>\n<p>按照以上配置，启动应用程序，即可访问<a href=\"https://localhost:8443\">https://localhost:8443</a> 。</p>\n<h2 id=\"将http请求重定向至http\"><a href=\"#将http请求重定向至http\" class=\"headerlink\" title=\"将http请求重定向至http\"></a>将http请求重定向至http</h2><p>如果你也想使你的应用程序支持http服务，可以在配置文件中增加一下代码<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\">@<span class=\"keyword\">Bean</div><div class=\"line\"></span>public EmbeddedServletContainerFactory servletContainer() &#123;</div><div class=\"line\">    TomcatEmbeddedServletContainerFactory tomcat = new TomcatEmbeddedServletContainerFactory() &#123;</div><div class=\"line\">    @Override</div><div class=\"line\">    protected void postProcessContext(<span class=\"built_in\">Context</span> <span class=\"built_in\">context</span>) &#123;</div><div class=\"line\">      SecurityConstraint securityConstraint = new SecurityConstraint()<span class=\"comment\">;</span></div><div class=\"line\">      securityConstraint.setUserConstraint(<span class=\"string\">\"CONFIDENTIAL\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">      SecurityCollection collection = new SecurityCollection()<span class=\"comment\">;</span></div><div class=\"line\">      collection.<span class=\"keyword\">addPattern(\"/*\");</div><div class=\"line\"></span>      securityConstraint.<span class=\"keyword\">addCollection(collection);</div><div class=\"line\"></span>      <span class=\"built_in\">context</span>.<span class=\"keyword\">addConstraint(securityConstraint);</div><div class=\"line\"></span>    &#125;</div><div class=\"line\">  &#125;<span class=\"comment\">;</span></div><div class=\"line\"></div><div class=\"line\">  tomcat.<span class=\"keyword\">addAdditionalTomcatConnectors(initiateHttpConnector());</div><div class=\"line\"></span>  return tomcat<span class=\"comment\">;</span></div><div class=\"line\">&#125;</div><div class=\"line\">private Connector initiateHttpConnector() &#123;</div><div class=\"line\">  Connector connector = new Connector(<span class=\"string\">\"org.apache.coyote.http11.Http11NioProtocol\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">  connector.setScheme(<span class=\"string\">\"http\"</span>)<span class=\"comment\">;</span></div><div class=\"line\">  connector.setPort(<span class=\"number\">8080</span>)<span class=\"comment\">;</span></div><div class=\"line\">  connector.setSecure(false)<span class=\"comment\">;</span></div><div class=\"line\">  connector.setRedirectPort(<span class=\"number\">8443</span>)<span class=\"comment\">;</span></div><div class=\"line\"></div><div class=\"line\">  return connector<span class=\"comment\">;</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>配置完成后，如果您访问<a href=\"http://localhost8080\">http://localhost8080</a> ,浏览器将会跳转至<a href=\"https://localhost:8443/\">https://localhost:8443/</a> 。</p>\n<h2 id=\"所犯的错误\"><a href=\"#所犯的错误\" class=\"headerlink\" title=\"所犯的错误\"></a>所犯的错误</h2><ul>\n<li>最开始google这个问题时，看到starkoverflow中有人说使用https服务的前提条件就是配置tomcat支持https。但是之前认为每次应用程序能在tomcat服务器上启动，是因为idea自带的tomcat。后来看了一篇<a href=\"https://spring.io/blog/2014/03/07/deploying-spring-boot-applications\">官方文档</a> ，才知道是spring boot集成了tomcat。</li>\n<li>有时候过于追求完美，在linux、windows系统下分别配置tomcat多个版本，然后在idea中集成tomcat时windows系统一直出问题，也耽误了一些时间。也因此有了<a href=\"https://chuhang123.github.io/2017/06/23/%E5%9C%A8IDEA%E4%B8%AD%E9%83%A8%E7%BD%B2tomcat/\">这篇博客</a> </li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>解决这个问题花费了较长时间，主要原因是平时看文档看的太少，对很多东西都不了解。解决问题的过程中很多情况是不知道把代码放在那，不清楚是否适用于本项目。解决的问题中下载了多个实例，对sping的架构有了进一步的认识。</p>\n<blockquote>\n<p>参考文献：</p>\n<ol>\n<li><a href=\"https://drissamri.be/blog/java/enable-https-in-spring-boot/\">Enable HTTPS in Spring Boot</a> </li>\n<li><a href=\"https://spring.io/blog/2014/03/07/deploying-spring-boot-applications\">https://spring.io/blog/2014/03/07/deploying-spring-boot-applications</a></li>\n<li><a href=\"https://spring.io/guides/gs/securing-web/\">https://spring.io/guides/gs/securing-web/</a></li>\n</ol>\n</blockquote>"},{"title":"IDEA性能优化篇","date":"2017-05-27T06:33:41.000Z","_content":"\n从php转到java后，IDE改用idea了，但是使用idea运行起来比较慢，在网上搜集了一下资料优化idea，并记录如下。\n\n<!--more-->\n\n## 调整IDEA的启动JVM参数\n打开idea，help->Edit Custom VM options,idea会自动复制bin目录下的idea64.exe.vmoptions文件（32位的idea.exe.vmoptions），我的运行内存是8g的，作如下调整\n```\n-Xms1g\t\t//JVM初始分配的堆内存\n-Xmx4g\t\t//JVM最大允许分配的堆内存，按需分配\n-XX:ReservedCodeCacheSize=1024m\n-XX:PermSize=372M\t\t//JVM初始分配的非堆内存\n-XX:MaxPermSize=744M\t\t//JVM最大允许分配的非堆内存，按需分配\n-XX:+UseConcMarkSweepGC\n-XX:SoftRefLRUPolicyMSPerMB=50\n```\n改变jvm参数后，如果想了解内存的分布状况，勾选一下信息，可在右下角显示内存分配\n![](/images/选区_022.png)\n官方文档给出了推荐的修改方式，参考文献2讲述了jvm内存管理机制，及参数的详细说明，参考文献3从多个方面讲述了如何分配堆内存能够最有效的提高idea的效率。\n\n参考文献：\n1.[https://intellij-support.jetbrains.com/hc/en-us/articles/206544869-Configuring-JVM-options-and-platform-properties](https://intellij-support.jetbrains.com/hc/en-us/articles/206544869-Configuring-JVM-options-and-platform-properties) \n2.[http://www.cnblogs.com/mingforyou/archive/2012/03/03/2378143.html](http://www.cnblogs.com/mingforyou/archive/2012/03/03/2378143.html) \n3.[http://tomaszdziurko.com/2015/11/1-and-the-only-one-to-customize-intellij-idea-memory-settings/](http://tomaszdziurko.com/2015/11/1-and-the-only-one-to-customize-intellij-idea-memory-settings/) \n\n## 自动编译\n全部勾选红色方框中的部分\n![](/images/选区_021.png)\n\n> 在Edit Configuration中，查看Before launch中是否有太多设置，耽误运行时间。\n\n\n## jrebel热部署\n（待破解）\n\n\n参考文献：\nhttp://www.jianshu.com/p/d177316890e3","source":"_posts/IDEA性能优化篇.md","raw":"---\ntitle: IDEA性能优化篇\ndate: 2017-05-27 14:33:41\ntags:\n---\n\n从php转到java后，IDE改用idea了，但是使用idea运行起来比较慢，在网上搜集了一下资料优化idea，并记录如下。\n\n<!--more-->\n\n## 调整IDEA的启动JVM参数\n打开idea，help->Edit Custom VM options,idea会自动复制bin目录下的idea64.exe.vmoptions文件（32位的idea.exe.vmoptions），我的运行内存是8g的，作如下调整\n```\n-Xms1g\t\t//JVM初始分配的堆内存\n-Xmx4g\t\t//JVM最大允许分配的堆内存，按需分配\n-XX:ReservedCodeCacheSize=1024m\n-XX:PermSize=372M\t\t//JVM初始分配的非堆内存\n-XX:MaxPermSize=744M\t\t//JVM最大允许分配的非堆内存，按需分配\n-XX:+UseConcMarkSweepGC\n-XX:SoftRefLRUPolicyMSPerMB=50\n```\n改变jvm参数后，如果想了解内存的分布状况，勾选一下信息，可在右下角显示内存分配\n![](/images/选区_022.png)\n官方文档给出了推荐的修改方式，参考文献2讲述了jvm内存管理机制，及参数的详细说明，参考文献3从多个方面讲述了如何分配堆内存能够最有效的提高idea的效率。\n\n参考文献：\n1.[https://intellij-support.jetbrains.com/hc/en-us/articles/206544869-Configuring-JVM-options-and-platform-properties](https://intellij-support.jetbrains.com/hc/en-us/articles/206544869-Configuring-JVM-options-and-platform-properties) \n2.[http://www.cnblogs.com/mingforyou/archive/2012/03/03/2378143.html](http://www.cnblogs.com/mingforyou/archive/2012/03/03/2378143.html) \n3.[http://tomaszdziurko.com/2015/11/1-and-the-only-one-to-customize-intellij-idea-memory-settings/](http://tomaszdziurko.com/2015/11/1-and-the-only-one-to-customize-intellij-idea-memory-settings/) \n\n## 自动编译\n全部勾选红色方框中的部分\n![](/images/选区_021.png)\n\n> 在Edit Configuration中，查看Before launch中是否有太多设置，耽误运行时间。\n\n\n## jrebel热部署\n（待破解）\n\n\n参考文献：\nhttp://www.jianshu.com/p/d177316890e3","slug":"IDEA性能优化篇","published":1,"updated":"2017-05-31T14:26:23.325Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2eml000anpjx2ukafnkx","content":"<p>从php转到java后，IDE改用idea了，但是使用idea运行起来比较慢，在网上搜集了一下资料优化idea，并记录如下。</p>\n<a id=\"more\"></a>\n<h2 id=\"调整IDEA的启动JVM参数\"><a href=\"#调整IDEA的启动JVM参数\" class=\"headerlink\" title=\"调整IDEA的启动JVM参数\"></a>调整IDEA的启动JVM参数</h2><p>打开idea，help-&gt;Edit Custom VM options,idea会自动复制bin目录下的idea64.exe.vmoptions文件（32位的idea.exe.vmoptions），我的运行内存是8g的，作如下调整<br><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">-<span class=\"ruby\">Xms1g\t\t/<span class=\"regexp\">/JVM初始分配的堆内存</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">Xmx4g\t\t/</span><span class=\"regexp\">/JVM最大允许分配的堆内存，按需分配</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">XX:ReservedCodeCacheSize=1024m</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">XX:PermSize=372M\t\t/</span><span class=\"regexp\">/JVM初始分配的非堆内存</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">XX:MaxPermSize=744M\t\t/</span><span class=\"regexp\">/JVM最大允许分配的非堆内存，按需分配</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">XX:+UseConcMarkSweepGC</span></span></div><div class=\"line\">-<span class=\"ruby\"><span class=\"regexp\">XX:SoftRefLRUPolicyMSPerMB=50</span></span></div></pre></td></tr></table></figure></p>\n<p>改变jvm参数后，如果想了解内存的分布状况，勾选一下信息，可在右下角显示内存分配<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/选区_022.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br>官方文档给出了推荐的修改方式，参考文献2讲述了jvm内存管理机制，及参数的详细说明，参考文献3从多个方面讲述了如何分配堆内存能够最有效的提高idea的效率。</p>\n<p>参考文献：<br>1.<a href=\"https://intellij-support.jetbrains.com/hc/en-us/articles/206544869-Configuring-JVM-options-and-platform-properties\" target=\"_blank\" rel=\"external\">https://intellij-support.jetbrains.com/hc/en-us/articles/206544869-Configuring-JVM-options-and-platform-properties</a><br>2.<a href=\"http://www.cnblogs.com/mingforyou/archive/2012/03/03/2378143.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/mingforyou/archive/2012/03/03/2378143.html</a><br>3.<a href=\"http://tomaszdziurko.com/2015/11/1-and-the-only-one-to-customize-intellij-idea-memory-settings/\" target=\"_blank\" rel=\"external\">http://tomaszdziurko.com/2015/11/1-and-the-only-one-to-customize-intellij-idea-memory-settings/</a> </p>\n<h2 id=\"自动编译\"><a href=\"#自动编译\" class=\"headerlink\" title=\"自动编译\"></a>自动编译</h2><p>全部勾选红色方框中的部分<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/选区_021.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure></p>\n<blockquote>\n<p>在Edit Configuration中，查看Before launch中是否有太多设置，耽误运行时间。</p>\n</blockquote>\n<h2 id=\"jrebel热部署\"><a href=\"#jrebel热部署\" class=\"headerlink\" title=\"jrebel热部署\"></a>jrebel热部署</h2><p>（待破解）</p>\n<p>参考文献：<br><a href=\"http://www.jianshu.com/p/d177316890e3\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/d177316890e3</a></p>\n","excerpt":"<p>从php转到java后，IDE改用idea了，但是使用idea运行起来比较慢，在网上搜集了一下资料优化idea，并记录如下。</p>","more":"<h2 id=\"调整IDEA的启动JVM参数\"><a href=\"#调整IDEA的启动JVM参数\" class=\"headerlink\" title=\"调整IDEA的启动JVM参数\"></a>调整IDEA的启动JVM参数</h2><p>打开idea，help-&gt;Edit Custom VM options,idea会自动复制bin目录下的idea64.exe.vmoptions文件（32位的idea.exe.vmoptions），我的运行内存是8g的，作如下调整<br><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">-<span class=\"ruby\">Xms1g\t\t/<span class=\"regexp\">/JVM初始分配的堆内存</div><div class=\"line\"></span></span>-<span class=\"ruby\"><span class=\"regexp\">Xmx4g\t\t/</span><span class=\"regexp\">/JVM最大允许分配的堆内存，按需分配</div><div class=\"line\"></span></span>-<span class=\"ruby\"><span class=\"regexp\">XX:ReservedCodeCacheSize=1024m</div><div class=\"line\"></span></span>-<span class=\"ruby\"><span class=\"regexp\">XX:PermSize=372M\t\t/</span><span class=\"regexp\">/JVM初始分配的非堆内存</div><div class=\"line\"></span></span>-<span class=\"ruby\"><span class=\"regexp\">XX:MaxPermSize=744M\t\t/</span><span class=\"regexp\">/JVM最大允许分配的非堆内存，按需分配</div><div class=\"line\"></span></span>-<span class=\"ruby\"><span class=\"regexp\">XX:+UseConcMarkSweepGC</div><div class=\"line\"></span></span>-<span class=\"ruby\"><span class=\"regexp\">XX:SoftRefLRUPolicyMSPerMB=50</span></span></div></pre></td></tr></table></figure></p>\n<p>改变jvm参数后，如果想了解内存的分布状况，勾选一下信息，可在右下角显示内存分配<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/选区_022.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br>官方文档给出了推荐的修改方式，参考文献2讲述了jvm内存管理机制，及参数的详细说明，参考文献3从多个方面讲述了如何分配堆内存能够最有效的提高idea的效率。</p>\n<p>参考文献：<br>1.<a href=\"https://intellij-support.jetbrains.com/hc/en-us/articles/206544869-Configuring-JVM-options-and-platform-properties\">https://intellij-support.jetbrains.com/hc/en-us/articles/206544869-Configuring-JVM-options-and-platform-properties</a><br>2.<a href=\"http://www.cnblogs.com/mingforyou/archive/2012/03/03/2378143.html\">http://www.cnblogs.com/mingforyou/archive/2012/03/03/2378143.html</a><br>3.<a href=\"http://tomaszdziurko.com/2015/11/1-and-the-only-one-to-customize-intellij-idea-memory-settings/\">http://tomaszdziurko.com/2015/11/1-and-the-only-one-to-customize-intellij-idea-memory-settings/</a> </p>\n<h2 id=\"自动编译\"><a href=\"#自动编译\" class=\"headerlink\" title=\"自动编译\"></a>自动编译</h2><p>全部勾选红色方框中的部分<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/选区_021.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure></p>\n<blockquote>\n<p>在Edit Configuration中，查看Before launch中是否有太多设置，耽误运行时间。</p>\n</blockquote>\n<h2 id=\"jrebel热部署\"><a href=\"#jrebel热部署\" class=\"headerlink\" title=\"jrebel热部署\"></a>jrebel热部署</h2><p>（待破解）</p>\n<p>参考文献：<br><a href=\"http://www.jianshu.com/p/d177316890e3\">http://www.jianshu.com/p/d177316890e3</a></p>"},{"title":"JS异步编程解决方法实例","date":"2017-07-05T15:04:07.000Z","_content":"在js中，如果函数B需要A的返回值，由于js的异步执行，我们会得到一个undefined，本文通过代码实例记录了js异步编程的4中解决方案。\n<!--more-->\n## 问题实例\n函数A比较耗时，但是函数B需要函数A的返回结果，如果按我们正常的写法，应该是这样的\n```\nvar self = this;\nfunction A (arg) {\n\tsetTimeout(function () {\n　　　　　　\tself.numA = 3 * arg;\n\t \tconsole.log(\"A的值是\" + self.numA);\n　　　　}, 500);\n}\nfunction B () {\n\tvar numB = self.numA * 4;\n\tconsole.log(\"B的值是\" + numB);\n}\nA(2);\nB(3);\n```\n但是执行结果确实这样的\n```\nB的值是NaN\nA的值是6\n```\n如果我们使用嵌套的方法，代码是横向扩展，很不美观，且不易阅读。有以下几种解决方案。\n## 方案一：回调函数\n代码如下：\n```\nvar self = this;\nfunction A (arg, callback) {\n\tsetTimeout(function () {\n　　　　　　\tself.numA = 3 * arg;\n\t \tconsole.log(\"A的值是\" + self.numA);\n\t \tcallback();\n　　　　}, 1000);\n}\nfunction B () {\n\tvar numB = self.numA * 4;\n\tconsole.log(\"B的值是\" + numB);\n}\nA(2, B);\n```\n输出结果如下：\n```\nA的值是6\nB的值是24\n```\n是我们的期望结果\n> 如果你想在函数A执行完setTimeout之后再执行函数B，那么通过回调函数是无法事项的。可以通过下面的方法实现。\n\n## 方案二：Promises对象\n还是按照上面的顺序，函数A需要在B前面执行。Promises对象的大致意思是没执行一个异步任务就返回一个promise对象，对象有then方法，允许有回调函数，可以这样写\n```\nvar self = this;\nfunction A() {\n    return new Promise(function (resolve, reject) {\n      \tsetTimeout(function () {\n　　　　　  self.numA = 3;\n\t   console.log(\"A的值是\" + self.numA);\n\t   resolve('Async Hello world');\n　　　　}, 500);\n    });\n}\nA().then(function (value) {\n  \tvar numB = self.numA * 4;\n\tconsole.log(\"B的值是\" + numB);\n        console.log(value);    // => 'Async Hello world'\n}).catch(function (error) {\n    console.log(error);\n});\n```\n\nPromise 的写法只是回调函数的改进，使用then方法以后，异步任务的两段执行看得更清楚了，除此以外，并无新意。在不同的js框架中使用会有所差别。\n## 其他\n除了以上两种方法，我们还可以通过事件的监听、发布/订阅等方法实现异步编程，但是不同的框架实现方法可能会有所差别。但是，作为一个初学者，我们应该抱着学习的心态使用回调函数，有助于理解js。\n\n 参考文献：\n1. [Javascript异步编程的4种方法](http://www.ruanyifeng.com/blog/2012/12/asynchronous%EF%BC%BFjavascript.html) \n2. [JavaScript Promise迷你书（中文版）](http://liubin.org/promises-book/) ","source":"_posts/Solve-js-asynchronously.md","raw":"---\ntitle:  JS异步编程解决方法实例\ndate: 2017-07-05 23:04:07\ntags: asynchronously\ncategories: js\n---\n在js中，如果函数B需要A的返回值，由于js的异步执行，我们会得到一个undefined，本文通过代码实例记录了js异步编程的4中解决方案。\n<!--more-->\n## 问题实例\n函数A比较耗时，但是函数B需要函数A的返回结果，如果按我们正常的写法，应该是这样的\n```\nvar self = this;\nfunction A (arg) {\n\tsetTimeout(function () {\n　　　　　　\tself.numA = 3 * arg;\n\t \tconsole.log(\"A的值是\" + self.numA);\n　　　　}, 500);\n}\nfunction B () {\n\tvar numB = self.numA * 4;\n\tconsole.log(\"B的值是\" + numB);\n}\nA(2);\nB(3);\n```\n但是执行结果确实这样的\n```\nB的值是NaN\nA的值是6\n```\n如果我们使用嵌套的方法，代码是横向扩展，很不美观，且不易阅读。有以下几种解决方案。\n## 方案一：回调函数\n代码如下：\n```\nvar self = this;\nfunction A (arg, callback) {\n\tsetTimeout(function () {\n　　　　　　\tself.numA = 3 * arg;\n\t \tconsole.log(\"A的值是\" + self.numA);\n\t \tcallback();\n　　　　}, 1000);\n}\nfunction B () {\n\tvar numB = self.numA * 4;\n\tconsole.log(\"B的值是\" + numB);\n}\nA(2, B);\n```\n输出结果如下：\n```\nA的值是6\nB的值是24\n```\n是我们的期望结果\n> 如果你想在函数A执行完setTimeout之后再执行函数B，那么通过回调函数是无法事项的。可以通过下面的方法实现。\n\n## 方案二：Promises对象\n还是按照上面的顺序，函数A需要在B前面执行。Promises对象的大致意思是没执行一个异步任务就返回一个promise对象，对象有then方法，允许有回调函数，可以这样写\n```\nvar self = this;\nfunction A() {\n    return new Promise(function (resolve, reject) {\n      \tsetTimeout(function () {\n　　　　　  self.numA = 3;\n\t   console.log(\"A的值是\" + self.numA);\n\t   resolve('Async Hello world');\n　　　　}, 500);\n    });\n}\nA().then(function (value) {\n  \tvar numB = self.numA * 4;\n\tconsole.log(\"B的值是\" + numB);\n        console.log(value);    // => 'Async Hello world'\n}).catch(function (error) {\n    console.log(error);\n});\n```\n\nPromise 的写法只是回调函数的改进，使用then方法以后，异步任务的两段执行看得更清楚了，除此以外，并无新意。在不同的js框架中使用会有所差别。\n## 其他\n除了以上两种方法，我们还可以通过事件的监听、发布/订阅等方法实现异步编程，但是不同的框架实现方法可能会有所差别。但是，作为一个初学者，我们应该抱着学习的心态使用回调函数，有助于理解js。\n\n 参考文献：\n1. [Javascript异步编程的4种方法](http://www.ruanyifeng.com/blog/2012/12/asynchronous%EF%BC%BFjavascript.html) \n2. [JavaScript Promise迷你书（中文版）](http://liubin.org/promises-book/) ","slug":"Solve-js-asynchronously","published":1,"updated":"2017-07-14T08:53:33.524Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2emp000cnpjxaqmztqny","content":"<p>在js中，如果函数B需要A的返回值，由于js的异步执行，我们会得到一个undefined，本文通过代码实例记录了js异步编程的4中解决方案。<br><a id=\"more\"></a></p>\n<h2 id=\"问题实例\"><a href=\"#问题实例\" class=\"headerlink\" title=\"问题实例\"></a>问题实例</h2><p>函数A比较耗时，但是函数B需要函数A的返回结果，如果按我们正常的写法，应该是这样的<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> <span class=\"keyword\">self</span> = this;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">A</span> <span class=\"params\">(arg)</span> </span>&#123;</div><div class=\"line\">\tsetTimeout(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">　　　　　　\t<span class=\"keyword\">self</span>.numA = <span class=\"number\">3</span> * arg;</div><div class=\"line\">\t \tconsole.log(<span class=\"string\">\"A的值是\"</span> + <span class=\"keyword\">self</span>.numA);</div><div class=\"line\">　　　　&#125;, <span class=\"number\">500</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">B</span> <span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> numB = <span class=\"keyword\">self</span>.numA * <span class=\"number\">4</span>;</div><div class=\"line\">\tconsole.log(<span class=\"string\">\"B的值是\"</span> + numB);</div><div class=\"line\">&#125;</div><div class=\"line\">A(<span class=\"number\">2</span>);</div><div class=\"line\">B(<span class=\"number\">3</span>);</div></pre></td></tr></table></figure></p>\n<p>但是执行结果确实这样的<br><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">B的值是NaN</span></div><div class=\"line\">A的值是<span class=\"number\">6</span></div></pre></td></tr></table></figure></p>\n<p>如果我们使用嵌套的方法，代码是横向扩展，很不美观，且不易阅读。有以下几种解决方案。</p>\n<h2 id=\"方案一：回调函数\"><a href=\"#方案一：回调函数\" class=\"headerlink\" title=\"方案一：回调函数\"></a>方案一：回调函数</h2><p>代码如下：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> <span class=\"keyword\">self</span> = this;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">A</span> <span class=\"params\">(arg, callback)</span> </span>&#123;</div><div class=\"line\">\tsetTimeout(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">　　　　　　\t<span class=\"keyword\">self</span>.numA = <span class=\"number\">3</span> * arg;</div><div class=\"line\">\t \tconsole.log(<span class=\"string\">\"A的值是\"</span> + <span class=\"keyword\">self</span>.numA);</div><div class=\"line\">\t \tcallback();</div><div class=\"line\">　　　　&#125;, <span class=\"number\">1000</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">B</span> <span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> numB = <span class=\"keyword\">self</span>.numA * <span class=\"number\">4</span>;</div><div class=\"line\">\tconsole.log(<span class=\"string\">\"B的值是\"</span> + numB);</div><div class=\"line\">&#125;</div><div class=\"line\">A(<span class=\"number\">2</span>, B);</div></pre></td></tr></table></figure></p>\n<p>输出结果如下：<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">A的值是<span class=\"number\">6</span></div><div class=\"line\">B的值是<span class=\"number\">24</span></div></pre></td></tr></table></figure></p>\n<p>是我们的期望结果</p>\n<blockquote>\n<p>如果你想在函数A执行完setTimeout之后再执行函数B，那么通过回调函数是无法事项的。可以通过下面的方法实现。</p>\n</blockquote>\n<h2 id=\"方案二：Promises对象\"><a href=\"#方案二：Promises对象\" class=\"headerlink\" title=\"方案二：Promises对象\"></a>方案二：Promises对象</h2><p>还是按照上面的顺序，函数A需要在B前面执行。Promises对象的大致意思是没执行一个异步任务就返回一个promise对象，对象有then方法，允许有回调函数，可以这样写<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">A</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">resolve, reject</span>) </span>&#123;</div><div class=\"line\">      \tsetTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">　　　　　  self.numA = <span class=\"number\">3</span>;</div><div class=\"line\">\t   <span class=\"built_in\">console</span>.log(<span class=\"string\">\"A的值是\"</span> + self.numA);</div><div class=\"line\">\t   resolve(<span class=\"string\">'Async Hello world'</span>);</div><div class=\"line\">　　　　&#125;, <span class=\"number\">500</span>);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div><div class=\"line\">A().then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</div><div class=\"line\">  \t<span class=\"keyword\">var</span> numB = self.numA * <span class=\"number\">4</span>;</div><div class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">\"B的值是\"</span> + numB);</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(value);    <span class=\"comment\">// =&gt; 'Async Hello world'</span></div><div class=\"line\">&#125;).catch(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(error);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>Promise 的写法只是回调函数的改进，使用then方法以后，异步任务的两段执行看得更清楚了，除此以外，并无新意。在不同的js框架中使用会有所差别。</p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>除了以上两种方法，我们还可以通过事件的监听、发布/订阅等方法实现异步编程，但是不同的框架实现方法可能会有所差别。但是，作为一个初学者，我们应该抱着学习的心态使用回调函数，有助于理解js。</p>\n<p> 参考文献：</p>\n<ol>\n<li><a href=\"http://www.ruanyifeng.com/blog/2012/12/asynchronous%EF%BC%BFjavascript.html\" target=\"_blank\" rel=\"external\">Javascript异步编程的4种方法</a> </li>\n<li><a href=\"http://liubin.org/promises-book/\" target=\"_blank\" rel=\"external\">JavaScript Promise迷你书（中文版）</a> </li>\n</ol>\n","excerpt":"<p>在js中，如果函数B需要A的返回值，由于js的异步执行，我们会得到一个undefined，本文通过代码实例记录了js异步编程的4中解决方案。<br>","more":"</p>\n<h2 id=\"问题实例\"><a href=\"#问题实例\" class=\"headerlink\" title=\"问题实例\"></a>问题实例</h2><p>函数A比较耗时，但是函数B需要函数A的返回结果，如果按我们正常的写法，应该是这样的<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> <span class=\"keyword\">self</span> = this;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">A</span> <span class=\"params\">(arg)</span> </span>&#123;</div><div class=\"line\">\tsetTimeout(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">　　　　　　\t<span class=\"keyword\">self</span>.numA = <span class=\"number\">3</span> * arg;</div><div class=\"line\">\t \tconsole.log(<span class=\"string\">\"A的值是\"</span> + <span class=\"keyword\">self</span>.numA);</div><div class=\"line\">　　　　&#125;, <span class=\"number\">500</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">B</span> <span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> numB = <span class=\"keyword\">self</span>.numA * <span class=\"number\">4</span>;</div><div class=\"line\">\tconsole.log(<span class=\"string\">\"B的值是\"</span> + numB);</div><div class=\"line\">&#125;</div><div class=\"line\">A(<span class=\"number\">2</span>);</div><div class=\"line\">B(<span class=\"number\">3</span>);</div></pre></td></tr></table></figure></p>\n<p>但是执行结果确实这样的<br><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">B的值是NaN</div><div class=\"line\"></span>A的值是<span class=\"number\">6</span></div></pre></td></tr></table></figure></p>\n<p>如果我们使用嵌套的方法，代码是横向扩展，很不美观，且不易阅读。有以下几种解决方案。</p>\n<h2 id=\"方案一：回调函数\"><a href=\"#方案一：回调函数\" class=\"headerlink\" title=\"方案一：回调函数\"></a>方案一：回调函数</h2><p>代码如下：<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> <span class=\"keyword\">self</span> = this;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">A</span> <span class=\"params\">(arg, callback)</span> </span>&#123;</div><div class=\"line\">\tsetTimeout(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">　　　　　　\t<span class=\"keyword\">self</span>.numA = <span class=\"number\">3</span> * arg;</div><div class=\"line\">\t \tconsole.log(<span class=\"string\">\"A的值是\"</span> + <span class=\"keyword\">self</span>.numA);</div><div class=\"line\">\t \tcallback();</div><div class=\"line\">　　　　&#125;, <span class=\"number\">1000</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">B</span> <span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">var</span> numB = <span class=\"keyword\">self</span>.numA * <span class=\"number\">4</span>;</div><div class=\"line\">\tconsole.log(<span class=\"string\">\"B的值是\"</span> + numB);</div><div class=\"line\">&#125;</div><div class=\"line\">A(<span class=\"number\">2</span>, B);</div></pre></td></tr></table></figure></p>\n<p>输出结果如下：<br><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">A的值是<span class=\"number\">6</span></div><div class=\"line\">B的值是<span class=\"number\">24</span></div></pre></td></tr></table></figure></p>\n<p>是我们的期望结果</p>\n<blockquote>\n<p>如果你想在函数A执行完setTimeout之后再执行函数B，那么通过回调函数是无法事项的。可以通过下面的方法实现。</p>\n</blockquote>\n<h2 id=\"方案二：Promises对象\"><a href=\"#方案二：Promises对象\" class=\"headerlink\" title=\"方案二：Promises对象\"></a>方案二：Promises对象</h2><p>还是按照上面的顺序，函数A需要在B前面执行。Promises对象的大致意思是没执行一个异步任务就返回一个promise对象，对象有then方法，允许有回调函数，可以这样写<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> self = <span class=\"keyword\">this</span>;</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">A</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">resolve, reject</span>) </span>&#123;</div><div class=\"line\">      \tsetTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">　　　　　  self.numA = <span class=\"number\">3</span>;</div><div class=\"line\">\t   <span class=\"built_in\">console</span>.log(<span class=\"string\">\"A的值是\"</span> + self.numA);</div><div class=\"line\">\t   resolve(<span class=\"string\">'Async Hello world'</span>);</div><div class=\"line\">　　　　&#125;, <span class=\"number\">500</span>);</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div><div class=\"line\">A().then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">value</span>) </span>&#123;</div><div class=\"line\">  \t<span class=\"keyword\">var</span> numB = self.numA * <span class=\"number\">4</span>;</div><div class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">\"B的值是\"</span> + numB);</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(value);    <span class=\"comment\">// =&gt; 'Async Hello world'</span></div><div class=\"line\">&#125;).catch(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">error</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(error);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>Promise 的写法只是回调函数的改进，使用then方法以后，异步任务的两段执行看得更清楚了，除此以外，并无新意。在不同的js框架中使用会有所差别。</p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>除了以上两种方法，我们还可以通过事件的监听、发布/订阅等方法实现异步编程，但是不同的框架实现方法可能会有所差别。但是，作为一个初学者，我们应该抱着学习的心态使用回调函数，有助于理解js。</p>\n<p> 参考文献：</p>\n<ol>\n<li><a href=\"http://www.ruanyifeng.com/blog/2012/12/asynchronous%EF%BC%BFjavascript.html\">Javascript异步编程的4种方法</a> </li>\n<li><a href=\"http://liubin.org/promises-book/\">JavaScript Promise迷你书（中文版）</a> </li>\n</ol>"},{"title":"Spring-Idea-Ubuntu环境搭建","date":"2017-06-16T01:51:34.000Z","_content":"近几天学习springMVC，但是发现一直比较卡，就尝试在ubuntu系统下搭建springMVC环境，看看效果。首先搭建java环境，安装jdk，下载idea，安装xampp，打开xampp的mysql控制台，创建数据库，进本的环境就起来了。\n\n<!-- more-->\n## 增加内存、swaf空间\n碰到的第一个问题是开始安装ubuntu时分配的内存有点小了，想增加磁盘空间，并提高ubuntu系统的性能。\n+ 增加ubuntu磁盘空间，请参考[这里](https://help.ubuntu.com/community/ResizeandDuplicateWubiDisk) ，\n+ 增加swaf空间,不了解swaf的，请戳[这里](http://baike.baidu.com/item/Swap/2666174) ，执行下面的9条语句，增加2G的swaf空间。\n```\nsudo su\nswapoff -a\ncd /host/ubuntu/disks/\nmv swap.disk swap.disk.bak\ndd if=/dev/zero of=swap.disk bs=1024 count=2097152\nmkswap swap.disk\nswapon -a\nfree -m\nrm swap.disk.bak\n```\n> 笔者使用的wubi装的windows、ubuntu双系统，故如果相对ubuntu系统进行改动的话，请参考[官方文档](https://wiki.ubuntu.com/WubiGuide#How_do_I_resize_the_virtual_disks.3F) ，一定是最节约时间的方法。\n\n## 数据库\n启动xampp``sudo /opt/lampp/lampp start``\n启动mysql``sudo /opt/lampp/lampp startmysql``\n打开sql控制台``/opt/lampp/bin/mysql -u root``\n显示数据库``show databases;``\n删除数据库``drop database  name;``\n\n## 配置环境变量\n+ 用户目录下的 .bashrc 文件``gedit ~/.bashrc ``该文件编辑保存后，可立即在新打开的终端窗口内生效。该方式添加的变量只能当前用户使用。\n+ 系统目录下的 profile 文件``sudo gedit /etc/profile``\n+ 系统目录下的 environment 文件``sudo gedit /etc/environment``\n\n## 查看内存相关信息\n+ 查看磁盘空间``df -h``\n+ 查看cup使用率``top``\n+ 查看内存``free``\n+ 杀死进程``killall -9 name``，name表示进程的名字，如``killall -9 shutter``\n\n## 配置tomcat\n+ 启动 \n```\nsh /usr/program/tomcat8/bin/startup.sh ; tail -200f /usr/program/tomcat8/logs/catalina.out\n```\n+  停止 ``sh /usr/program/tomcat8/bin/shutdown.sh``\n+ 编辑server.xml文件```sudo gedit /usr/program/tomcat8/conf/server.xml\n```\n+ 安装见[极客学院](http://wiki.jikexueyuan.com/project/linux-in-eye-of-java/Tomcat-Install-And-Settings.html) \n\n\n\n","source":"_posts/Spring-Idea-Ubuntu环境搭建.md","raw":"---\ntitle: Spring-Idea-Ubuntu环境搭建\ndate: 2017-06-16 09:51:34\ntags: [ubuntu, enviroment]\ncategories: [java]\n---\n近几天学习springMVC，但是发现一直比较卡，就尝试在ubuntu系统下搭建springMVC环境，看看效果。首先搭建java环境，安装jdk，下载idea，安装xampp，打开xampp的mysql控制台，创建数据库，进本的环境就起来了。\n\n<!-- more-->\n## 增加内存、swaf空间\n碰到的第一个问题是开始安装ubuntu时分配的内存有点小了，想增加磁盘空间，并提高ubuntu系统的性能。\n+ 增加ubuntu磁盘空间，请参考[这里](https://help.ubuntu.com/community/ResizeandDuplicateWubiDisk) ，\n+ 增加swaf空间,不了解swaf的，请戳[这里](http://baike.baidu.com/item/Swap/2666174) ，执行下面的9条语句，增加2G的swaf空间。\n```\nsudo su\nswapoff -a\ncd /host/ubuntu/disks/\nmv swap.disk swap.disk.bak\ndd if=/dev/zero of=swap.disk bs=1024 count=2097152\nmkswap swap.disk\nswapon -a\nfree -m\nrm swap.disk.bak\n```\n> 笔者使用的wubi装的windows、ubuntu双系统，故如果相对ubuntu系统进行改动的话，请参考[官方文档](https://wiki.ubuntu.com/WubiGuide#How_do_I_resize_the_virtual_disks.3F) ，一定是最节约时间的方法。\n\n## 数据库\n启动xampp``sudo /opt/lampp/lampp start``\n启动mysql``sudo /opt/lampp/lampp startmysql``\n打开sql控制台``/opt/lampp/bin/mysql -u root``\n显示数据库``show databases;``\n删除数据库``drop database  name;``\n\n## 配置环境变量\n+ 用户目录下的 .bashrc 文件``gedit ~/.bashrc ``该文件编辑保存后，可立即在新打开的终端窗口内生效。该方式添加的变量只能当前用户使用。\n+ 系统目录下的 profile 文件``sudo gedit /etc/profile``\n+ 系统目录下的 environment 文件``sudo gedit /etc/environment``\n\n## 查看内存相关信息\n+ 查看磁盘空间``df -h``\n+ 查看cup使用率``top``\n+ 查看内存``free``\n+ 杀死进程``killall -9 name``，name表示进程的名字，如``killall -9 shutter``\n\n## 配置tomcat\n+ 启动 \n```\nsh /usr/program/tomcat8/bin/startup.sh ; tail -200f /usr/program/tomcat8/logs/catalina.out\n```\n+  停止 ``sh /usr/program/tomcat8/bin/shutdown.sh``\n+ 编辑server.xml文件```sudo gedit /usr/program/tomcat8/conf/server.xml\n```\n+ 安装见[极客学院](http://wiki.jikexueyuan.com/project/linux-in-eye-of-java/Tomcat-Install-And-Settings.html) \n\n\n\n","slug":"Spring-Idea-Ubuntu环境搭建","published":1,"updated":"2017-07-30T03:02:54.811Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2emu000enpjxkmacg5ji","content":"<p>近几天学习springMVC，但是发现一直比较卡，就尝试在ubuntu系统下搭建springMVC环境，看看效果。首先搭建java环境，安装jdk，下载idea，安装xampp，打开xampp的mysql控制台，创建数据库，进本的环境就起来了。</p>\n<a id=\"more\"></a>\n<h2 id=\"增加内存、swaf空间\"><a href=\"#增加内存、swaf空间\" class=\"headerlink\" title=\"增加内存、swaf空间\"></a>增加内存、swaf空间</h2><p>碰到的第一个问题是开始安装ubuntu时分配的内存有点小了，想增加磁盘空间，并提高ubuntu系统的性能。</p>\n<ul>\n<li>增加ubuntu磁盘空间，请参考<a href=\"https://help.ubuntu.com/community/ResizeandDuplicateWubiDisk\" target=\"_blank\" rel=\"external\">这里</a> ，</li>\n<li>增加swaf空间,不了解swaf的，请戳<a href=\"http://baike.baidu.com/item/Swap/2666174\" target=\"_blank\" rel=\"external\">这里</a> ，执行下面的9条语句，增加2G的swaf空间。<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo su</div><div class=\"line\">swapoff -<span class=\"selector-tag\">a</span></div><div class=\"line\">cd /host/ubuntu/disks/</div><div class=\"line\">mv swap<span class=\"selector-class\">.disk</span> swap<span class=\"selector-class\">.disk</span><span class=\"selector-class\">.bak</span></div><div class=\"line\"><span class=\"selector-tag\">dd</span> <span class=\"keyword\">if</span>=/dev/zero of=swap<span class=\"selector-class\">.disk</span> bs=<span class=\"number\">1024</span> count=<span class=\"number\">2097152</span></div><div class=\"line\">mkswap swap<span class=\"selector-class\">.disk</span></div><div class=\"line\">swapon -<span class=\"selector-tag\">a</span></div><div class=\"line\">free -m</div><div class=\"line\">rm swap<span class=\"selector-class\">.disk</span><span class=\"selector-class\">.bak</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>笔者使用的wubi装的windows、ubuntu双系统，故如果相对ubuntu系统进行改动的话，请参考<a href=\"https://wiki.ubuntu.com/WubiGuide#How_do_I_resize_the_virtual_disks.3F\" target=\"_blank\" rel=\"external\">官方文档</a> ，一定是最节约时间的方法。</p>\n</blockquote>\n<h2 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h2><p>启动xampp<code>sudo /opt/lampp/lampp start</code><br>启动mysql<code>sudo /opt/lampp/lampp startmysql</code><br>打开sql控制台<code>/opt/lampp/bin/mysql -u root</code><br>显示数据库<code>show databases;</code><br>删除数据库<code>drop database  name;</code></p>\n<h2 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h2><ul>\n<li>用户目录下的 .bashrc 文件<code>gedit ~/.bashrc</code>该文件编辑保存后，可立即在新打开的终端窗口内生效。该方式添加的变量只能当前用户使用。</li>\n<li>系统目录下的 profile 文件<code>sudo gedit /etc/profile</code></li>\n<li>系统目录下的 environment 文件<code>sudo gedit /etc/environment</code></li>\n</ul>\n<h2 id=\"查看内存相关信息\"><a href=\"#查看内存相关信息\" class=\"headerlink\" title=\"查看内存相关信息\"></a>查看内存相关信息</h2><ul>\n<li>查看磁盘空间<code>df -h</code></li>\n<li>查看cup使用率<code>top</code></li>\n<li>查看内存<code>free</code></li>\n<li>杀死进程<code>killall -9 name</code>，name表示进程的名字，如<code>killall -9 shutter</code></li>\n</ul>\n<h2 id=\"配置tomcat\"><a href=\"#配置tomcat\" class=\"headerlink\" title=\"配置tomcat\"></a>配置tomcat</h2><ul>\n<li><p>启动 </p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sh <span class=\"regexp\">/usr/</span>program<span class=\"regexp\">/tomcat8/</span>bin<span class=\"regexp\">/startup.sh ; tail -200f /u</span>sr<span class=\"regexp\">/program/</span>tomcat8<span class=\"regexp\">/logs/</span>catalina.out</div></pre></td></tr></table></figure>\n</li>\n<li><p>停止 <code>sh /usr/program/tomcat8/bin/shutdown.sh</code></p>\n</li>\n<li>编辑server.xml文件<code>sudo gedit /usr/program/tomcat8/conf/server.xml</code></li>\n<li>安装见<a href=\"http://wiki.jikexueyuan.com/project/linux-in-eye-of-java/Tomcat-Install-And-Settings.html\" target=\"_blank\" rel=\"external\">极客学院</a> </li>\n</ul>\n","excerpt":"<p>近几天学习springMVC，但是发现一直比较卡，就尝试在ubuntu系统下搭建springMVC环境，看看效果。首先搭建java环境，安装jdk，下载idea，安装xampp，打开xampp的mysql控制台，创建数据库，进本的环境就起来了。</p>","more":"<h2 id=\"增加内存、swaf空间\"><a href=\"#增加内存、swaf空间\" class=\"headerlink\" title=\"增加内存、swaf空间\"></a>增加内存、swaf空间</h2><p>碰到的第一个问题是开始安装ubuntu时分配的内存有点小了，想增加磁盘空间，并提高ubuntu系统的性能。</p>\n<ul>\n<li>增加ubuntu磁盘空间，请参考<a href=\"https://help.ubuntu.com/community/ResizeandDuplicateWubiDisk\">这里</a> ，</li>\n<li>增加swaf空间,不了解swaf的，请戳<a href=\"http://baike.baidu.com/item/Swap/2666174\">这里</a> ，执行下面的9条语句，增加2G的swaf空间。<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo su</div><div class=\"line\">swapoff -<span class=\"selector-tag\">a</span></div><div class=\"line\">cd /host/ubuntu/disks/</div><div class=\"line\">mv swap<span class=\"selector-class\">.disk</span> swap<span class=\"selector-class\">.disk</span><span class=\"selector-class\">.bak</span></div><div class=\"line\"><span class=\"selector-tag\">dd</span> <span class=\"keyword\">if</span>=/dev/zero of=swap<span class=\"selector-class\">.disk</span> bs=<span class=\"number\">1024</span> count=<span class=\"number\">2097152</span></div><div class=\"line\">mkswap swap<span class=\"selector-class\">.disk</span></div><div class=\"line\">swapon -<span class=\"selector-tag\">a</span></div><div class=\"line\">free -m</div><div class=\"line\">rm swap<span class=\"selector-class\">.disk</span><span class=\"selector-class\">.bak</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>笔者使用的wubi装的windows、ubuntu双系统，故如果相对ubuntu系统进行改动的话，请参考<a href=\"https://wiki.ubuntu.com/WubiGuide#How_do_I_resize_the_virtual_disks.3F\">官方文档</a> ，一定是最节约时间的方法。</p>\n</blockquote>\n<h2 id=\"数据库\"><a href=\"#数据库\" class=\"headerlink\" title=\"数据库\"></a>数据库</h2><p>启动xampp<code>sudo /opt/lampp/lampp start</code><br>启动mysql<code>sudo /opt/lampp/lampp startmysql</code><br>打开sql控制台<code>/opt/lampp/bin/mysql -u root</code><br>显示数据库<code>show databases;</code><br>删除数据库<code>drop database  name;</code></p>\n<h2 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h2><ul>\n<li>用户目录下的 .bashrc 文件<code>gedit ~/.bashrc</code>该文件编辑保存后，可立即在新打开的终端窗口内生效。该方式添加的变量只能当前用户使用。</li>\n<li>系统目录下的 profile 文件<code>sudo gedit /etc/profile</code></li>\n<li>系统目录下的 environment 文件<code>sudo gedit /etc/environment</code></li>\n</ul>\n<h2 id=\"查看内存相关信息\"><a href=\"#查看内存相关信息\" class=\"headerlink\" title=\"查看内存相关信息\"></a>查看内存相关信息</h2><ul>\n<li>查看磁盘空间<code>df -h</code></li>\n<li>查看cup使用率<code>top</code></li>\n<li>查看内存<code>free</code></li>\n<li>杀死进程<code>killall -9 name</code>，name表示进程的名字，如<code>killall -9 shutter</code></li>\n</ul>\n<h2 id=\"配置tomcat\"><a href=\"#配置tomcat\" class=\"headerlink\" title=\"配置tomcat\"></a>配置tomcat</h2><ul>\n<li><p>启动 </p>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sh <span class=\"regexp\">/usr/</span>program<span class=\"regexp\">/tomcat8/</span>bin<span class=\"regexp\">/startup.sh ; tail -200f /u</span>sr<span class=\"regexp\">/program/</span>tomcat8<span class=\"regexp\">/logs/</span>catalina.out</div></pre></td></tr></table></figure>\n</li>\n<li><p>停止 <code>sh /usr/program/tomcat8/bin/shutdown.sh</code></p>\n</li>\n<li>编辑server.xml文件<code>sudo gedit /usr/program/tomcat8/conf/server.xml</code></li>\n<li>安装见<a href=\"http://wiki.jikexueyuan.com/project/linux-in-eye-of-java/Tomcat-Install-And-Settings.html\">极客学院</a> </li>\n</ul>"},{"title":"Brief process of building a personal blog","date":"2017-05-16T01:51:34.000Z","_content":"\nThe article is a brief statement mainly about the whole process of building personal blog, which is about from building Github Pages, learning hexo, to write blogs by using markdown, achieve the feature of uploading pictures. Tools: github account, node, npm, hexo, Image Uploader, markdown, swiftype.\n\n<!--more-->\n\n### Building Github Pages\n\nI have built my site by Github Pages, recommond [document ](https://pages.github.com/) . If you only want to write blogs, the 300M space of Github Pages is enough to use. Because now the mainstream blog framework are static page, does not involve the interaction with the database, so do not need too much space.\n\n### Learning Hexo\n\nBuilding hexo environment needs node, npm, and the specific installation steps has been given by hexo [official website](https://www.digitalocean.com/community/tutorials/how-to-create-a-blog-with-hexo-on-ubuntu-14-04) . I recommend [learning materials](https://www.digitalocean.com/community/tutorials/how-to-create-a-blog-with-hexo-on-ubuntu-14-04) , if after deploying on server, there are not styles, you can deploy on the site again after executing ```hexo clean``` command. I used [jacman theme](https://github.com/wuchong/jacman) , due to the jacman's author has written a detail tutorial, you can complete the theme setting by fowllowing it step by step. \n\n### Writting blogs by using markdown\n\nI did not know markdown before building blog, so I download a mainstream markdown tool called [reMarkable](https://getremarkable.com/) . After learning basic grammer, I have sorted out common grammer in markdown. I hope it can help you. ![](http://p1.bqimg.com/567571/10524bb9033523f6.png) \n\n> If some of the result is not what you want, you can add a space and try it again. eg: ```### mengyunzhi```（there is a space between the last \"#\"and\"m\"). \n\n### Uploading pictures\n\nBecause you often need some pictures to explain what you want to express, the feature of uploading pictures is necessary, I used  [Image Uploader](https://chrome.google.com/webstore/detail/%E6%9E%81%E7%AE%80%E5%9B%BE%E5%BA%8A/heebflcbemenefckkgfnnklbhdbdkagg?hl=zh-CN) to upload pictures. After downloading Image Uploader, uploading a picture and copy the url of picture by using it, you can achieve the feature of uploading pictures. \n\n### Searching in site\n\nI tried to baidu's search site and para, but I failed. And I saw [swiftype](https://swiftype.com/)  by accident, you can try it in my blog. Here is a [tutorial](http://www.jerryfu.net/post/search-engine-for-hexo-with-swiftype-v2.html) . I recommend swiftype instead baidu and google's search site. \n\n### Conclusion\n\nAbove is the process of building a whole personal blog. Before building the blog, maybe you feel that you need to be in a high level. But after you know it, you may find you can build your blog in short time even you are amateur. I believe that if reader have the determine to build your personal blog, you can be able to do as well as you want. Good luck to you!\n\nIf there are mistakes, please correct me.","source":"_posts/The-brief-process-of-building-a-personal-blog.md","raw":"---\ntitle: Brief process of building a personal blog\ndate: 2017-05-16 09:51:34\ncategories: [English]\n---\n\nThe article is a brief statement mainly about the whole process of building personal blog, which is about from building Github Pages, learning hexo, to write blogs by using markdown, achieve the feature of uploading pictures. Tools: github account, node, npm, hexo, Image Uploader, markdown, swiftype.\n\n<!--more-->\n\n### Building Github Pages\n\nI have built my site by Github Pages, recommond [document ](https://pages.github.com/) . If you only want to write blogs, the 300M space of Github Pages is enough to use. Because now the mainstream blog framework are static page, does not involve the interaction with the database, so do not need too much space.\n\n### Learning Hexo\n\nBuilding hexo environment needs node, npm, and the specific installation steps has been given by hexo [official website](https://www.digitalocean.com/community/tutorials/how-to-create-a-blog-with-hexo-on-ubuntu-14-04) . I recommend [learning materials](https://www.digitalocean.com/community/tutorials/how-to-create-a-blog-with-hexo-on-ubuntu-14-04) , if after deploying on server, there are not styles, you can deploy on the site again after executing ```hexo clean``` command. I used [jacman theme](https://github.com/wuchong/jacman) , due to the jacman's author has written a detail tutorial, you can complete the theme setting by fowllowing it step by step. \n\n### Writting blogs by using markdown\n\nI did not know markdown before building blog, so I download a mainstream markdown tool called [reMarkable](https://getremarkable.com/) . After learning basic grammer, I have sorted out common grammer in markdown. I hope it can help you. ![](http://p1.bqimg.com/567571/10524bb9033523f6.png) \n\n> If some of the result is not what you want, you can add a space and try it again. eg: ```### mengyunzhi```（there is a space between the last \"#\"and\"m\"). \n\n### Uploading pictures\n\nBecause you often need some pictures to explain what you want to express, the feature of uploading pictures is necessary, I used  [Image Uploader](https://chrome.google.com/webstore/detail/%E6%9E%81%E7%AE%80%E5%9B%BE%E5%BA%8A/heebflcbemenefckkgfnnklbhdbdkagg?hl=zh-CN) to upload pictures. After downloading Image Uploader, uploading a picture and copy the url of picture by using it, you can achieve the feature of uploading pictures. \n\n### Searching in site\n\nI tried to baidu's search site and para, but I failed. And I saw [swiftype](https://swiftype.com/)  by accident, you can try it in my blog. Here is a [tutorial](http://www.jerryfu.net/post/search-engine-for-hexo-with-swiftype-v2.html) . I recommend swiftype instead baidu and google's search site. \n\n### Conclusion\n\nAbove is the process of building a whole personal blog. Before building the blog, maybe you feel that you need to be in a high level. But after you know it, you may find you can build your blog in short time even you are amateur. I believe that if reader have the determine to build your personal blog, you can be able to do as well as you want. Good luck to you!\n\nIf there are mistakes, please correct me.","slug":"The-brief-process-of-building-a-personal-blog","published":1,"updated":"2017-07-30T03:03:49.284Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2emx000hnpjxe5raqqv2","content":"<p>The article is a brief statement mainly about the whole process of building personal blog, which is about from building Github Pages, learning hexo, to write blogs by using markdown, achieve the feature of uploading pictures. Tools: github account, node, npm, hexo, Image Uploader, markdown, swiftype.</p>\n<a id=\"more\"></a>\n<h3 id=\"Building-Github-Pages\"><a href=\"#Building-Github-Pages\" class=\"headerlink\" title=\"Building Github Pages\"></a>Building Github Pages</h3><p>I have built my site by Github Pages, recommond <a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"external\">document </a> . If you only want to write blogs, the 300M space of Github Pages is enough to use. Because now the mainstream blog framework are static page, does not involve the interaction with the database, so do not need too much space.</p>\n<h3 id=\"Learning-Hexo\"><a href=\"#Learning-Hexo\" class=\"headerlink\" title=\"Learning Hexo\"></a>Learning Hexo</h3><p>Building hexo environment needs node, npm, and the specific installation steps has been given by hexo <a href=\"https://www.digitalocean.com/community/tutorials/how-to-create-a-blog-with-hexo-on-ubuntu-14-04\" target=\"_blank\" rel=\"external\">official website</a> . I recommend <a href=\"https://www.digitalocean.com/community/tutorials/how-to-create-a-blog-with-hexo-on-ubuntu-14-04\" target=\"_blank\" rel=\"external\">learning materials</a> , if after deploying on server, there are not styles, you can deploy on the site again after executing <code>hexo clean</code> command. I used <a href=\"https://github.com/wuchong/jacman\" target=\"_blank\" rel=\"external\">jacman theme</a> , due to the jacman’s author has written a detail tutorial, you can complete the theme setting by fowllowing it step by step. </p>\n<h3 id=\"Writting-blogs-by-using-markdown\"><a href=\"#Writting-blogs-by-using-markdown\" class=\"headerlink\" title=\"Writting blogs by using markdown\"></a>Writting blogs by using markdown</h3><p>I did not know markdown before building blog, so I download a mainstream markdown tool called <a href=\"https://getremarkable.com/\" target=\"_blank\" rel=\"external\">reMarkable</a> . After learning basic grammer, I have sorted out common grammer in markdown. I hope it can help you. <figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://p1.bqimg.com/567571/10524bb9033523f6.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure> </p>\n<blockquote>\n<p>If some of the result is not what you want, you can add a space and try it again. eg: <code>### mengyunzhi</code>（there is a space between the last “#”and”m”). </p>\n</blockquote>\n<h3 id=\"Uploading-pictures\"><a href=\"#Uploading-pictures\" class=\"headerlink\" title=\"Uploading pictures\"></a>Uploading pictures</h3><p>Because you often need some pictures to explain what you want to express, the feature of uploading pictures is necessary, I used  <a href=\"https://chrome.google.com/webstore/detail/%E6%9E%81%E7%AE%80%E5%9B%BE%E5%BA%8A/heebflcbemenefckkgfnnklbhdbdkagg?hl=zh-CN\" target=\"_blank\" rel=\"external\">Image Uploader</a> to upload pictures. After downloading Image Uploader, uploading a picture and copy the url of picture by using it, you can achieve the feature of uploading pictures. </p>\n<h3 id=\"Searching-in-site\"><a href=\"#Searching-in-site\" class=\"headerlink\" title=\"Searching in site\"></a>Searching in site</h3><p>I tried to baidu’s search site and para, but I failed. And I saw <a href=\"https://swiftype.com/\" target=\"_blank\" rel=\"external\">swiftype</a>  by accident, you can try it in my blog. Here is a <a href=\"http://www.jerryfu.net/post/search-engine-for-hexo-with-swiftype-v2.html\" target=\"_blank\" rel=\"external\">tutorial</a> . I recommend swiftype instead baidu and google’s search site. </p>\n<h3 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h3><p>Above is the process of building a whole personal blog. Before building the blog, maybe you feel that you need to be in a high level. But after you know it, you may find you can build your blog in short time even you are amateur. I believe that if reader have the determine to build your personal blog, you can be able to do as well as you want. Good luck to you!</p>\n<p>If there are mistakes, please correct me.</p>\n","excerpt":"<p>The article is a brief statement mainly about the whole process of building personal blog, which is about from building Github Pages, learning hexo, to write blogs by using markdown, achieve the feature of uploading pictures. Tools: github account, node, npm, hexo, Image Uploader, markdown, swiftype.</p>","more":"<h3 id=\"Building-Github-Pages\"><a href=\"#Building-Github-Pages\" class=\"headerlink\" title=\"Building Github Pages\"></a>Building Github Pages</h3><p>I have built my site by Github Pages, recommond <a href=\"https://pages.github.com/\">document </a> . If you only want to write blogs, the 300M space of Github Pages is enough to use. Because now the mainstream blog framework are static page, does not involve the interaction with the database, so do not need too much space.</p>\n<h3 id=\"Learning-Hexo\"><a href=\"#Learning-Hexo\" class=\"headerlink\" title=\"Learning Hexo\"></a>Learning Hexo</h3><p>Building hexo environment needs node, npm, and the specific installation steps has been given by hexo <a href=\"https://www.digitalocean.com/community/tutorials/how-to-create-a-blog-with-hexo-on-ubuntu-14-04\">official website</a> . I recommend <a href=\"https://www.digitalocean.com/community/tutorials/how-to-create-a-blog-with-hexo-on-ubuntu-14-04\">learning materials</a> , if after deploying on server, there are not styles, you can deploy on the site again after executing <code>hexo clean</code> command. I used <a href=\"https://github.com/wuchong/jacman\">jacman theme</a> , due to the jacman’s author has written a detail tutorial, you can complete the theme setting by fowllowing it step by step. </p>\n<h3 id=\"Writting-blogs-by-using-markdown\"><a href=\"#Writting-blogs-by-using-markdown\" class=\"headerlink\" title=\"Writting blogs by using markdown\"></a>Writting blogs by using markdown</h3><p>I did not know markdown before building blog, so I download a mainstream markdown tool called <a href=\"https://getremarkable.com/\">reMarkable</a> . After learning basic grammer, I have sorted out common grammer in markdown. I hope it can help you. <figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://p1.bqimg.com/567571/10524bb9033523f6.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure> </p>\n<blockquote>\n<p>If some of the result is not what you want, you can add a space and try it again. eg: <code>### mengyunzhi</code>（there is a space between the last “#”and”m”). </p>\n</blockquote>\n<h3 id=\"Uploading-pictures\"><a href=\"#Uploading-pictures\" class=\"headerlink\" title=\"Uploading pictures\"></a>Uploading pictures</h3><p>Because you often need some pictures to explain what you want to express, the feature of uploading pictures is necessary, I used  <a href=\"https://chrome.google.com/webstore/detail/%E6%9E%81%E7%AE%80%E5%9B%BE%E5%BA%8A/heebflcbemenefckkgfnnklbhdbdkagg?hl=zh-CN\">Image Uploader</a> to upload pictures. After downloading Image Uploader, uploading a picture and copy the url of picture by using it, you can achieve the feature of uploading pictures. </p>\n<h3 id=\"Searching-in-site\"><a href=\"#Searching-in-site\" class=\"headerlink\" title=\"Searching in site\"></a>Searching in site</h3><p>I tried to baidu’s search site and para, but I failed. And I saw <a href=\"https://swiftype.com/\">swiftype</a>  by accident, you can try it in my blog. Here is a <a href=\"http://www.jerryfu.net/post/search-engine-for-hexo-with-swiftype-v2.html\">tutorial</a> . I recommend swiftype instead baidu and google’s search site. </p>\n<h3 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h3><p>Above is the process of building a whole personal blog. Before building the blog, maybe you feel that you need to be in a high level. But after you know it, you may find you can build your blog in short time even you are amateur. I believe that if reader have the determine to build your personal blog, you can be able to do as well as you want. Good luck to you!</p>\n<p>If there are mistakes, please correct me.</p>"},{"title":"SpringMVC实现session分布式管理","date":"2017-07-05T19:48:23.000Z","_content":"\n在程序开发中不可避免的要和session打交道，那么我们如何在Spring项目使用session呢？本文记录了在项目中使用session的流程和遇到的问题。\n> 环境：SpringMVC，tomcat，redis，Spring session\n\n<!--more-->\n\n## 配置spring session\n+ 安装jar包\n```\n<dependency>\n\t<groupId>org.springframework.session</groupId>\n\t<artifactId>spring-session</artifactId>\n</dependency>\n<dependency>\n\t<groupId>org.springframework.boot</groupId>\n\t<artifactId>spring-boot-starter-redis</artifactId>\n</dependency>\n```\n+ 安装redis，安装方式请自行google。下面附几条常用的命令。\n  - 启动``redis-server.exe redis.windows.conf ``\n  -  运行``redis-cli.exe -h 127.0.0.1 -p 6379``\n  - 设置密码``config set requirepass test123``\n  - 授权``auth test123``\n  - 查询``keys  *\t``\n+ 配置spring\n - 创建spring配置\n```\n@Configuration\n@EnableRedisHttpSession \npublic class HttpSessionConfig {\n\t// 设置HttpSession策略。默认读取header中的X-Auth-Token,作为sessionId。\n        @Bean\n        public HttpSessionStrategy httpSessionStrategy() {\n                return new HeaderHttpSessionStrategy(); \n        }\n}\n```\n     @EnableRedisHttpSession注解创建了springSessionRepositoryFilter来实现过滤功能，将所有的session都放在了redis中。\n-  在.properties或者.yml文件中配置redis\n```\nspring.session.store-type=redis\nspring.redis.host=localhost\nspring.redis.password=test123\nspring.redis.port=6379\nserver.session-timeout=86400\n```\n## 如何获取session\n我们可以通过一下方式通过键值对的形式储存设置session。\n```\n        HttpSession session = request.getSession();\n        session.setAttribute(key, value);\n```\n运行后，我们可以看到redis中多了一条记录。但是我们如何把这条记录取出来呢，这个问题似乎难倒了很多人。在上面配置spring时，我们加入了以下代码\n```\n// 设置HttpSession策略。默认读取header中的X-Auth-Token,作为sessionId。\n@Bean\npublic HttpSessionStrategy httpSessionStrategy() {\n        return new HeaderHttpSessionStrategy(); \n}\n```\n这段代码的作用是，当我们接收到http请求时，响应头信息会有``x-auth-token``，当我们你发送请求时，头信息中也会有``x-auth-token``。回到问题，接下来如何具体实现呢，时序图如下\n![](/images/选区_083.png)\n当我们第一次发送请求后，响应头信息中会有一项``x-auth-token``，再发送下一次请求时，把第一次请求的``x-auth-token``及对应的值放在头信息中，那么HttpSession就认为是同一个客户发送的请求，我们就可以通过``getAttribute``方法获取session信息了。\n> 时序图中的长方形表示激活，代表时序图中对象执行一项操作的时期。\n\n## 总结\n通过时序图屡一下关系\n![](/images/选区_084.png)\n通过时序图可以知道，我们把session信息储存在过滤器中，这样session就不依赖于各个节点的服务器，直接从高性能的键值对数据库redis中获取session信息。\n\n\n\n参考文献：1.[https://docs.spring.io/spring-session/docs/current/reference/html5/guides/rest.html](https://docs.spring.io/spring-session/docs/current/reference/html5/guides/rest.html) ","source":"_posts/Using-session-in-SpringMVC.md","raw":"---\ntitle: SpringMVC实现session分布式管理\ndate: 2017-07-06 03:48:23\ncategories: SpringMvc\ntags: session\n---\n\n在程序开发中不可避免的要和session打交道，那么我们如何在Spring项目使用session呢？本文记录了在项目中使用session的流程和遇到的问题。\n> 环境：SpringMVC，tomcat，redis，Spring session\n\n<!--more-->\n\n## 配置spring session\n+ 安装jar包\n```\n<dependency>\n\t<groupId>org.springframework.session</groupId>\n\t<artifactId>spring-session</artifactId>\n</dependency>\n<dependency>\n\t<groupId>org.springframework.boot</groupId>\n\t<artifactId>spring-boot-starter-redis</artifactId>\n</dependency>\n```\n+ 安装redis，安装方式请自行google。下面附几条常用的命令。\n  - 启动``redis-server.exe redis.windows.conf ``\n  -  运行``redis-cli.exe -h 127.0.0.1 -p 6379``\n  - 设置密码``config set requirepass test123``\n  - 授权``auth test123``\n  - 查询``keys  *\t``\n+ 配置spring\n - 创建spring配置\n```\n@Configuration\n@EnableRedisHttpSession \npublic class HttpSessionConfig {\n\t// 设置HttpSession策略。默认读取header中的X-Auth-Token,作为sessionId。\n        @Bean\n        public HttpSessionStrategy httpSessionStrategy() {\n                return new HeaderHttpSessionStrategy(); \n        }\n}\n```\n     @EnableRedisHttpSession注解创建了springSessionRepositoryFilter来实现过滤功能，将所有的session都放在了redis中。\n-  在.properties或者.yml文件中配置redis\n```\nspring.session.store-type=redis\nspring.redis.host=localhost\nspring.redis.password=test123\nspring.redis.port=6379\nserver.session-timeout=86400\n```\n## 如何获取session\n我们可以通过一下方式通过键值对的形式储存设置session。\n```\n        HttpSession session = request.getSession();\n        session.setAttribute(key, value);\n```\n运行后，我们可以看到redis中多了一条记录。但是我们如何把这条记录取出来呢，这个问题似乎难倒了很多人。在上面配置spring时，我们加入了以下代码\n```\n// 设置HttpSession策略。默认读取header中的X-Auth-Token,作为sessionId。\n@Bean\npublic HttpSessionStrategy httpSessionStrategy() {\n        return new HeaderHttpSessionStrategy(); \n}\n```\n这段代码的作用是，当我们接收到http请求时，响应头信息会有``x-auth-token``，当我们你发送请求时，头信息中也会有``x-auth-token``。回到问题，接下来如何具体实现呢，时序图如下\n![](/images/选区_083.png)\n当我们第一次发送请求后，响应头信息中会有一项``x-auth-token``，再发送下一次请求时，把第一次请求的``x-auth-token``及对应的值放在头信息中，那么HttpSession就认为是同一个客户发送的请求，我们就可以通过``getAttribute``方法获取session信息了。\n> 时序图中的长方形表示激活，代表时序图中对象执行一项操作的时期。\n\n## 总结\n通过时序图屡一下关系\n![](/images/选区_084.png)\n通过时序图可以知道，我们把session信息储存在过滤器中，这样session就不依赖于各个节点的服务器，直接从高性能的键值对数据库redis中获取session信息。\n\n\n\n参考文献：1.[https://docs.spring.io/spring-session/docs/current/reference/html5/guides/rest.html](https://docs.spring.io/spring-session/docs/current/reference/html5/guides/rest.html) ","slug":"Using-session-in-SpringMVC","published":1,"updated":"2017-07-06T00:15:24.250Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2emy000jnpjxy8cpkwh2","content":"<p>在程序开发中不可避免的要和session打交道，那么我们如何在Spring项目使用session呢？本文记录了在项目中使用session的流程和遇到的问题。</p>\n<blockquote>\n<p>环境：SpringMVC，tomcat，redis，Spring session</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"配置spring-session\"><a href=\"#配置spring-session\" class=\"headerlink\" title=\"配置spring session\"></a>配置spring session</h2><ul>\n<li><p>安装jar包</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.session<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-session<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-redis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>安装redis，安装方式请自行google。下面附几条常用的命令。</p>\n<ul>\n<li>启动<code>redis-server.exe redis.windows.conf</code></li>\n<li>运行<code>redis-cli.exe -h 127.0.0.1 -p 6379</code></li>\n<li>设置密码<code>config set requirepass test123</code></li>\n<li>授权<code>auth test123</code></li>\n<li>查询<code>keys  *</code></li>\n</ul>\n</li>\n<li><p>配置spring</p>\n<ul>\n<li><p>创建spring配置</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"variable\">@Configuration</span></div><div class=\"line\"><span class=\"variable\">@EnableRedisHttpSession</span> </div><div class=\"line\">public class HttpSessionConfig &#123;</div><div class=\"line\">\t<span class=\"comment\">// 设置HttpSession策略。默认读取header中的X-Auth-Token,作为sessionId。</span></div><div class=\"line\">        <span class=\"variable\">@Bean</span></div><div class=\"line\">        public HttpSessionStrategy httpSessionStrategy() &#123;</div><div class=\"line\">                <span class=\"selector-tag\">return</span> <span class=\"selector-tag\">new</span> <span class=\"selector-tag\">HeaderHttpSessionStrategy</span>(); </div><div class=\"line\">        &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p> @EnableRedisHttpSession注解创建了springSessionRepositoryFilter来实现过滤功能，将所有的session都放在了redis中。</p>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>在.properties或者.yml文件中配置redis<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">spring<span class=\"selector-class\">.session</span><span class=\"selector-class\">.store-type</span>=redis</div><div class=\"line\">spring<span class=\"selector-class\">.redis</span><span class=\"selector-class\">.host</span>=localhost</div><div class=\"line\">spring<span class=\"selector-class\">.redis</span><span class=\"selector-class\">.password</span>=test123</div><div class=\"line\">spring<span class=\"selector-class\">.redis</span><span class=\"selector-class\">.port</span>=<span class=\"number\">6379</span></div><div class=\"line\">server.session-timeout=<span class=\"number\">86400</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"如何获取session\"><a href=\"#如何获取session\" class=\"headerlink\" title=\"如何获取session\"></a>如何获取session</h2><p>我们可以通过一下方式通过键值对的形式储存设置session。<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">HttpSession session = request.getSession()<span class=\"comment\">;</span></div><div class=\"line\">session.setAttribute(key, value)<span class=\"comment\">;</span></div></pre></td></tr></table></figure></p>\n<p>运行后，我们可以看到redis中多了一条记录。但是我们如何把这条记录取出来呢，这个问题似乎难倒了很多人。在上面配置spring时，我们加入了以下代码<br><figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 设置HttpSession策略。默认读取header中的X-Auth-Token,作为sessionId。</span></div><div class=\"line\"><span class=\"meta\">@Bean</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\">HttpSessionStrategy <span class=\"title\">httpSessionStrategy</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> HeaderHttpSessionStrategy(); </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>这段代码的作用是，当我们接收到http请求时，响应头信息会有<code>x-auth-token</code>，当我们你发送请求时，头信息中也会有<code>x-auth-token</code>。回到问题，接下来如何具体实现呢，时序图如下<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/选区_083.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br>当我们第一次发送请求后，响应头信息中会有一项<code>x-auth-token</code>，再发送下一次请求时，把第一次请求的<code>x-auth-token</code>及对应的值放在头信息中，那么HttpSession就认为是同一个客户发送的请求，我们就可以通过<code>getAttribute</code>方法获取session信息了。</p>\n<blockquote>\n<p>时序图中的长方形表示激活，代表时序图中对象执行一项操作的时期。</p>\n</blockquote>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>通过时序图屡一下关系<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/选区_084.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br>通过时序图可以知道，我们把session信息储存在过滤器中，这样session就不依赖于各个节点的服务器，直接从高性能的键值对数据库redis中获取session信息。</p>\n<p>参考文献：1.<a href=\"https://docs.spring.io/spring-session/docs/current/reference/html5/guides/rest.html\" target=\"_blank\" rel=\"external\">https://docs.spring.io/spring-session/docs/current/reference/html5/guides/rest.html</a> </p>\n","excerpt":"<p>在程序开发中不可避免的要和session打交道，那么我们如何在Spring项目使用session呢？本文记录了在项目中使用session的流程和遇到的问题。</p>\n<blockquote>\n<p>环境：SpringMVC，tomcat，redis，Spring session</p>\n</blockquote>","more":"<h2 id=\"配置spring-session\"><a href=\"#配置spring-session\" class=\"headerlink\" title=\"配置spring session\"></a>配置spring session</h2><ul>\n<li><p>安装jar包</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.session<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-session<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-redis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>安装redis，安装方式请自行google。下面附几条常用的命令。</p>\n<ul>\n<li>启动<code>redis-server.exe redis.windows.conf</code></li>\n<li>运行<code>redis-cli.exe -h 127.0.0.1 -p 6379</code></li>\n<li>设置密码<code>config set requirepass test123</code></li>\n<li>授权<code>auth test123</code></li>\n<li>查询<code>keys  *</code></li>\n</ul>\n</li>\n<li><p>配置spring</p>\n<ul>\n<li><p>创建spring配置</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"variable\">@Configuration</span></div><div class=\"line\"><span class=\"variable\">@EnableRedisHttpSession</span> </div><div class=\"line\">public class HttpSessionConfig &#123;</div><div class=\"line\">\t<span class=\"comment\">// 设置HttpSession策略。默认读取header中的X-Auth-Token,作为sessionId。</span></div><div class=\"line\">        <span class=\"variable\">@Bean</span></div><div class=\"line\">        public HttpSessionStrategy httpSessionStrategy() &#123;</div><div class=\"line\">                <span class=\"selector-tag\">return</span> <span class=\"selector-tag\">new</span> <span class=\"selector-tag\">HeaderHttpSessionStrategy</span>(); </div><div class=\"line\">        &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p> @EnableRedisHttpSession注解创建了springSessionRepositoryFilter来实现过滤功能，将所有的session都放在了redis中。</p>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>在.properties或者.yml文件中配置redis<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">spring<span class=\"selector-class\">.session</span><span class=\"selector-class\">.store-type</span>=redis</div><div class=\"line\">spring<span class=\"selector-class\">.redis</span><span class=\"selector-class\">.host</span>=localhost</div><div class=\"line\">spring<span class=\"selector-class\">.redis</span><span class=\"selector-class\">.password</span>=test123</div><div class=\"line\">spring<span class=\"selector-class\">.redis</span><span class=\"selector-class\">.port</span>=<span class=\"number\">6379</span></div><div class=\"line\">server.session-timeout=<span class=\"number\">86400</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"如何获取session\"><a href=\"#如何获取session\" class=\"headerlink\" title=\"如何获取session\"></a>如何获取session</h2><p>我们可以通过一下方式通过键值对的形式储存设置session。<br><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">HttpSession session = request.getSession()<span class=\"comment\">;</span></div><div class=\"line\">session.setAttribute(key, value)<span class=\"comment\">;</span></div></pre></td></tr></table></figure></p>\n<p>运行后，我们可以看到redis中多了一条记录。但是我们如何把这条记录取出来呢，这个问题似乎难倒了很多人。在上面配置spring时，我们加入了以下代码<br><figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 设置HttpSession策略。默认读取header中的X-Auth-Token,作为sessionId。</span></div><div class=\"line\"><span class=\"meta\">@Bean</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\">HttpSessionStrategy <span class=\"title\">httpSessionStrategy</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> HeaderHttpSessionStrategy(); </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>这段代码的作用是，当我们接收到http请求时，响应头信息会有<code>x-auth-token</code>，当我们你发送请求时，头信息中也会有<code>x-auth-token</code>。回到问题，接下来如何具体实现呢，时序图如下<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/选区_083.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br>当我们第一次发送请求后，响应头信息中会有一项<code>x-auth-token</code>，再发送下一次请求时，把第一次请求的<code>x-auth-token</code>及对应的值放在头信息中，那么HttpSession就认为是同一个客户发送的请求，我们就可以通过<code>getAttribute</code>方法获取session信息了。</p>\n<blockquote>\n<p>时序图中的长方形表示激活，代表时序图中对象执行一项操作的时期。</p>\n</blockquote>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>通过时序图屡一下关系<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/选区_084.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br>通过时序图可以知道，我们把session信息储存在过滤器中，这样session就不依赖于各个节点的服务器，直接从高性能的键值对数据库redis中获取session信息。</p>\n<p>参考文献：1.<a href=\"https://docs.spring.io/spring-session/docs/current/reference/html5/guides/rest.html\">https://docs.spring.io/spring-session/docs/current/reference/html5/guides/rest.html</a> </p>"},{"title":"净水器API","date":"2017-06-29T02:30:09.000Z","_content":"\n净水器方提供API接口，负责处理单个净水器的请求信息。如获取充值信息，用户使用饮水机信息等。\n\n<!--more-->\n\n# API列表\n+ [getCurrentTime](./#getCurrentTime)  ，获取服务器当前时间\n+ [getRechargeInfo](./#getRechargeInfo) ， 获取充值信息\n+ [isRechargeOk](./#isRechargeOk)  ，是否充值成功\n+ [useInfo](./#useInfo) ，净水器使用信息\n\n# getCurrentTime \n获取服务器当前时间\n\n## URL\nhttps://api.water.mengyunzhi.com/getCurrentTime \n\n## 支持格式\nJSON\n\n## HTTP请求方式\nGET\n\n## 请求参数\n无\n\n## 请求示例\n```\nGET /api/getCurrentTime HTTP/1.1\nContent-Type: application/x-www-form-urlencoded;charset=UTF-8\nHost: https://api.water.mengyunzhi.com\n```\n\n## 响应结果示例\n```\nHTTP/1.1 200 OK\nContent-Type: text/plain;charset=ISO-8859-1\nContent-Length: 10\n  \n1498891791\n```\n\n# getRechargeInfo\n获取充值水量\n\n## URL\nhttps://api.water.mengyunzhi.com/getRechargeInfo\n\n## 支持格式\nJSON\n\n## HTTP请求方式\nGET\n\n## 请求参数\n+ id。类型：Long。说明：净水器编号。\n+ timestamp。类型：String。说明：时间戳。\n+ randomString。类型：String。说明：随机生成的字符串。\n+ encryptionInfo。类型：String。将timestamp、randomString、\"mengyunzhi\"进行字符串拼接（格式：timestamp + randomString + \"mengyunzhi\"），并对拼接结果进行sha1加密，生成encryptionInfo。\n\n## 请求示例\n```\nGET /api/getRechargeInfo?id=23213&timestamp=1497457292548&randomString=unzdtggyopn1fl7sx68b8olxr&encryptionInfo=37cde59cfa3384c84d9bf7545be348bc880c79bd HTTP/1.1\nContent-Type: application/x-www-form-urlencoded;charset=UTF-8\nHost: https://api.water.mengyunzhi.com\n```\n\n## 响应结果示例\n```\nHTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\nContent-Length: 2\n   \n20\n```\n\n# isRechargeOk\n是否充值成功\n\n## URL\nhttps://api.water.mengyunzhi.com/isRechargeOk\n\n## 支持格式\nJSON\n\n## HTTP请求方式\nPOST\n\n## \t请求参数\n+ id。类型：Long。说明：净水器编号。\n+ shouldRecharge.。类型：int。说明：应该充值水量。\n+ actualRecharge。类型：int。说明：实际充值水量。\n\n## 请求头信息\n+ timestamp。类型：String。说明：时间戳。\n+ randomString。类型：String。说明：随机生成的字符串。\n+ encryptionInfo。类型：String。将timestamp、randomString、\"mengyunzhi\"进行字符串拼接（格式：timestamp + randomString + \"mengyunzhi\"），并对拼接结果进行sha1加密，生成encryptionInfo。\n\n## 请求示例\n```\nPOST /api/isRechargeOk HTTP/1.1\n\nContent-Type: application/json;charset=UTF-8\nHost: https://api.water.mengyunzhi.com\nTimestamp: 1497457292548\nRandomString: unzdtggyopn1fl7sx68b8olxr\nEncryptionInfo: 37cde59cfa3384c84d9bf7545be348bc880c79bd\n   \n{\n\t\"id\": 1,\n\t\"shouldRecharge\": 200,\n\t\"actualRecharge\": 200\n}\n```\n\n## 响应结果示例\n```\nHTTP/1.1 200 OK\n```\n# useInfo\n净水器使用信息\n\n## URL\nhttps://api.water.mengyunzhi.com/useInfo\n\n## 支持格式\nJSON\n\n## HTTP请求方式\nPOST\n\n## \t请求参数\n+ id。类型：Long。说明：净水器编号。\n+ usedBeforeWaterQuality。类型：int。说明：净水前水质。\n+ usedAfterWaterQuality。类型：int。说明：净水后水质。\n+ usedWaterQuantity。类型：int。说明：用水量。\n+ lastInteractTime。类型：Long。说明：上次交互的时间戳。\n\n## 请求头信息\n+ timestamp。类型：String。说明：时间戳。\n+ randomString。类型：String。说明：随机生成的字符串。\n+ encryptionInfo。类型：String。将timestamp、randomString、\"mengyunzhi\"进行字符串拼接（格式：timestamp + randomString + \"mengyunzhi\"），并对拼接结果进行sha1加密，生成encryptionInfo。\n\n## 请求示例\n```\nPOST /api/useInfo HTTP/1.1\nContent-Type: application/json;charset=UTF-8\nHost: https://api.water.mengyunzhi.com\nTimestamp: 1497457292548\nRandomString: unzdtggyopn1fl7sx68b8olxr\nEncryptionInfo: 37cde59cfa3384c84d9bf7545be348bc880c79bd\n   \n{\n\t\"id\": \"1\",\n\t\"usedBeforeWaterQuality\": 200,\n\t\"usedAfterWaterQuality\": 2030,\n\t\"usedWaterQuantity\": 2200,\n\t\"lastInteractTime\": 1497457292548\n}\t\n```\n\n## 响应结果示例\n```\nHTTP/1.1 200 OK\n```","source":"_posts/WaterPurifier-API.md","raw":"---\ntitle: 净水器API\ndate: 2017-06-29 10:30:09\ntags: API\n---\n\n净水器方提供API接口，负责处理单个净水器的请求信息。如获取充值信息，用户使用饮水机信息等。\n\n<!--more-->\n\n# API列表\n+ [getCurrentTime](./#getCurrentTime)  ，获取服务器当前时间\n+ [getRechargeInfo](./#getRechargeInfo) ， 获取充值信息\n+ [isRechargeOk](./#isRechargeOk)  ，是否充值成功\n+ [useInfo](./#useInfo) ，净水器使用信息\n\n# getCurrentTime \n获取服务器当前时间\n\n## URL\nhttps://api.water.mengyunzhi.com/getCurrentTime \n\n## 支持格式\nJSON\n\n## HTTP请求方式\nGET\n\n## 请求参数\n无\n\n## 请求示例\n```\nGET /api/getCurrentTime HTTP/1.1\nContent-Type: application/x-www-form-urlencoded;charset=UTF-8\nHost: https://api.water.mengyunzhi.com\n```\n\n## 响应结果示例\n```\nHTTP/1.1 200 OK\nContent-Type: text/plain;charset=ISO-8859-1\nContent-Length: 10\n  \n1498891791\n```\n\n# getRechargeInfo\n获取充值水量\n\n## URL\nhttps://api.water.mengyunzhi.com/getRechargeInfo\n\n## 支持格式\nJSON\n\n## HTTP请求方式\nGET\n\n## 请求参数\n+ id。类型：Long。说明：净水器编号。\n+ timestamp。类型：String。说明：时间戳。\n+ randomString。类型：String。说明：随机生成的字符串。\n+ encryptionInfo。类型：String。将timestamp、randomString、\"mengyunzhi\"进行字符串拼接（格式：timestamp + randomString + \"mengyunzhi\"），并对拼接结果进行sha1加密，生成encryptionInfo。\n\n## 请求示例\n```\nGET /api/getRechargeInfo?id=23213&timestamp=1497457292548&randomString=unzdtggyopn1fl7sx68b8olxr&encryptionInfo=37cde59cfa3384c84d9bf7545be348bc880c79bd HTTP/1.1\nContent-Type: application/x-www-form-urlencoded;charset=UTF-8\nHost: https://api.water.mengyunzhi.com\n```\n\n## 响应结果示例\n```\nHTTP/1.1 200 OK\nContent-Type: application/json;charset=UTF-8\nContent-Length: 2\n   \n20\n```\n\n# isRechargeOk\n是否充值成功\n\n## URL\nhttps://api.water.mengyunzhi.com/isRechargeOk\n\n## 支持格式\nJSON\n\n## HTTP请求方式\nPOST\n\n## \t请求参数\n+ id。类型：Long。说明：净水器编号。\n+ shouldRecharge.。类型：int。说明：应该充值水量。\n+ actualRecharge。类型：int。说明：实际充值水量。\n\n## 请求头信息\n+ timestamp。类型：String。说明：时间戳。\n+ randomString。类型：String。说明：随机生成的字符串。\n+ encryptionInfo。类型：String。将timestamp、randomString、\"mengyunzhi\"进行字符串拼接（格式：timestamp + randomString + \"mengyunzhi\"），并对拼接结果进行sha1加密，生成encryptionInfo。\n\n## 请求示例\n```\nPOST /api/isRechargeOk HTTP/1.1\n\nContent-Type: application/json;charset=UTF-8\nHost: https://api.water.mengyunzhi.com\nTimestamp: 1497457292548\nRandomString: unzdtggyopn1fl7sx68b8olxr\nEncryptionInfo: 37cde59cfa3384c84d9bf7545be348bc880c79bd\n   \n{\n\t\"id\": 1,\n\t\"shouldRecharge\": 200,\n\t\"actualRecharge\": 200\n}\n```\n\n## 响应结果示例\n```\nHTTP/1.1 200 OK\n```\n# useInfo\n净水器使用信息\n\n## URL\nhttps://api.water.mengyunzhi.com/useInfo\n\n## 支持格式\nJSON\n\n## HTTP请求方式\nPOST\n\n## \t请求参数\n+ id。类型：Long。说明：净水器编号。\n+ usedBeforeWaterQuality。类型：int。说明：净水前水质。\n+ usedAfterWaterQuality。类型：int。说明：净水后水质。\n+ usedWaterQuantity。类型：int。说明：用水量。\n+ lastInteractTime。类型：Long。说明：上次交互的时间戳。\n\n## 请求头信息\n+ timestamp。类型：String。说明：时间戳。\n+ randomString。类型：String。说明：随机生成的字符串。\n+ encryptionInfo。类型：String。将timestamp、randomString、\"mengyunzhi\"进行字符串拼接（格式：timestamp + randomString + \"mengyunzhi\"），并对拼接结果进行sha1加密，生成encryptionInfo。\n\n## 请求示例\n```\nPOST /api/useInfo HTTP/1.1\nContent-Type: application/json;charset=UTF-8\nHost: https://api.water.mengyunzhi.com\nTimestamp: 1497457292548\nRandomString: unzdtggyopn1fl7sx68b8olxr\nEncryptionInfo: 37cde59cfa3384c84d9bf7545be348bc880c79bd\n   \n{\n\t\"id\": \"1\",\n\t\"usedBeforeWaterQuality\": 200,\n\t\"usedAfterWaterQuality\": 2030,\n\t\"usedWaterQuantity\": 2200,\n\t\"lastInteractTime\": 1497457292548\n}\t\n```\n\n## 响应结果示例\n```\nHTTP/1.1 200 OK\n```","slug":"WaterPurifier-API","published":1,"updated":"2017-07-30T06:37:57.341Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2en1000mnpjxf44lclbr","content":"<p>净水器方提供API接口，负责处理单个净水器的请求信息。如获取充值信息，用户使用饮水机信息等。</p>\n<a id=\"more\"></a>\n<h1 id=\"API列表\"><a href=\"#API列表\" class=\"headerlink\" title=\"API列表\"></a>API列表</h1><ul>\n<li><a href=\"./#getCurrentTime\">getCurrentTime</a>  ，获取服务器当前时间</li>\n<li><a href=\"./#getRechargeInfo\">getRechargeInfo</a> ， 获取充值信息</li>\n<li><a href=\"./#isRechargeOk\">isRechargeOk</a>  ，是否充值成功</li>\n<li><a href=\"./#useInfo\">useInfo</a> ，净水器使用信息</li>\n</ul>\n<h1 id=\"getCurrentTime\"><a href=\"#getCurrentTime\" class=\"headerlink\" title=\"getCurrentTime\"></a>getCurrentTime</h1><p>获取服务器当前时间</p>\n<h2 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h2><p><a href=\"https://api.water.mengyunzhi.com/getCurrentTime\" target=\"_blank\" rel=\"external\">https://api.water.mengyunzhi.com/getCurrentTime</a> </p>\n<h2 id=\"支持格式\"><a href=\"#支持格式\" class=\"headerlink\" title=\"支持格式\"></a>支持格式</h2><p>JSON</p>\n<h2 id=\"HTTP请求方式\"><a href=\"#HTTP请求方式\" class=\"headerlink\" title=\"HTTP请求方式\"></a>HTTP请求方式</h2><p>GET</p>\n<h2 id=\"请求参数\"><a href=\"#请求参数\" class=\"headerlink\" title=\"请求参数\"></a>请求参数</h2><p>无</p>\n<h2 id=\"请求示例\"><a href=\"#请求示例\" class=\"headerlink\" title=\"请求示例\"></a>请求示例</h2><figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">GET</span> <span class=\"string\">/api/getCurrentTime</span> HTTP/1.1</div><div class=\"line\"><span class=\"attribute\">Content-Type</span>: application/x-www-form-urlencoded;charset=UTF-8</div><div class=\"line\"><span class=\"attribute\">Host</span>: https://api.water.mengyunzhi.com</div></pre></td></tr></table></figure>\n<h2 id=\"响应结果示例\"><a href=\"#响应结果示例\" class=\"headerlink\" title=\"响应结果示例\"></a>响应结果示例</h2><figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">HTTP/1.1 <span class=\"number\">200</span> OK</div><div class=\"line\"><span class=\"attribute\">Content-Type</span>: text/plain;charset=ISO-8859-1</div><div class=\"line\"><span class=\"attribute\">Content-Length</span>: 10</div><div class=\"line\">  </div><div class=\"line\"><span class=\"attribute\">1498891791</span></div></pre></td></tr></table></figure>\n<h1 id=\"getRechargeInfo\"><a href=\"#getRechargeInfo\" class=\"headerlink\" title=\"getRechargeInfo\"></a>getRechargeInfo</h1><p>获取充值水量</p>\n<h2 id=\"URL-1\"><a href=\"#URL-1\" class=\"headerlink\" title=\"URL\"></a>URL</h2><p><a href=\"https://api.water.mengyunzhi.com/getRechargeInfo\" target=\"_blank\" rel=\"external\">https://api.water.mengyunzhi.com/getRechargeInfo</a></p>\n<h2 id=\"支持格式-1\"><a href=\"#支持格式-1\" class=\"headerlink\" title=\"支持格式\"></a>支持格式</h2><p>JSON</p>\n<h2 id=\"HTTP请求方式-1\"><a href=\"#HTTP请求方式-1\" class=\"headerlink\" title=\"HTTP请求方式\"></a>HTTP请求方式</h2><p>GET</p>\n<h2 id=\"请求参数-1\"><a href=\"#请求参数-1\" class=\"headerlink\" title=\"请求参数\"></a>请求参数</h2><ul>\n<li>id。类型：Long。说明：净水器编号。</li>\n<li>timestamp。类型：String。说明：时间戳。</li>\n<li>randomString。类型：String。说明：随机生成的字符串。</li>\n<li>encryptionInfo。类型：String。将timestamp、randomString、”mengyunzhi”进行字符串拼接（格式：timestamp + randomString + “mengyunzhi”），并对拼接结果进行sha1加密，生成encryptionInfo。</li>\n</ul>\n<h2 id=\"请求示例-1\"><a href=\"#请求示例-1\" class=\"headerlink\" title=\"请求示例\"></a>请求示例</h2><figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">GET</span> <span class=\"string\">/api/getRechargeInfo?id=23213&amp;timestamp=1497457292548&amp;randomString=unzdtggyopn1fl7sx68b8olxr&amp;encryptionInfo=37cde59cfa3384c84d9bf7545be348bc880c79bd</span> HTTP/1.1</div><div class=\"line\"><span class=\"attribute\">Content-Type</span>: application/x-www-form-urlencoded;charset=UTF-8</div><div class=\"line\"><span class=\"attribute\">Host</span>: https://api.water.mengyunzhi.com</div></pre></td></tr></table></figure>\n<h2 id=\"响应结果示例-1\"><a href=\"#响应结果示例-1\" class=\"headerlink\" title=\"响应结果示例\"></a>响应结果示例</h2><figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">HTTP/1.1 <span class=\"number\">200</span> OK</div><div class=\"line\"><span class=\"attribute\">Content-Type</span>: application/json;charset=UTF-8</div><div class=\"line\"><span class=\"attribute\">Content-Length</span>: 2</div><div class=\"line\">   </div><div class=\"line\"><span class=\"attribute\">20</span></div></pre></td></tr></table></figure>\n<h1 id=\"isRechargeOk\"><a href=\"#isRechargeOk\" class=\"headerlink\" title=\"isRechargeOk\"></a>isRechargeOk</h1><p>是否充值成功</p>\n<h2 id=\"URL-2\"><a href=\"#URL-2\" class=\"headerlink\" title=\"URL\"></a>URL</h2><p><a href=\"https://api.water.mengyunzhi.com/isRechargeOk\" target=\"_blank\" rel=\"external\">https://api.water.mengyunzhi.com/isRechargeOk</a></p>\n<h2 id=\"支持格式-2\"><a href=\"#支持格式-2\" class=\"headerlink\" title=\"支持格式\"></a>支持格式</h2><p>JSON</p>\n<h2 id=\"HTTP请求方式-2\"><a href=\"#HTTP请求方式-2\" class=\"headerlink\" title=\"HTTP请求方式\"></a>HTTP请求方式</h2><p>POST</p>\n<h2 id=\"请求参数-2\"><a href=\"#请求参数-2\" class=\"headerlink\" title=\"请求参数\"></a>请求参数</h2><ul>\n<li>id。类型：Long。说明：净水器编号。</li>\n<li>shouldRecharge.。类型：int。说明：应该充值水量。</li>\n<li>actualRecharge。类型：int。说明：实际充值水量。</li>\n</ul>\n<h2 id=\"请求头信息\"><a href=\"#请求头信息\" class=\"headerlink\" title=\"请求头信息\"></a>请求头信息</h2><ul>\n<li>timestamp。类型：String。说明：时间戳。</li>\n<li>randomString。类型：String。说明：随机生成的字符串。</li>\n<li>encryptionInfo。类型：String。将timestamp、randomString、”mengyunzhi”进行字符串拼接（格式：timestamp + randomString + “mengyunzhi”），并对拼接结果进行sha1加密，生成encryptionInfo。</li>\n</ul>\n<h2 id=\"请求示例-2\"><a href=\"#请求示例-2\" class=\"headerlink\" title=\"请求示例\"></a>请求示例</h2><figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">POST</span> <span class=\"string\">/api/isRechargeOk</span> HTTP/1.1</div><div class=\"line\"></div><div class=\"line\"><span class=\"groovy\">Content-<span class=\"string\">Type:</span> application/json;charset=UTF<span class=\"number\">-8</span></span></div><div class=\"line\"><span class=\"string\">Host:</span> <span class=\"string\">https:</span><span class=\"comment\">//api.water.mengyunzhi.com</span></div><div class=\"line\"><span class=\"string\">Timestamp:</span> <span class=\"number\">1497457292548</span></div><div class=\"line\"><span class=\"string\">RandomString:</span> unzdtggyopn1fl7sx68b8olxr</div><div class=\"line\"><span class=\"string\">EncryptionInfo:</span> <span class=\"number\">37</span>cde59cfa3384c84d9bf7545be348bc880c79bd</div><div class=\"line\">   </div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"string\">\"id\"</span>: <span class=\"number\">1</span>,</div><div class=\"line\">\t<span class=\"string\">\"shouldRecharge\"</span>: <span class=\"number\">200</span>,</div><div class=\"line\">\t<span class=\"string\">\"actualRecharge\"</span>: <span class=\"number\">200</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"响应结果示例-2\"><a href=\"#响应结果示例-2\" class=\"headerlink\" title=\"响应结果示例\"></a>响应结果示例</h2><figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">HTTP/1.1 <span class=\"number\">200</span> OK</div></pre></td></tr></table></figure>\n<h1 id=\"useInfo\"><a href=\"#useInfo\" class=\"headerlink\" title=\"useInfo\"></a>useInfo</h1><p>净水器使用信息</p>\n<h2 id=\"URL-3\"><a href=\"#URL-3\" class=\"headerlink\" title=\"URL\"></a>URL</h2><p><a href=\"https://api.water.mengyunzhi.com/useInfo\" target=\"_blank\" rel=\"external\">https://api.water.mengyunzhi.com/useInfo</a></p>\n<h2 id=\"支持格式-3\"><a href=\"#支持格式-3\" class=\"headerlink\" title=\"支持格式\"></a>支持格式</h2><p>JSON</p>\n<h2 id=\"HTTP请求方式-3\"><a href=\"#HTTP请求方式-3\" class=\"headerlink\" title=\"HTTP请求方式\"></a>HTTP请求方式</h2><p>POST</p>\n<h2 id=\"请求参数-3\"><a href=\"#请求参数-3\" class=\"headerlink\" title=\"请求参数\"></a>请求参数</h2><ul>\n<li>id。类型：Long。说明：净水器编号。</li>\n<li>usedBeforeWaterQuality。类型：int。说明：净水前水质。</li>\n<li>usedAfterWaterQuality。类型：int。说明：净水后水质。</li>\n<li>usedWaterQuantity。类型：int。说明：用水量。</li>\n<li>lastInteractTime。类型：Long。说明：上次交互的时间戳。</li>\n</ul>\n<h2 id=\"请求头信息-1\"><a href=\"#请求头信息-1\" class=\"headerlink\" title=\"请求头信息\"></a>请求头信息</h2><ul>\n<li>timestamp。类型：String。说明：时间戳。</li>\n<li>randomString。类型：String。说明：随机生成的字符串。</li>\n<li>encryptionInfo。类型：String。将timestamp、randomString、”mengyunzhi”进行字符串拼接（格式：timestamp + randomString + “mengyunzhi”），并对拼接结果进行sha1加密，生成encryptionInfo。</li>\n</ul>\n<h2 id=\"请求示例-3\"><a href=\"#请求示例-3\" class=\"headerlink\" title=\"请求示例\"></a>请求示例</h2><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">POST <span class=\"regexp\">/api/</span>useInfo HTTP/<span class=\"number\">1.1</span></div><div class=\"line\">Content-<span class=\"string\">Type:</span> application/json;charset=UTF<span class=\"number\">-8</span></div><div class=\"line\"><span class=\"string\">Host:</span> <span class=\"string\">https:</span><span class=\"comment\">//api.water.mengyunzhi.com</span></div><div class=\"line\"><span class=\"string\">Timestamp:</span> <span class=\"number\">1497457292548</span></div><div class=\"line\"><span class=\"string\">RandomString:</span> unzdtggyopn1fl7sx68b8olxr</div><div class=\"line\"><span class=\"string\">EncryptionInfo:</span> <span class=\"number\">37</span>cde59cfa3384c84d9bf7545be348bc880c79bd</div><div class=\"line\">   </div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"string\">\"id\"</span>: <span class=\"string\">\"1\"</span>,</div><div class=\"line\">\t<span class=\"string\">\"usedBeforeWaterQuality\"</span>: <span class=\"number\">200</span>,</div><div class=\"line\">\t<span class=\"string\">\"usedAfterWaterQuality\"</span>: <span class=\"number\">2030</span>,</div><div class=\"line\">\t<span class=\"string\">\"usedWaterQuantity\"</span>: <span class=\"number\">2200</span>,</div><div class=\"line\">\t<span class=\"string\">\"lastInteractTime\"</span>: <span class=\"number\">1497457292548</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"响应结果示例-3\"><a href=\"#响应结果示例-3\" class=\"headerlink\" title=\"响应结果示例\"></a>响应结果示例</h2><figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">HTTP/1.1 <span class=\"number\">200</span> OK</div></pre></td></tr></table></figure>","excerpt":"<p>净水器方提供API接口，负责处理单个净水器的请求信息。如获取充值信息，用户使用饮水机信息等。</p>","more":"<h1 id=\"API列表\"><a href=\"#API列表\" class=\"headerlink\" title=\"API列表\"></a>API列表</h1><ul>\n<li><a href=\"./#getCurrentTime\">getCurrentTime</a>  ，获取服务器当前时间</li>\n<li><a href=\"./#getRechargeInfo\">getRechargeInfo</a> ， 获取充值信息</li>\n<li><a href=\"./#isRechargeOk\">isRechargeOk</a>  ，是否充值成功</li>\n<li><a href=\"./#useInfo\">useInfo</a> ，净水器使用信息</li>\n</ul>\n<h1 id=\"getCurrentTime\"><a href=\"#getCurrentTime\" class=\"headerlink\" title=\"getCurrentTime\"></a>getCurrentTime</h1><p>获取服务器当前时间</p>\n<h2 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h2><p><a href=\"https://api.water.mengyunzhi.com/getCurrentTime\">https://api.water.mengyunzhi.com/getCurrentTime</a> </p>\n<h2 id=\"支持格式\"><a href=\"#支持格式\" class=\"headerlink\" title=\"支持格式\"></a>支持格式</h2><p>JSON</p>\n<h2 id=\"HTTP请求方式\"><a href=\"#HTTP请求方式\" class=\"headerlink\" title=\"HTTP请求方式\"></a>HTTP请求方式</h2><p>GET</p>\n<h2 id=\"请求参数\"><a href=\"#请求参数\" class=\"headerlink\" title=\"请求参数\"></a>请求参数</h2><p>无</p>\n<h2 id=\"请求示例\"><a href=\"#请求示例\" class=\"headerlink\" title=\"请求示例\"></a>请求示例</h2><figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">GET</span> <span class=\"string\">/api/getCurrentTime</span> HTTP/1.1</div><div class=\"line\"><span class=\"attribute\">Content-Type</span>: application/x-www-form-urlencoded;charset=UTF-8</div><div class=\"line\"><span class=\"attribute\">Host</span>: https://api.water.mengyunzhi.com</div></pre></td></tr></table></figure>\n<h2 id=\"响应结果示例\"><a href=\"#响应结果示例\" class=\"headerlink\" title=\"响应结果示例\"></a>响应结果示例</h2><figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">HTTP/1.1 <span class=\"number\">200</span> OK</div><div class=\"line\"><span class=\"attribute\">Content-Type</span>: text/plain;charset=ISO-8859-1</div><div class=\"line\"><span class=\"attribute\">Content-Length</span>: 10</div><div class=\"line\">  </div><div class=\"line\"><span class=\"attribute\">1498891791</span></div></pre></td></tr></table></figure>\n<h1 id=\"getRechargeInfo\"><a href=\"#getRechargeInfo\" class=\"headerlink\" title=\"getRechargeInfo\"></a>getRechargeInfo</h1><p>获取充值水量</p>\n<h2 id=\"URL-1\"><a href=\"#URL-1\" class=\"headerlink\" title=\"URL\"></a>URL</h2><p><a href=\"https://api.water.mengyunzhi.com/getRechargeInfo\">https://api.water.mengyunzhi.com/getRechargeInfo</a></p>\n<h2 id=\"支持格式-1\"><a href=\"#支持格式-1\" class=\"headerlink\" title=\"支持格式\"></a>支持格式</h2><p>JSON</p>\n<h2 id=\"HTTP请求方式-1\"><a href=\"#HTTP请求方式-1\" class=\"headerlink\" title=\"HTTP请求方式\"></a>HTTP请求方式</h2><p>GET</p>\n<h2 id=\"请求参数-1\"><a href=\"#请求参数-1\" class=\"headerlink\" title=\"请求参数\"></a>请求参数</h2><ul>\n<li>id。类型：Long。说明：净水器编号。</li>\n<li>timestamp。类型：String。说明：时间戳。</li>\n<li>randomString。类型：String。说明：随机生成的字符串。</li>\n<li>encryptionInfo。类型：String。将timestamp、randomString、”mengyunzhi”进行字符串拼接（格式：timestamp + randomString + “mengyunzhi”），并对拼接结果进行sha1加密，生成encryptionInfo。</li>\n</ul>\n<h2 id=\"请求示例-1\"><a href=\"#请求示例-1\" class=\"headerlink\" title=\"请求示例\"></a>请求示例</h2><figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">GET</span> <span class=\"string\">/api/getRechargeInfo?id=23213&amp;timestamp=1497457292548&amp;randomString=unzdtggyopn1fl7sx68b8olxr&amp;encryptionInfo=37cde59cfa3384c84d9bf7545be348bc880c79bd</span> HTTP/1.1</div><div class=\"line\"><span class=\"attribute\">Content-Type</span>: application/x-www-form-urlencoded;charset=UTF-8</div><div class=\"line\"><span class=\"attribute\">Host</span>: https://api.water.mengyunzhi.com</div></pre></td></tr></table></figure>\n<h2 id=\"响应结果示例-1\"><a href=\"#响应结果示例-1\" class=\"headerlink\" title=\"响应结果示例\"></a>响应结果示例</h2><figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">HTTP/1.1 <span class=\"number\">200</span> OK</div><div class=\"line\"><span class=\"attribute\">Content-Type</span>: application/json;charset=UTF-8</div><div class=\"line\"><span class=\"attribute\">Content-Length</span>: 2</div><div class=\"line\">   </div><div class=\"line\"><span class=\"attribute\">20</span></div></pre></td></tr></table></figure>\n<h1 id=\"isRechargeOk\"><a href=\"#isRechargeOk\" class=\"headerlink\" title=\"isRechargeOk\"></a>isRechargeOk</h1><p>是否充值成功</p>\n<h2 id=\"URL-2\"><a href=\"#URL-2\" class=\"headerlink\" title=\"URL\"></a>URL</h2><p><a href=\"https://api.water.mengyunzhi.com/isRechargeOk\">https://api.water.mengyunzhi.com/isRechargeOk</a></p>\n<h2 id=\"支持格式-2\"><a href=\"#支持格式-2\" class=\"headerlink\" title=\"支持格式\"></a>支持格式</h2><p>JSON</p>\n<h2 id=\"HTTP请求方式-2\"><a href=\"#HTTP请求方式-2\" class=\"headerlink\" title=\"HTTP请求方式\"></a>HTTP请求方式</h2><p>POST</p>\n<h2 id=\"请求参数-2\"><a href=\"#请求参数-2\" class=\"headerlink\" title=\"请求参数\"></a>请求参数</h2><ul>\n<li>id。类型：Long。说明：净水器编号。</li>\n<li>shouldRecharge.。类型：int。说明：应该充值水量。</li>\n<li>actualRecharge。类型：int。说明：实际充值水量。</li>\n</ul>\n<h2 id=\"请求头信息\"><a href=\"#请求头信息\" class=\"headerlink\" title=\"请求头信息\"></a>请求头信息</h2><ul>\n<li>timestamp。类型：String。说明：时间戳。</li>\n<li>randomString。类型：String。说明：随机生成的字符串。</li>\n<li>encryptionInfo。类型：String。将timestamp、randomString、”mengyunzhi”进行字符串拼接（格式：timestamp + randomString + “mengyunzhi”），并对拼接结果进行sha1加密，生成encryptionInfo。</li>\n</ul>\n<h2 id=\"请求示例-2\"><a href=\"#请求示例-2\" class=\"headerlink\" title=\"请求示例\"></a>请求示例</h2><figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">POST</span> <span class=\"string\">/api/isRechargeOk</span> HTTP/1.1</div><div class=\"line\"></div><div class=\"line\"><span class=\"groovy\">Content-<span class=\"string\">Type:</span> application/json;charset=UTF<span class=\"number\">-8</span></div><div class=\"line\"><span class=\"string\">Host:</span> <span class=\"string\">https:</span><span class=\"comment\">//api.water.mengyunzhi.com</span></div><div class=\"line\"><span class=\"string\">Timestamp:</span> <span class=\"number\">1497457292548</span></div><div class=\"line\"><span class=\"string\">RandomString:</span> unzdtggyopn1fl7sx68b8olxr</div><div class=\"line\"><span class=\"string\">EncryptionInfo:</span> <span class=\"number\">37</span>cde59cfa3384c84d9bf7545be348bc880c79bd</div><div class=\"line\">   </div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"string\">\"id\"</span>: <span class=\"number\">1</span>,</div><div class=\"line\">\t<span class=\"string\">\"shouldRecharge\"</span>: <span class=\"number\">200</span>,</div><div class=\"line\">\t<span class=\"string\">\"actualRecharge\"</span>: <span class=\"number\">200</span></div><div class=\"line\">&#125;</span></div></pre></td></tr></table></figure>\n<h2 id=\"响应结果示例-2\"><a href=\"#响应结果示例-2\" class=\"headerlink\" title=\"响应结果示例\"></a>响应结果示例</h2><figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">HTTP/1.1 <span class=\"number\">200</span> OK</div></pre></td></tr></table></figure>\n<h1 id=\"useInfo\"><a href=\"#useInfo\" class=\"headerlink\" title=\"useInfo\"></a>useInfo</h1><p>净水器使用信息</p>\n<h2 id=\"URL-3\"><a href=\"#URL-3\" class=\"headerlink\" title=\"URL\"></a>URL</h2><p><a href=\"https://api.water.mengyunzhi.com/useInfo\">https://api.water.mengyunzhi.com/useInfo</a></p>\n<h2 id=\"支持格式-3\"><a href=\"#支持格式-3\" class=\"headerlink\" title=\"支持格式\"></a>支持格式</h2><p>JSON</p>\n<h2 id=\"HTTP请求方式-3\"><a href=\"#HTTP请求方式-3\" class=\"headerlink\" title=\"HTTP请求方式\"></a>HTTP请求方式</h2><p>POST</p>\n<h2 id=\"请求参数-3\"><a href=\"#请求参数-3\" class=\"headerlink\" title=\"请求参数\"></a>请求参数</h2><ul>\n<li>id。类型：Long。说明：净水器编号。</li>\n<li>usedBeforeWaterQuality。类型：int。说明：净水前水质。</li>\n<li>usedAfterWaterQuality。类型：int。说明：净水后水质。</li>\n<li>usedWaterQuantity。类型：int。说明：用水量。</li>\n<li>lastInteractTime。类型：Long。说明：上次交互的时间戳。</li>\n</ul>\n<h2 id=\"请求头信息-1\"><a href=\"#请求头信息-1\" class=\"headerlink\" title=\"请求头信息\"></a>请求头信息</h2><ul>\n<li>timestamp。类型：String。说明：时间戳。</li>\n<li>randomString。类型：String。说明：随机生成的字符串。</li>\n<li>encryptionInfo。类型：String。将timestamp、randomString、”mengyunzhi”进行字符串拼接（格式：timestamp + randomString + “mengyunzhi”），并对拼接结果进行sha1加密，生成encryptionInfo。</li>\n</ul>\n<h2 id=\"请求示例-3\"><a href=\"#请求示例-3\" class=\"headerlink\" title=\"请求示例\"></a>请求示例</h2><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">POST <span class=\"regexp\">/api/</span>useInfo HTTP/<span class=\"number\">1.1</span></div><div class=\"line\">Content-<span class=\"string\">Type:</span> application/json;charset=UTF<span class=\"number\">-8</span></div><div class=\"line\"><span class=\"string\">Host:</span> <span class=\"string\">https:</span><span class=\"comment\">//api.water.mengyunzhi.com</span></div><div class=\"line\"><span class=\"string\">Timestamp:</span> <span class=\"number\">1497457292548</span></div><div class=\"line\"><span class=\"string\">RandomString:</span> unzdtggyopn1fl7sx68b8olxr</div><div class=\"line\"><span class=\"string\">EncryptionInfo:</span> <span class=\"number\">37</span>cde59cfa3384c84d9bf7545be348bc880c79bd</div><div class=\"line\">   </div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"string\">\"id\"</span>: <span class=\"string\">\"1\"</span>,</div><div class=\"line\">\t<span class=\"string\">\"usedBeforeWaterQuality\"</span>: <span class=\"number\">200</span>,</div><div class=\"line\">\t<span class=\"string\">\"usedAfterWaterQuality\"</span>: <span class=\"number\">2030</span>,</div><div class=\"line\">\t<span class=\"string\">\"usedWaterQuantity\"</span>: <span class=\"number\">2200</span>,</div><div class=\"line\">\t<span class=\"string\">\"lastInteractTime\"</span>: <span class=\"number\">1497457292548</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"响应结果示例-3\"><a href=\"#响应结果示例-3\" class=\"headerlink\" title=\"响应结果示例\"></a>响应结果示例</h2><figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">HTTP/1.1 <span class=\"number\">200</span> OK</div></pre></td></tr></table></figure>"},{"title":"angular+thinkphp上传图片","date":"2017-05-13T01:51:34.000Z","_content":"\n最近做的项目中需要用到图片上传功能，决定使用angular+thinkphp实现图片上传功能。尝试了ng-flow、ng-file-upload，都没有达到理想的效果，最终使用angular-file-upload实现。\n\n<!--more-->\n\n效果如下：\n\n<video src='http://oligray7m.bkt.clouddn.com/1490257478069.mp4 ' type='video/mp4' controls='controls'  width='100%' height='100%'>\n</video>\n\n##  实现流程\n+ 获取图片信息\n+ 将图片移至指定的目录下\n+ 将图片的信息保存到数据库中\n\n## 具体细节\n下载插件示例代码，插件的示例代码非常完善，图片的缩略图功能、进度展示、图片尺寸等信息示例代码中都有，并且每一个操作的返回值也都给出了，使用非常方便。\n将相关资源引入，上传的样式即可实现。修改路由信息，当用户点击上传按钮时，调用请求的方法，讲图片保存，并返回图片id，点击提交按钮，将图片id存入对应的模块中。\n\n\n\n\n对应的时序图如下(新增和编辑)：\n![时序图](http://oligray7m.bkt.clouddn.com/RJH2OW2@MXSUE1FGO64YV7S.png) \n\n如有错误，欢迎指正！","source":"_posts/angular-thinkphp上传图片.md","raw":"---\ntitle: angular+thinkphp上传图片\ntags:  demo\ndate: 2017-05-13 09:51:34\ncategories:  [angularjs]\n---\n\n最近做的项目中需要用到图片上传功能，决定使用angular+thinkphp实现图片上传功能。尝试了ng-flow、ng-file-upload，都没有达到理想的效果，最终使用angular-file-upload实现。\n\n<!--more-->\n\n效果如下：\n\n<video src='http://oligray7m.bkt.clouddn.com/1490257478069.mp4 ' type='video/mp4' controls='controls'  width='100%' height='100%'>\n</video>\n\n##  实现流程\n+ 获取图片信息\n+ 将图片移至指定的目录下\n+ 将图片的信息保存到数据库中\n\n## 具体细节\n下载插件示例代码，插件的示例代码非常完善，图片的缩略图功能、进度展示、图片尺寸等信息示例代码中都有，并且每一个操作的返回值也都给出了，使用非常方便。\n将相关资源引入，上传的样式即可实现。修改路由信息，当用户点击上传按钮时，调用请求的方法，讲图片保存，并返回图片id，点击提交按钮，将图片id存入对应的模块中。\n\n\n\n\n对应的时序图如下(新增和编辑)：\n![时序图](http://oligray7m.bkt.clouddn.com/RJH2OW2@MXSUE1FGO64YV7S.png) \n\n如有错误，欢迎指正！","slug":"angular-thinkphp上传图片","published":1,"updated":"2017-07-30T02:24:28.038Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2en2000pnpjxljnn4tsd","content":"<p>最近做的项目中需要用到图片上传功能，决定使用angular+thinkphp实现图片上传功能。尝试了ng-flow、ng-file-upload，都没有达到理想的效果，最终使用angular-file-upload实现。</p>\n<a id=\"more\"></a>\n<p>效果如下：</p>\n<video src=\"http://oligray7m.bkt.clouddn.com/1490257478069.mp4 \" type=\"video/mp4\" controls=\"controls\" width=\"100%\" height=\"100%\"><br></video>\n\n<h2 id=\"实现流程\"><a href=\"#实现流程\" class=\"headerlink\" title=\"实现流程\"></a>实现流程</h2><ul>\n<li>获取图片信息</li>\n<li>将图片移至指定的目录下</li>\n<li>将图片的信息保存到数据库中</li>\n</ul>\n<h2 id=\"具体细节\"><a href=\"#具体细节\" class=\"headerlink\" title=\"具体细节\"></a>具体细节</h2><p>下载插件示例代码，插件的示例代码非常完善，图片的缩略图功能、进度展示、图片尺寸等信息示例代码中都有，并且每一个操作的返回值也都给出了，使用非常方便。<br>将相关资源引入，上传的样式即可实现。修改路由信息，当用户点击上传按钮时，调用请求的方法，讲图片保存，并返回图片id，点击提交按钮，将图片id存入对应的模块中。</p>\n<p>对应的时序图如下(新增和编辑)：<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://oligray7m.bkt.clouddn.com/RJH2OW2@MXSUE1FGO64YV7S.png\" alt=\"时序图\" title=\"\">\n                </div>\n                <div class=\"image-caption\">时序图</div>\n            </figure> </p>\n<p>如有错误，欢迎指正！</p>\n","excerpt":"<p>最近做的项目中需要用到图片上传功能，决定使用angular+thinkphp实现图片上传功能。尝试了ng-flow、ng-file-upload，都没有达到理想的效果，最终使用angular-file-upload实现。</p>","more":"<p>效果如下：</p>\n<video src='http://oligray7m.bkt.clouddn.com/1490257478069.mp4 ' type='video/mp4' controls='controls'  width='100%' height='100%'><br></video>\n\n<h2 id=\"实现流程\"><a href=\"#实现流程\" class=\"headerlink\" title=\"实现流程\"></a>实现流程</h2><ul>\n<li>获取图片信息</li>\n<li>将图片移至指定的目录下</li>\n<li>将图片的信息保存到数据库中</li>\n</ul>\n<h2 id=\"具体细节\"><a href=\"#具体细节\" class=\"headerlink\" title=\"具体细节\"></a>具体细节</h2><p>下载插件示例代码，插件的示例代码非常完善，图片的缩略图功能、进度展示、图片尺寸等信息示例代码中都有，并且每一个操作的返回值也都给出了，使用非常方便。<br>将相关资源引入，上传的样式即可实现。修改路由信息，当用户点击上传按钮时，调用请求的方法，讲图片保存，并返回图片id，点击提交按钮，将图片id存入对应的模块中。</p>\n<p>对应的时序图如下(新增和编辑)：<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://oligray7m.bkt.clouddn.com/RJH2OW2@MXSUE1FGO64YV7S.png\" alt=\"时序图\" title=\"\">\n                </div>\n                <div class=\"image-caption\">时序图</div>\n            </figure> </p>\n<p>如有错误，欢迎指正！</p>"},{"title":"css浮动流实战","date":"2017-06-03T14:47:22.000Z","_content":"\n前两天看了一个很赞的css浮动流的[教程](http://www.cnblogs.com/iyangyuan/archive/2013/03/27/2983813.html) ，并对应教程实现了代码，但是仅限于理论的层面 ，今天有了实战的机会，本文将问题界面录制成视频，并以解决视频中的bug作为切入点，学习css浮动流。\n\n<!--more-->\n\n问题界面如下：\n\n<video src='http://oligray7m.bkt.clouddn.com/1496562936371.mp4 ' type='video/mp4' controls='controls'  width='100%' height='100%'>\n</video>\n\n## 要解决的问题\n随着屏幕缩放比例的改变，video中菜单位置在改变。当屏幕比例为150%，每一个菜单占一行，占据多行。当屏幕比例为65%——75%时，菜单位于顶部。而我们的目标是当屏幕缩放比例超过150%时，隐藏菜单。当屏幕缩放比例小于150%时，位置背景图片底部，保持不变。\n\n## 问题还原\ndiv是块状元素，每一个盒子在页面中时独占一行的。很明显，以上三个盒子并不是独占一行，所以，这三个盒子都是浮动的。\n+ 当屏幕缩放为25%——50%和80%——125&时，三个盒子是这样的\n<img src=\"/images/选区_036.png\" >\ndiv1、div2是左浮动， div3是右浮动，但是由于屏幕宽度不够，所以div3向下移动一行。div1、div2占据第一行，div3占据第二行。效果正常。\n\n+ 当屏幕缩放为67%——75%时\n<img src=\"/images/选区_037.png\" >\n右键查看元素，查看屏幕宽度，此时屏幕的宽度时1714——1929，也就是说，此时，这三个盒子的宽度之和小于屏幕的宽度，所以这三个盒子都在页面的第一行，也就使菜单浮动到了屏幕的右上角。\n> 解决方案就是增加div2的宽度，因为每个人的屏幕大小可能不一样，因此使用百分比，使得div3向下移动一行。\n\n\n+ 当屏幕为150%以上时\n<img src=\"/images/选区_038.png\" >\n此时三个盒子都是右浮动，此时屏幕宽度小于857px,字体过大，笔者使用 [@media 查询](http://www.runoob.com/cssref/css3-pr-mediaquery.html)  ，讲菜单隐藏。当然，也可以使用bootstrap响应式导航显示菜单。\n\n## 总结\n书写css代码时，当遇到页面布局的问题时，应当及时打开控制台，观察各个盒子之间的关系，搞清楚盒子是不是浮动的，理性的分析原因。\n","source":"_posts/css浮动流代码实现及实例讲解.md","raw":"---\ntitle: css浮动流实战\ndate: 2017-06-03 22:47:22\ntags: [浮动, 实战]\ncategories: css\n---\n\n前两天看了一个很赞的css浮动流的[教程](http://www.cnblogs.com/iyangyuan/archive/2013/03/27/2983813.html) ，并对应教程实现了代码，但是仅限于理论的层面 ，今天有了实战的机会，本文将问题界面录制成视频，并以解决视频中的bug作为切入点，学习css浮动流。\n\n<!--more-->\n\n问题界面如下：\n\n<video src='http://oligray7m.bkt.clouddn.com/1496562936371.mp4 ' type='video/mp4' controls='controls'  width='100%' height='100%'>\n</video>\n\n## 要解决的问题\n随着屏幕缩放比例的改变，video中菜单位置在改变。当屏幕比例为150%，每一个菜单占一行，占据多行。当屏幕比例为65%——75%时，菜单位于顶部。而我们的目标是当屏幕缩放比例超过150%时，隐藏菜单。当屏幕缩放比例小于150%时，位置背景图片底部，保持不变。\n\n## 问题还原\ndiv是块状元素，每一个盒子在页面中时独占一行的。很明显，以上三个盒子并不是独占一行，所以，这三个盒子都是浮动的。\n+ 当屏幕缩放为25%——50%和80%——125&时，三个盒子是这样的\n<img src=\"/images/选区_036.png\" >\ndiv1、div2是左浮动， div3是右浮动，但是由于屏幕宽度不够，所以div3向下移动一行。div1、div2占据第一行，div3占据第二行。效果正常。\n\n+ 当屏幕缩放为67%——75%时\n<img src=\"/images/选区_037.png\" >\n右键查看元素，查看屏幕宽度，此时屏幕的宽度时1714——1929，也就是说，此时，这三个盒子的宽度之和小于屏幕的宽度，所以这三个盒子都在页面的第一行，也就使菜单浮动到了屏幕的右上角。\n> 解决方案就是增加div2的宽度，因为每个人的屏幕大小可能不一样，因此使用百分比，使得div3向下移动一行。\n\n\n+ 当屏幕为150%以上时\n<img src=\"/images/选区_038.png\" >\n此时三个盒子都是右浮动，此时屏幕宽度小于857px,字体过大，笔者使用 [@media 查询](http://www.runoob.com/cssref/css3-pr-mediaquery.html)  ，讲菜单隐藏。当然，也可以使用bootstrap响应式导航显示菜单。\n\n## 总结\n书写css代码时，当遇到页面布局的问题时，应当及时打开控制台，观察各个盒子之间的关系，搞清楚盒子是不是浮动的，理性的分析原因。\n","slug":"css浮动流代码实现及实例讲解","published":1,"updated":"2017-06-04T13:42:16.692Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2en7000unpjx8m6ystiw","content":"<p>前两天看了一个很赞的css浮动流的<a href=\"http://www.cnblogs.com/iyangyuan/archive/2013/03/27/2983813.html\" target=\"_blank\" rel=\"external\">教程</a> ，并对应教程实现了代码，但是仅限于理论的层面 ，今天有了实战的机会，本文将问题界面录制成视频，并以解决视频中的bug作为切入点，学习css浮动流。</p>\n<a id=\"more\"></a>\n<p>问题界面如下：</p>\n<video src=\"http://oligray7m.bkt.clouddn.com/1496562936371.mp4 \" type=\"video/mp4\" controls=\"controls\" width=\"100%\" height=\"100%\"><br></video>\n\n<h2 id=\"要解决的问题\"><a href=\"#要解决的问题\" class=\"headerlink\" title=\"要解决的问题\"></a>要解决的问题</h2><p>随着屏幕缩放比例的改变，video中菜单位置在改变。当屏幕比例为150%，每一个菜单占一行，占据多行。当屏幕比例为65%——75%时，菜单位于顶部。而我们的目标是当屏幕缩放比例超过150%时，隐藏菜单。当屏幕缩放比例小于150%时，位置背景图片底部，保持不变。</p>\n<h2 id=\"问题还原\"><a href=\"#问题还原\" class=\"headerlink\" title=\"问题还原\"></a>问题还原</h2><p>div是块状元素，每一个盒子在页面中时独占一行的。很明显，以上三个盒子并不是独占一行，所以，这三个盒子都是浮动的。</p>\n<ul>\n<li><p>当屏幕缩放为25%——50%和80%——125&amp;时，三个盒子是这样的<br><img src=\"/images/选区_036.png\"><br>div1、div2是左浮动， div3是右浮动，但是由于屏幕宽度不够，所以div3向下移动一行。div1、div2占据第一行，div3占据第二行。效果正常。</p>\n</li>\n<li><p>当屏幕缩放为67%——75%时<br><img src=\"/images/选区_037.png\"><br>右键查看元素，查看屏幕宽度，此时屏幕的宽度时1714——1929，也就是说，此时，这三个盒子的宽度之和小于屏幕的宽度，所以这三个盒子都在页面的第一行，也就使菜单浮动到了屏幕的右上角。</p>\n<blockquote>\n<p>解决方案就是增加div2的宽度，因为每个人的屏幕大小可能不一样，因此使用百分比，使得div3向下移动一行。</p>\n</blockquote>\n</li>\n</ul>\n<ul>\n<li>当屏幕为150%以上时<br><img src=\"/images/选区_038.png\"><br>此时三个盒子都是右浮动，此时屏幕宽度小于857px,字体过大，笔者使用 <a href=\"http://www.runoob.com/cssref/css3-pr-mediaquery.html\" target=\"_blank\" rel=\"external\">@media 查询</a>  ，讲菜单隐藏。当然，也可以使用bootstrap响应式导航显示菜单。</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>书写css代码时，当遇到页面布局的问题时，应当及时打开控制台，观察各个盒子之间的关系，搞清楚盒子是不是浮动的，理性的分析原因。</p>\n","excerpt":"<p>前两天看了一个很赞的css浮动流的<a href=\"http://www.cnblogs.com/iyangyuan/archive/2013/03/27/2983813.html\">教程</a> ，并对应教程实现了代码，但是仅限于理论的层面 ，今天有了实战的机会，本文将问题界面录制成视频，并以解决视频中的bug作为切入点，学习css浮动流。</p>","more":"<p>问题界面如下：</p>\n<video src='http://oligray7m.bkt.clouddn.com/1496562936371.mp4 ' type='video/mp4' controls='controls'  width='100%' height='100%'><br></video>\n\n<h2 id=\"要解决的问题\"><a href=\"#要解决的问题\" class=\"headerlink\" title=\"要解决的问题\"></a>要解决的问题</h2><p>随着屏幕缩放比例的改变，video中菜单位置在改变。当屏幕比例为150%，每一个菜单占一行，占据多行。当屏幕比例为65%——75%时，菜单位于顶部。而我们的目标是当屏幕缩放比例超过150%时，隐藏菜单。当屏幕缩放比例小于150%时，位置背景图片底部，保持不变。</p>\n<h2 id=\"问题还原\"><a href=\"#问题还原\" class=\"headerlink\" title=\"问题还原\"></a>问题还原</h2><p>div是块状元素，每一个盒子在页面中时独占一行的。很明显，以上三个盒子并不是独占一行，所以，这三个盒子都是浮动的。</p>\n<ul>\n<li><p>当屏幕缩放为25%——50%和80%——125&amp;时，三个盒子是这样的<br><img src=\"/images/选区_036.png\" ><br>div1、div2是左浮动， div3是右浮动，但是由于屏幕宽度不够，所以div3向下移动一行。div1、div2占据第一行，div3占据第二行。效果正常。</p>\n</li>\n<li><p>当屏幕缩放为67%——75%时<br><img src=\"/images/选区_037.png\" ><br>右键查看元素，查看屏幕宽度，此时屏幕的宽度时1714——1929，也就是说，此时，这三个盒子的宽度之和小于屏幕的宽度，所以这三个盒子都在页面的第一行，也就使菜单浮动到了屏幕的右上角。</p>\n<blockquote>\n<p>解决方案就是增加div2的宽度，因为每个人的屏幕大小可能不一样，因此使用百分比，使得div3向下移动一行。</p>\n</blockquote>\n</li>\n</ul>\n<ul>\n<li>当屏幕为150%以上时<br><img src=\"/images/选区_038.png\" ><br>此时三个盒子都是右浮动，此时屏幕宽度小于857px,字体过大，笔者使用 <a href=\"http://www.runoob.com/cssref/css3-pr-mediaquery.html\">@media 查询</a>  ，讲菜单隐藏。当然，也可以使用bootstrap响应式导航显示菜单。</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>书写css代码时，当遇到页面布局的问题时，应当及时打开控制台，观察各个盒子之间的关系，搞清楚盒子是不是浮动的，理性的分析原因。</p>"},{"title":"git常用指令","date":"2017-06-26T14:39:45.000Z","_content":"\n在日常的开发中，经常会用到一些git指令，但是有些git指令不是太常用，用的时候经常忘记，每次都要重新google。于是，就把一些时常会用到的git 指令记录下来，方便以后使用。\n\n<!--more-->\n> 假设以下所有分支名为test\n\n## 删除分支\n+ 删除本地分支``git branch -d test``\n+ 删除远程分支``git branch -r -f  test``，``git push origin :test``\n\n## 查看分支\n+ 查看本地分支 ``git branch``\n+ 查看远程分支和本地分支``git branch -a``\n+ 查看所有远程分支``git branch -r ``\n\n## 新建分支\n+ 新建，但不切换``git branch test``\n+ 新建并且换``git checkout -b test``\n\n## 将代码添加至暂存区并提交\n+ 添加当前目录的所有文件到暂存区``git add ..``\n+ 提交代码``git commit -m 'commit info'``\n\n## 合并分支\n+ 合并分支`` git merge test``\n+ 合并后，如果有冲突，显示冲突文件``git status``\n\n## 其他\n+ 最近5次commit``git log -5 --pretty --oneline``\n+ 切换到某节点``git checkout bd26839``\n+ 新建一个commit，用来撤销指定commit``git revert bd26839``\n+ 撤销上一次的提交，相当于github中的undo操作``git reset HEAD~ ``\n+ 回复上次的提交代码``git revert bd26839``","source":"_posts/git-command.md","raw":"---\ntitle: git常用指令\ndate: 2017-06-26 22:39:45\ntags: [git]\n---\n\n在日常的开发中，经常会用到一些git指令，但是有些git指令不是太常用，用的时候经常忘记，每次都要重新google。于是，就把一些时常会用到的git 指令记录下来，方便以后使用。\n\n<!--more-->\n> 假设以下所有分支名为test\n\n## 删除分支\n+ 删除本地分支``git branch -d test``\n+ 删除远程分支``git branch -r -f  test``，``git push origin :test``\n\n## 查看分支\n+ 查看本地分支 ``git branch``\n+ 查看远程分支和本地分支``git branch -a``\n+ 查看所有远程分支``git branch -r ``\n\n## 新建分支\n+ 新建，但不切换``git branch test``\n+ 新建并且换``git checkout -b test``\n\n## 将代码添加至暂存区并提交\n+ 添加当前目录的所有文件到暂存区``git add ..``\n+ 提交代码``git commit -m 'commit info'``\n\n## 合并分支\n+ 合并分支`` git merge test``\n+ 合并后，如果有冲突，显示冲突文件``git status``\n\n## 其他\n+ 最近5次commit``git log -5 --pretty --oneline``\n+ 切换到某节点``git checkout bd26839``\n+ 新建一个commit，用来撤销指定commit``git revert bd26839``\n+ 撤销上一次的提交，相当于github中的undo操作``git reset HEAD~ ``\n+ 回复上次的提交代码``git revert bd26839``","slug":"git-command","published":1,"updated":"2017-07-30T03:20:38.099Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2en9000wnpjx6puq9wn1","content":"<p>在日常的开发中，经常会用到一些git指令，但是有些git指令不是太常用，用的时候经常忘记，每次都要重新google。于是，就把一些时常会用到的git 指令记录下来，方便以后使用。</p>\n<a id=\"more\"></a>\n<blockquote>\n<p>假设以下所有分支名为test</p>\n</blockquote>\n<h2 id=\"删除分支\"><a href=\"#删除分支\" class=\"headerlink\" title=\"删除分支\"></a>删除分支</h2><ul>\n<li>删除本地分支<code>git branch -d test</code></li>\n<li>删除远程分支<code>git branch -r -f  test</code>，<code>git push origin :test</code></li>\n</ul>\n<h2 id=\"查看分支\"><a href=\"#查看分支\" class=\"headerlink\" title=\"查看分支\"></a>查看分支</h2><ul>\n<li>查看本地分支 <code>git branch</code></li>\n<li>查看远程分支和本地分支<code>git branch -a</code></li>\n<li>查看所有远程分支<code>git branch -r</code></li>\n</ul>\n<h2 id=\"新建分支\"><a href=\"#新建分支\" class=\"headerlink\" title=\"新建分支\"></a>新建分支</h2><ul>\n<li>新建，但不切换<code>git branch test</code></li>\n<li>新建并且换<code>git checkout -b test</code></li>\n</ul>\n<h2 id=\"将代码添加至暂存区并提交\"><a href=\"#将代码添加至暂存区并提交\" class=\"headerlink\" title=\"将代码添加至暂存区并提交\"></a>将代码添加至暂存区并提交</h2><ul>\n<li>添加当前目录的所有文件到暂存区<code>git add ..</code></li>\n<li>提交代码<code>git commit -m &#39;commit info&#39;</code></li>\n</ul>\n<h2 id=\"合并分支\"><a href=\"#合并分支\" class=\"headerlink\" title=\"合并分支\"></a>合并分支</h2><ul>\n<li>合并分支<code>git merge test</code></li>\n<li>合并后，如果有冲突，显示冲突文件<code>git status</code></li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><ul>\n<li>最近5次commit<code>git log -5 --pretty --oneline</code></li>\n<li>切换到某节点<code>git checkout bd26839</code></li>\n<li>新建一个commit，用来撤销指定commit<code>git revert bd26839</code></li>\n<li>撤销上一次的提交，相当于github中的undo操作<code>git reset HEAD~</code></li>\n<li>回复上次的提交代码<code>git revert bd26839</code></li>\n</ul>\n","excerpt":"<p>在日常的开发中，经常会用到一些git指令，但是有些git指令不是太常用，用的时候经常忘记，每次都要重新google。于是，就把一些时常会用到的git 指令记录下来，方便以后使用。</p>","more":"<blockquote>\n<p>假设以下所有分支名为test</p>\n</blockquote>\n<h2 id=\"删除分支\"><a href=\"#删除分支\" class=\"headerlink\" title=\"删除分支\"></a>删除分支</h2><ul>\n<li>删除本地分支<code>git branch -d test</code></li>\n<li>删除远程分支<code>git branch -r -f  test</code>，<code>git push origin :test</code></li>\n</ul>\n<h2 id=\"查看分支\"><a href=\"#查看分支\" class=\"headerlink\" title=\"查看分支\"></a>查看分支</h2><ul>\n<li>查看本地分支 <code>git branch</code></li>\n<li>查看远程分支和本地分支<code>git branch -a</code></li>\n<li>查看所有远程分支<code>git branch -r</code></li>\n</ul>\n<h2 id=\"新建分支\"><a href=\"#新建分支\" class=\"headerlink\" title=\"新建分支\"></a>新建分支</h2><ul>\n<li>新建，但不切换<code>git branch test</code></li>\n<li>新建并且换<code>git checkout -b test</code></li>\n</ul>\n<h2 id=\"将代码添加至暂存区并提交\"><a href=\"#将代码添加至暂存区并提交\" class=\"headerlink\" title=\"将代码添加至暂存区并提交\"></a>将代码添加至暂存区并提交</h2><ul>\n<li>添加当前目录的所有文件到暂存区<code>git add ..</code></li>\n<li>提交代码<code>git commit -m &#39;commit info&#39;</code></li>\n</ul>\n<h2 id=\"合并分支\"><a href=\"#合并分支\" class=\"headerlink\" title=\"合并分支\"></a>合并分支</h2><ul>\n<li>合并分支<code>git merge test</code></li>\n<li>合并后，如果有冲突，显示冲突文件<code>git status</code></li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><ul>\n<li>最近5次commit<code>git log -5 --pretty --oneline</code></li>\n<li>切换到某节点<code>git checkout bd26839</code></li>\n<li>新建一个commit，用来撤销指定commit<code>git revert bd26839</code></li>\n<li>撤销上一次的提交，相当于github中的undo操作<code>git reset HEAD~</code></li>\n<li>回复上次的提交代码<code>git revert bd26839</code></li>\n</ul>"},{"title":"https初步学习之——原理、性能","date":"2017-07-16T01:51:34.000Z","_content":"\n一直听说https比http安全，https 是加过密的http。但是https具体是怎样加[SSL/TLS协议运行机制的概述](http://www.ruanyifeng.com/blog/2014/02/ssl_tls.html) 密认证的？http和https的安全性区别在哪里？https对服务器性能有什么影响？带着这些疑问查阅了相关资料，并记录。\n\n<!--more-->\n\n## \thttp和https的区别\n不使用SSL/TLS的通信，就是我们所说的http通信，有以下三种风险：\n+ 窃听风险（eavesdropping）：第三方可以获知通信内容。\n+ 篡改风险（tampering）：第三方可以修改通信内容。\n+ 冒充风险（pretending）：第三方可以冒充他人身份参与通信。\n\n当我们对http通信使用SSL/TLS协议后，就是我们所说的https通信，希望达到：\n+ 所有信息都是加密传播，第三方无法窃听。\n+ 具有校验机制，一旦被篡改，通信双方会立刻发现。\n+ 配备身份证书，防止身份被冒充。\n\n## https通信过程\n时序图如下\n![](/images/选区_093.png)\n说明：\n+ 步骤1中的证书包含了公钥、颁证机构、网址、过期时间。\n+ 如果服务器端需要客户端提供证书，则会在步骤1中的返回信息中增加一个参数（要求客户端提供证书），那么步骤4中也会增加一个参数（客户端证书）。\n+ 客户端和服务器端生成对称密钥后，之后所有的通信都使用对称秘钥加密。\n\n## 结合实例\n当一个人（小明）登录一个网站后，该网站的服务器会为小明分配一个sessionId，发送给客户端，当小明再次请求这个服务器时，携带着上次分配的sessionId，这样服务器就知道是小明访问的网站了。\n+ 假设这个请求是http请求。那么，第三方就可以获取这个请求的信息，获取sessionId。然后携带着这个sessionId模拟http请求，那么服务器就会认为是小明发送的请求，第三方就可以获取、修改小明的数据等。\n+ 假设这个请求是https请求。同样的，第三方获取到了请求的相关信息，但是并不知道这里面的内容是什么，因为这些数据都是经过加密的。如果别人修改了数据，服务器也会知道这个数据被别人修改了，因为SSL/TLS协议对数据通过hash算法（如sha1、md5）加密，加密结果不一致，就会被认为内容被篡改过了。\n通过上面两个实例，你会不会认为使用https就一定安全呢？如果是，那你就错了。https只能保证内容在传输的过程中不会被别人篡改或者窃取。但是，如果数据在客户端或者服务器端被窃取或者修改，也一样存在风险。\n\n\n## http和https对服务器性能的影响\n网站实现https，国外比较普及，但是在国内很多网站并没有使用https，其中一个比较重要的原因是网站的用户体验和性能下降明。那么使用https对网站的性能到底有多大的影响呢？\n http使用TCP 三次握手建立连接，客户端和服务器需要交换3个包，https除了 TCP 的三个包，还要加上 ssl握手需要的9个包，所以一共是12个包。一个链接测试，http是114毫秒；https建立连接，耗费436毫秒。ssl 部分花费322毫秒。\n你可能会问，每一次请求都需要那么多时间么？答案是否定的，第一次进行https通信时握手阶段生成的对称秘钥后，接下来，客户端与服务器进入加密通信，就完全是使用普通的HTTP协议，只不过用\"会话密钥\"加密内容。\n在[HTTP与HTTPS性能](https://gxnotes.com/article/62484.html) 文章中，提出了具体的优化方案，期待将来有机会在项目实战中使用到。\n\n\n参考文献：\n1. [HTTP 必死：先知 Google 唿吁大家升级 HTTPS， 网页浏览更有保障](https://buzzorange.com/techorange/2015/08/31/https-importance/) \n2. [http 和 https 有何区别？如何灵活使用？](https://www.zhihu.com/question/19577317) \n3. [扒一扒HTTPS网站的内幕](https://blog.wilddog.com/?p=210) \n4. [SSL/TLS协议运行机制的概述](http://www.ruanyifeng.com/blog/2014/02/ssl_tls.html) \n5. [https时序图](https://www.processon.com/view/59292a5ee4b0265ca26f78c9) \n","source":"_posts/http-and-https.md","raw":"---\ntitle: https初步学习之——原理、性能\ndate: 2017-07-16 09:51:34\ntags: [https, 安全, 服务器, 性能]\n---\n\n一直听说https比http安全，https 是加过密的http。但是https具体是怎样加[SSL/TLS协议运行机制的概述](http://www.ruanyifeng.com/blog/2014/02/ssl_tls.html) 密认证的？http和https的安全性区别在哪里？https对服务器性能有什么影响？带着这些疑问查阅了相关资料，并记录。\n\n<!--more-->\n\n## \thttp和https的区别\n不使用SSL/TLS的通信，就是我们所说的http通信，有以下三种风险：\n+ 窃听风险（eavesdropping）：第三方可以获知通信内容。\n+ 篡改风险（tampering）：第三方可以修改通信内容。\n+ 冒充风险（pretending）：第三方可以冒充他人身份参与通信。\n\n当我们对http通信使用SSL/TLS协议后，就是我们所说的https通信，希望达到：\n+ 所有信息都是加密传播，第三方无法窃听。\n+ 具有校验机制，一旦被篡改，通信双方会立刻发现。\n+ 配备身份证书，防止身份被冒充。\n\n## https通信过程\n时序图如下\n![](/images/选区_093.png)\n说明：\n+ 步骤1中的证书包含了公钥、颁证机构、网址、过期时间。\n+ 如果服务器端需要客户端提供证书，则会在步骤1中的返回信息中增加一个参数（要求客户端提供证书），那么步骤4中也会增加一个参数（客户端证书）。\n+ 客户端和服务器端生成对称密钥后，之后所有的通信都使用对称秘钥加密。\n\n## 结合实例\n当一个人（小明）登录一个网站后，该网站的服务器会为小明分配一个sessionId，发送给客户端，当小明再次请求这个服务器时，携带着上次分配的sessionId，这样服务器就知道是小明访问的网站了。\n+ 假设这个请求是http请求。那么，第三方就可以获取这个请求的信息，获取sessionId。然后携带着这个sessionId模拟http请求，那么服务器就会认为是小明发送的请求，第三方就可以获取、修改小明的数据等。\n+ 假设这个请求是https请求。同样的，第三方获取到了请求的相关信息，但是并不知道这里面的内容是什么，因为这些数据都是经过加密的。如果别人修改了数据，服务器也会知道这个数据被别人修改了，因为SSL/TLS协议对数据通过hash算法（如sha1、md5）加密，加密结果不一致，就会被认为内容被篡改过了。\n通过上面两个实例，你会不会认为使用https就一定安全呢？如果是，那你就错了。https只能保证内容在传输的过程中不会被别人篡改或者窃取。但是，如果数据在客户端或者服务器端被窃取或者修改，也一样存在风险。\n\n\n## http和https对服务器性能的影响\n网站实现https，国外比较普及，但是在国内很多网站并没有使用https，其中一个比较重要的原因是网站的用户体验和性能下降明。那么使用https对网站的性能到底有多大的影响呢？\n http使用TCP 三次握手建立连接，客户端和服务器需要交换3个包，https除了 TCP 的三个包，还要加上 ssl握手需要的9个包，所以一共是12个包。一个链接测试，http是114毫秒；https建立连接，耗费436毫秒。ssl 部分花费322毫秒。\n你可能会问，每一次请求都需要那么多时间么？答案是否定的，第一次进行https通信时握手阶段生成的对称秘钥后，接下来，客户端与服务器进入加密通信，就完全是使用普通的HTTP协议，只不过用\"会话密钥\"加密内容。\n在[HTTP与HTTPS性能](https://gxnotes.com/article/62484.html) 文章中，提出了具体的优化方案，期待将来有机会在项目实战中使用到。\n\n\n参考文献：\n1. [HTTP 必死：先知 Google 唿吁大家升级 HTTPS， 网页浏览更有保障](https://buzzorange.com/techorange/2015/08/31/https-importance/) \n2. [http 和 https 有何区别？如何灵活使用？](https://www.zhihu.com/question/19577317) \n3. [扒一扒HTTPS网站的内幕](https://blog.wilddog.com/?p=210) \n4. [SSL/TLS协议运行机制的概述](http://www.ruanyifeng.com/blog/2014/02/ssl_tls.html) \n5. [https时序图](https://www.processon.com/view/59292a5ee4b0265ca26f78c9) \n","slug":"http-and-https","published":1,"updated":"2017-07-31T01:33:56.661Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2ena0010npjxghu37tx4","content":"<p>一直听说https比http安全，https 是加过密的http。但是https具体是怎样加<a href=\"http://www.ruanyifeng.com/blog/2014/02/ssl_tls.html\" target=\"_blank\" rel=\"external\">SSL/TLS协议运行机制的概述</a> 密认证的？http和https的安全性区别在哪里？https对服务器性能有什么影响？带着这些疑问查阅了相关资料，并记录。</p>\n<a id=\"more\"></a>\n<h2 id=\"http和https的区别\"><a href=\"#http和https的区别\" class=\"headerlink\" title=\"http和https的区别\"></a>http和https的区别</h2><p>不使用SSL/TLS的通信，就是我们所说的http通信，有以下三种风险：</p>\n<ul>\n<li>窃听风险（eavesdropping）：第三方可以获知通信内容。</li>\n<li>篡改风险（tampering）：第三方可以修改通信内容。</li>\n<li>冒充风险（pretending）：第三方可以冒充他人身份参与通信。</li>\n</ul>\n<p>当我们对http通信使用SSL/TLS协议后，就是我们所说的https通信，希望达到：</p>\n<ul>\n<li>所有信息都是加密传播，第三方无法窃听。</li>\n<li>具有校验机制，一旦被篡改，通信双方会立刻发现。</li>\n<li>配备身份证书，防止身份被冒充。</li>\n</ul>\n<h2 id=\"https通信过程\"><a href=\"#https通信过程\" class=\"headerlink\" title=\"https通信过程\"></a>https通信过程</h2><p>时序图如下<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/选区_093.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br>说明：</p>\n<ul>\n<li>步骤1中的证书包含了公钥、颁证机构、网址、过期时间。</li>\n<li>如果服务器端需要客户端提供证书，则会在步骤1中的返回信息中增加一个参数（要求客户端提供证书），那么步骤4中也会增加一个参数（客户端证书）。</li>\n<li>客户端和服务器端生成对称密钥后，之后所有的通信都使用对称秘钥加密。</li>\n</ul>\n<h2 id=\"结合实例\"><a href=\"#结合实例\" class=\"headerlink\" title=\"结合实例\"></a>结合实例</h2><p>当一个人（小明）登录一个网站后，该网站的服务器会为小明分配一个sessionId，发送给客户端，当小明再次请求这个服务器时，携带着上次分配的sessionId，这样服务器就知道是小明访问的网站了。</p>\n<ul>\n<li>假设这个请求是http请求。那么，第三方就可以获取这个请求的信息，获取sessionId。然后携带着这个sessionId模拟http请求，那么服务器就会认为是小明发送的请求，第三方就可以获取、修改小明的数据等。</li>\n<li>假设这个请求是https请求。同样的，第三方获取到了请求的相关信息，但是并不知道这里面的内容是什么，因为这些数据都是经过加密的。如果别人修改了数据，服务器也会知道这个数据被别人修改了，因为SSL/TLS协议对数据通过hash算法（如sha1、md5）加密，加密结果不一致，就会被认为内容被篡改过了。<br>通过上面两个实例，你会不会认为使用https就一定安全呢？如果是，那你就错了。https只能保证内容在传输的过程中不会被别人篡改或者窃取。但是，如果数据在客户端或者服务器端被窃取或者修改，也一样存在风险。</li>\n</ul>\n<h2 id=\"http和https对服务器性能的影响\"><a href=\"#http和https对服务器性能的影响\" class=\"headerlink\" title=\"http和https对服务器性能的影响\"></a>http和https对服务器性能的影响</h2><p>网站实现https，国外比较普及，但是在国内很多网站并没有使用https，其中一个比较重要的原因是网站的用户体验和性能下降明。那么使用https对网站的性能到底有多大的影响呢？<br> http使用TCP 三次握手建立连接，客户端和服务器需要交换3个包，https除了 TCP 的三个包，还要加上 ssl握手需要的9个包，所以一共是12个包。一个链接测试，http是114毫秒；https建立连接，耗费436毫秒。ssl 部分花费322毫秒。<br>你可能会问，每一次请求都需要那么多时间么？答案是否定的，第一次进行https通信时握手阶段生成的对称秘钥后，接下来，客户端与服务器进入加密通信，就完全是使用普通的HTTP协议，只不过用”会话密钥”加密内容。<br>在<a href=\"https://gxnotes.com/article/62484.html\" target=\"_blank\" rel=\"external\">HTTP与HTTPS性能</a> 文章中，提出了具体的优化方案，期待将来有机会在项目实战中使用到。</p>\n<p>参考文献：</p>\n<ol>\n<li><a href=\"https://buzzorange.com/techorange/2015/08/31/https-importance/\" target=\"_blank\" rel=\"external\">HTTP 必死：先知 Google 唿吁大家升级 HTTPS， 网页浏览更有保障</a> </li>\n<li><a href=\"https://www.zhihu.com/question/19577317\" target=\"_blank\" rel=\"external\">http 和 https 有何区别？如何灵活使用？</a> </li>\n<li><a href=\"https://blog.wilddog.com/?p=210\" target=\"_blank\" rel=\"external\">扒一扒HTTPS网站的内幕</a> </li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2014/02/ssl_tls.html\" target=\"_blank\" rel=\"external\">SSL/TLS协议运行机制的概述</a> </li>\n<li><a href=\"https://www.processon.com/view/59292a5ee4b0265ca26f78c9\" target=\"_blank\" rel=\"external\">https时序图</a> </li>\n</ol>\n","excerpt":"<p>一直听说https比http安全，https 是加过密的http。但是https具体是怎样加<a href=\"http://www.ruanyifeng.com/blog/2014/02/ssl_tls.html\">SSL/TLS协议运行机制的概述</a> 密认证的？http和https的安全性区别在哪里？https对服务器性能有什么影响？带着这些疑问查阅了相关资料，并记录。</p>","more":"<h2 id=\"http和https的区别\"><a href=\"#http和https的区别\" class=\"headerlink\" title=\"http和https的区别\"></a>http和https的区别</h2><p>不使用SSL/TLS的通信，就是我们所说的http通信，有以下三种风险：</p>\n<ul>\n<li>窃听风险（eavesdropping）：第三方可以获知通信内容。</li>\n<li>篡改风险（tampering）：第三方可以修改通信内容。</li>\n<li>冒充风险（pretending）：第三方可以冒充他人身份参与通信。</li>\n</ul>\n<p>当我们对http通信使用SSL/TLS协议后，就是我们所说的https通信，希望达到：</p>\n<ul>\n<li>所有信息都是加密传播，第三方无法窃听。</li>\n<li>具有校验机制，一旦被篡改，通信双方会立刻发现。</li>\n<li>配备身份证书，防止身份被冒充。</li>\n</ul>\n<h2 id=\"https通信过程\"><a href=\"#https通信过程\" class=\"headerlink\" title=\"https通信过程\"></a>https通信过程</h2><p>时序图如下<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/选区_093.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br>说明：</p>\n<ul>\n<li>步骤1中的证书包含了公钥、颁证机构、网址、过期时间。</li>\n<li>如果服务器端需要客户端提供证书，则会在步骤1中的返回信息中增加一个参数（要求客户端提供证书），那么步骤4中也会增加一个参数（客户端证书）。</li>\n<li>客户端和服务器端生成对称密钥后，之后所有的通信都使用对称秘钥加密。</li>\n</ul>\n<h2 id=\"结合实例\"><a href=\"#结合实例\" class=\"headerlink\" title=\"结合实例\"></a>结合实例</h2><p>当一个人（小明）登录一个网站后，该网站的服务器会为小明分配一个sessionId，发送给客户端，当小明再次请求这个服务器时，携带着上次分配的sessionId，这样服务器就知道是小明访问的网站了。</p>\n<ul>\n<li>假设这个请求是http请求。那么，第三方就可以获取这个请求的信息，获取sessionId。然后携带着这个sessionId模拟http请求，那么服务器就会认为是小明发送的请求，第三方就可以获取、修改小明的数据等。</li>\n<li>假设这个请求是https请求。同样的，第三方获取到了请求的相关信息，但是并不知道这里面的内容是什么，因为这些数据都是经过加密的。如果别人修改了数据，服务器也会知道这个数据被别人修改了，因为SSL/TLS协议对数据通过hash算法（如sha1、md5）加密，加密结果不一致，就会被认为内容被篡改过了。<br>通过上面两个实例，你会不会认为使用https就一定安全呢？如果是，那你就错了。https只能保证内容在传输的过程中不会被别人篡改或者窃取。但是，如果数据在客户端或者服务器端被窃取或者修改，也一样存在风险。</li>\n</ul>\n<h2 id=\"http和https对服务器性能的影响\"><a href=\"#http和https对服务器性能的影响\" class=\"headerlink\" title=\"http和https对服务器性能的影响\"></a>http和https对服务器性能的影响</h2><p>网站实现https，国外比较普及，但是在国内很多网站并没有使用https，其中一个比较重要的原因是网站的用户体验和性能下降明。那么使用https对网站的性能到底有多大的影响呢？<br> http使用TCP 三次握手建立连接，客户端和服务器需要交换3个包，https除了 TCP 的三个包，还要加上 ssl握手需要的9个包，所以一共是12个包。一个链接测试，http是114毫秒；https建立连接，耗费436毫秒。ssl 部分花费322毫秒。<br>你可能会问，每一次请求都需要那么多时间么？答案是否定的，第一次进行https通信时握手阶段生成的对称秘钥后，接下来，客户端与服务器进入加密通信，就完全是使用普通的HTTP协议，只不过用”会话密钥”加密内容。<br>在<a href=\"https://gxnotes.com/article/62484.html\">HTTP与HTTPS性能</a> 文章中，提出了具体的优化方案，期待将来有机会在项目实战中使用到。</p>\n<p>参考文献：</p>\n<ol>\n<li><a href=\"https://buzzorange.com/techorange/2015/08/31/https-importance/\">HTTP 必死：先知 Google 唿吁大家升级 HTTPS， 网页浏览更有保障</a> </li>\n<li><a href=\"https://www.zhihu.com/question/19577317\">http 和 https 有何区别？如何灵活使用？</a> </li>\n<li><a href=\"https://blog.wilddog.com/?p=210\">扒一扒HTTPS网站的内幕</a> </li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2014/02/ssl_tls.html\">SSL/TLS协议运行机制的概述</a> </li>\n<li><a href=\"https://www.processon.com/view/59292a5ee4b0265ca26f78c9\">https时序图</a> </li>\n</ol>"},{"title":"http请求的封装与过滤","date":"2017-06-23T14:15:49.000Z","_content":"\n最近做的净水器项目，前台需要对发送的请求进行统一的封装，后台需要对请求进行统一的验证。本文记录了前台进行的http请求的封装及后台进行的http请求的过滤。前台：小程序，后台：SpringMvc.\n\n<!--more-->\n\n## 小程序对http请求进行封装\n在微信小程序[wx.request官网](https://mp.weixin.qq.com/debug/wxadoc/dev/api/network-request.html) 中的http请求是这样的：\n```\nwx.request({\n  url: 'test.php', //仅为示例，并非真实的接口地址\n  data: {\n     x: '' ,\n     y: ''\n  },\n  header: {\n      'content-type': 'application/json'\n  },\n  success: function(res) {\n    console.log(res.data)\n  }\n})\n```\n由于请求的地址及参数是改变的，所以封装后的请求至少需要地址、请求参数。封装后代码是这样的\n```\n    //发送http请求\n    var http = require(\"../../utils/httpUtil.js\");\t//引入封装http的文件\n    var params = {\n        id: app.number\n    };\n    var api = \"WaterPurifier/\";\n    \n    http.GET(api, params, function(res){\n        console.log(res.data);\n    });\n```\n由以上代码可知，封装的http请求是在util文件夹中建立httpUtil.js文件，可以根据自己的实际需求，对参数作统一的处理，比如统一加密之类的，也可以直接对get、post方法的header信息作统一处理。总之，对http请求封装之后，不仅实现了我们的业务需求，而且也使代码更简洁了。\n\n> 参考文献：[微信小程序中对网络请求的封装](https://ywxv.github.io/wxapp-http-request.html) \n\n## SpringMvc使用zuul过滤\n在SpringMvc中，使用zuul可以对请求进行过滤，使用请参考[官方文档](http://spring.io/guides/gs/routing-and-filtering/) \n![](/images/7.png)\n由上图可知，前台请求的地址实际上是zuul过滤器的地址，然后再由zuul过滤器进行转发到后台的逻辑层。在项目上线后，我们可以吧zuul过滤器放在一个服务器中，把后台的逻辑层代码放在另外一个服务器中，从而减轻了服务器的负担。\n```JAVA\n//获取请求\nRequestContext ctx = RequestContext.getCurrentContext();\nHttpServletRequest request = ctx.getRequest();\n ```\n + 我们可以根据ctx对象来设置请求的状态码、请求的头信息、拦截请求等一系列操作。查找的途径是直接看RequestContext包中的方法。\n + 我们可以根据request对象来获取请求的参数。我们可以直接浏览HttpServletRequest接口中的方法。\n \n## 总结\n最开始对前台的请求进行加密，后台的请求进行解密时，感觉也不麻烦。但是老师让我对请求进行封装，内心是抗拒的，当时可能感觉封装请求是个麻烦的过程。但是对前台的请求进行封装后 ，发现确实方便了很多。所以在以后的项目中，如果需要对某一类东西做统一的处理，就要封装，不仅规范，而且方便。","source":"_posts/http请求的封装与过滤.md","raw":"---\ntitle: http请求的封装与过滤\ndate: 2017-06-23 22:15:49\ncategories:  [SpringMvc]\ntags: [小程序]\n---\n\n最近做的净水器项目，前台需要对发送的请求进行统一的封装，后台需要对请求进行统一的验证。本文记录了前台进行的http请求的封装及后台进行的http请求的过滤。前台：小程序，后台：SpringMvc.\n\n<!--more-->\n\n## 小程序对http请求进行封装\n在微信小程序[wx.request官网](https://mp.weixin.qq.com/debug/wxadoc/dev/api/network-request.html) 中的http请求是这样的：\n```\nwx.request({\n  url: 'test.php', //仅为示例，并非真实的接口地址\n  data: {\n     x: '' ,\n     y: ''\n  },\n  header: {\n      'content-type': 'application/json'\n  },\n  success: function(res) {\n    console.log(res.data)\n  }\n})\n```\n由于请求的地址及参数是改变的，所以封装后的请求至少需要地址、请求参数。封装后代码是这样的\n```\n    //发送http请求\n    var http = require(\"../../utils/httpUtil.js\");\t//引入封装http的文件\n    var params = {\n        id: app.number\n    };\n    var api = \"WaterPurifier/\";\n    \n    http.GET(api, params, function(res){\n        console.log(res.data);\n    });\n```\n由以上代码可知，封装的http请求是在util文件夹中建立httpUtil.js文件，可以根据自己的实际需求，对参数作统一的处理，比如统一加密之类的，也可以直接对get、post方法的header信息作统一处理。总之，对http请求封装之后，不仅实现了我们的业务需求，而且也使代码更简洁了。\n\n> 参考文献：[微信小程序中对网络请求的封装](https://ywxv.github.io/wxapp-http-request.html) \n\n## SpringMvc使用zuul过滤\n在SpringMvc中，使用zuul可以对请求进行过滤，使用请参考[官方文档](http://spring.io/guides/gs/routing-and-filtering/) \n![](/images/7.png)\n由上图可知，前台请求的地址实际上是zuul过滤器的地址，然后再由zuul过滤器进行转发到后台的逻辑层。在项目上线后，我们可以吧zuul过滤器放在一个服务器中，把后台的逻辑层代码放在另外一个服务器中，从而减轻了服务器的负担。\n```JAVA\n//获取请求\nRequestContext ctx = RequestContext.getCurrentContext();\nHttpServletRequest request = ctx.getRequest();\n ```\n + 我们可以根据ctx对象来设置请求的状态码、请求的头信息、拦截请求等一系列操作。查找的途径是直接看RequestContext包中的方法。\n + 我们可以根据request对象来获取请求的参数。我们可以直接浏览HttpServletRequest接口中的方法。\n \n## 总结\n最开始对前台的请求进行加密，后台的请求进行解密时，感觉也不麻烦。但是老师让我对请求进行封装，内心是抗拒的，当时可能感觉封装请求是个麻烦的过程。但是对前台的请求进行封装后 ，发现确实方便了很多。所以在以后的项目中，如果需要对某一类东西做统一的处理，就要封装，不仅规范，而且方便。","slug":"http请求的封装与过滤","published":1,"updated":"2017-06-24T14:31:05.345Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2enb0012npjx70aq2cov","content":"<p>最近做的净水器项目，前台需要对发送的请求进行统一的封装，后台需要对请求进行统一的验证。本文记录了前台进行的http请求的封装及后台进行的http请求的过滤。前台：小程序，后台：SpringMvc.</p>\n<a id=\"more\"></a>\n<h2 id=\"小程序对http请求进行封装\"><a href=\"#小程序对http请求进行封装\" class=\"headerlink\" title=\"小程序对http请求进行封装\"></a>小程序对http请求进行封装</h2><p>在微信小程序<a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/api/network-request.html\" target=\"_blank\" rel=\"external\">wx.request官网</a> 中的http请求是这样的：<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">wx</span><span class=\"selector-class\">.request</span>(&#123;</div><div class=\"line\">  <span class=\"attribute\">url</span>: <span class=\"string\">'test.php'</span>, <span class=\"comment\">//仅为示例，并非真实的接口地址</span></div><div class=\"line\">  <span class=\"attribute\">data</span>: &#123;</div><div class=\"line\">     <span class=\"attribute\">x</span>: <span class=\"string\">''</span> ,</div><div class=\"line\">     <span class=\"attribute\">y</span>: <span class=\"string\">''</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attribute\">header</span>: &#123;</div><div class=\"line\">      <span class=\"string\">'content-type'</span>: <span class=\"string\">'application/json'</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attribute\">success</span>: function(res) &#123;</div><div class=\"line\">    console.log(res.data)</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<p>由于请求的地址及参数是改变的，所以封装后的请求至少需要地址、请求参数。封装后代码是这样的<br><figure class=\"highlight qml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//发送http请求</span></div><div class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">\"../../utils/httpUtil.js\"</span>);\t<span class=\"comment\">//引入封装http的文件</span></div><div class=\"line\"><span class=\"keyword\">var</span> params = &#123;</div><div class=\"line\">    <span class=\"attribute\">id:</span><span class=\"string\"> app.number</span></div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"keyword\">var</span> api = <span class=\"string\">\"WaterPurifier/\"</span>;</div><div class=\"line\"></div><div class=\"line\">http.GET(api, params, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>)</span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(res.data);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>由以上代码可知，封装的http请求是在util文件夹中建立httpUtil.js文件，可以根据自己的实际需求，对参数作统一的处理，比如统一加密之类的，也可以直接对get、post方法的header信息作统一处理。总之，对http请求封装之后，不仅实现了我们的业务需求，而且也使代码更简洁了。</p>\n<blockquote>\n<p>参考文献：<a href=\"https://ywxv.github.io/wxapp-http-request.html\" target=\"_blank\" rel=\"external\">微信小程序中对网络请求的封装</a> </p>\n</blockquote>\n<h2 id=\"SpringMvc使用zuul过滤\"><a href=\"#SpringMvc使用zuul过滤\" class=\"headerlink\" title=\"SpringMvc使用zuul过滤\"></a>SpringMvc使用zuul过滤</h2><p>在SpringMvc中，使用zuul可以对请求进行过滤，使用请参考<a href=\"http://spring.io/guides/gs/routing-and-filtering/\" target=\"_blank\" rel=\"external\">官方文档</a><br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/7.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br>由上图可知，前台请求的地址实际上是zuul过滤器的地址，然后再由zuul过滤器进行转发到后台的逻辑层。在项目上线后，我们可以吧zuul过滤器放在一个服务器中，把后台的逻辑层代码放在另外一个服务器中，从而减轻了服务器的负担。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//获取请求</span></div><div class=\"line\">RequestContext ctx = RequestContext.getCurrentContext();</div><div class=\"line\">HttpServletRequest request = ctx.getRequest();</div></pre></td></tr></table></figure></p>\n<ul>\n<li>我们可以根据ctx对象来设置请求的状态码、请求的头信息、拦截请求等一系列操作。查找的途径是直接看RequestContext包中的方法。</li>\n<li>我们可以根据request对象来获取请求的参数。我们可以直接浏览HttpServletRequest接口中的方法。</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>最开始对前台的请求进行加密，后台的请求进行解密时，感觉也不麻烦。但是老师让我对请求进行封装，内心是抗拒的，当时可能感觉封装请求是个麻烦的过程。但是对前台的请求进行封装后 ，发现确实方便了很多。所以在以后的项目中，如果需要对某一类东西做统一的处理，就要封装，不仅规范，而且方便。</p>\n","excerpt":"<p>最近做的净水器项目，前台需要对发送的请求进行统一的封装，后台需要对请求进行统一的验证。本文记录了前台进行的http请求的封装及后台进行的http请求的过滤。前台：小程序，后台：SpringMvc.</p>","more":"<h2 id=\"小程序对http请求进行封装\"><a href=\"#小程序对http请求进行封装\" class=\"headerlink\" title=\"小程序对http请求进行封装\"></a>小程序对http请求进行封装</h2><p>在微信小程序<a href=\"https://mp.weixin.qq.com/debug/wxadoc/dev/api/network-request.html\">wx.request官网</a> 中的http请求是这样的：<br><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">wx</span><span class=\"selector-class\">.request</span>(&#123;</div><div class=\"line\">  <span class=\"attribute\">url</span>: <span class=\"string\">'test.php'</span>, <span class=\"comment\">//仅为示例，并非真实的接口地址</span></div><div class=\"line\">  <span class=\"attribute\">data</span>: &#123;</div><div class=\"line\">     <span class=\"attribute\">x</span>: <span class=\"string\">''</span> ,</div><div class=\"line\">     <span class=\"attribute\">y</span>: <span class=\"string\">''</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attribute\">header</span>: &#123;</div><div class=\"line\">      <span class=\"string\">'content-type'</span>: <span class=\"string\">'application/json'</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attribute\">success</span>: function(res) &#123;</div><div class=\"line\">    console.log(res.data)</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<p>由于请求的地址及参数是改变的，所以封装后的请求至少需要地址、请求参数。封装后代码是这样的<br><figure class=\"highlight qml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//发送http请求</span></div><div class=\"line\"><span class=\"keyword\">var</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">\"../../utils/httpUtil.js\"</span>);\t<span class=\"comment\">//引入封装http的文件</span></div><div class=\"line\"><span class=\"keyword\">var</span> params = &#123;</div><div class=\"line\">    <span class=\"attribute\">id:</span><span class=\"string\"> app.number</span></div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"keyword\">var</span> api = <span class=\"string\">\"WaterPurifier/\"</span>;</div><div class=\"line\"></div><div class=\"line\">http.GET(api, params, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>)</span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(res.data);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>由以上代码可知，封装的http请求是在util文件夹中建立httpUtil.js文件，可以根据自己的实际需求，对参数作统一的处理，比如统一加密之类的，也可以直接对get、post方法的header信息作统一处理。总之，对http请求封装之后，不仅实现了我们的业务需求，而且也使代码更简洁了。</p>\n<blockquote>\n<p>参考文献：<a href=\"https://ywxv.github.io/wxapp-http-request.html\">微信小程序中对网络请求的封装</a> </p>\n</blockquote>\n<h2 id=\"SpringMvc使用zuul过滤\"><a href=\"#SpringMvc使用zuul过滤\" class=\"headerlink\" title=\"SpringMvc使用zuul过滤\"></a>SpringMvc使用zuul过滤</h2><p>在SpringMvc中，使用zuul可以对请求进行过滤，使用请参考<a href=\"http://spring.io/guides/gs/routing-and-filtering/\">官方文档</a><br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/7.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br>由上图可知，前台请求的地址实际上是zuul过滤器的地址，然后再由zuul过滤器进行转发到后台的逻辑层。在项目上线后，我们可以吧zuul过滤器放在一个服务器中，把后台的逻辑层代码放在另外一个服务器中，从而减轻了服务器的负担。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//获取请求</span></div><div class=\"line\">RequestContext ctx = RequestContext.getCurrentContext();</div><div class=\"line\">HttpServletRequest request = ctx.getRequest();</div></pre></td></tr></table></figure></p>\n<ul>\n<li>我们可以根据ctx对象来设置请求的状态码、请求的头信息、拦截请求等一系列操作。查找的途径是直接看RequestContext包中的方法。</li>\n<li>我们可以根据request对象来获取请求的参数。我们可以直接浏览HttpServletRequest接口中的方法。</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>最开始对前台的请求进行加密，后台的请求进行解密时，感觉也不麻烦。但是老师让我对请求进行封装，内心是抗拒的，当时可能感觉封装请求是个麻烦的过程。但是对前台的请求进行封装后 ，发现确实方便了很多。所以在以后的项目中，如果需要对某一类东西做统一的处理，就要封装，不仅规范，而且方便。</p>"},{"title":"mysql下hebinate使用sql关键字报错问题","date":"2017-06-06T12:04:52.000Z","_content":"\n今天建立订单实体的时，不能生成sql文件，一直报错。当时挺无语的，开始的时候一点点吧字段都注释掉，怀疑字段名太长等，最终发现是数据表名是sql关键字。环境：mysql，hebinate，springMvc。\n\n<!--more-->\n\n## 错误信息\n报错信息如下\n```\norg.hibernate.tool.hbm2ddl.SchemaExport  : HHH000389: Unsuccessful: drop table if exists order\n2017-06-06 20:16:58.422 ERROR 8020 --- [  restartedMain] org.hibernate.tool.hbm2ddl.SchemaExport  : You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'order' at line 1\n```\n\n## 解决方法\n+ 给实体起一个别名。\n+ 将数据表换个名字\n\n## 对比\n之前在php的项目中使用mysql数据库建立订单表就是使用order表，但是并没有错误，所以这个报错应该主要是hebinate的原因。但是疑问的是user也是sql保留的关键字，但是使用hebinate建立user表为什么没有报错呢？所以最终还是要以运行结果为准。\n\n## 总结\n在sql的手册中这样说到，一条通用的规则是：如果你看到任何古怪的分析错，说命令包含任何这里列出的关键字做标识符， 那么你可以先试试用双引号把那个标识符括起来，看看问题是否消失。\n\n> [sql中文手册](http://www.postgres.cn/docs/9.3/sql-keywords-appendix.html) 列出了sql的关键字。","source":"_posts/sql关键字报错.md","raw":"---\ntitle: mysql下hebinate使用sql关键字报错问题\ndate: 2017-06-06 20:04:52\ntags: [sql,关键字, hebinate]\n---\n\n今天建立订单实体的时，不能生成sql文件，一直报错。当时挺无语的，开始的时候一点点吧字段都注释掉，怀疑字段名太长等，最终发现是数据表名是sql关键字。环境：mysql，hebinate，springMvc。\n\n<!--more-->\n\n## 错误信息\n报错信息如下\n```\norg.hibernate.tool.hbm2ddl.SchemaExport  : HHH000389: Unsuccessful: drop table if exists order\n2017-06-06 20:16:58.422 ERROR 8020 --- [  restartedMain] org.hibernate.tool.hbm2ddl.SchemaExport  : You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'order' at line 1\n```\n\n## 解决方法\n+ 给实体起一个别名。\n+ 将数据表换个名字\n\n## 对比\n之前在php的项目中使用mysql数据库建立订单表就是使用order表，但是并没有错误，所以这个报错应该主要是hebinate的原因。但是疑问的是user也是sql保留的关键字，但是使用hebinate建立user表为什么没有报错呢？所以最终还是要以运行结果为准。\n\n## 总结\n在sql的手册中这样说到，一条通用的规则是：如果你看到任何古怪的分析错，说命令包含任何这里列出的关键字做标识符， 那么你可以先试试用双引号把那个标识符括起来，看看问题是否消失。\n\n> [sql中文手册](http://www.postgres.cn/docs/9.3/sql-keywords-appendix.html) 列出了sql的关键字。","slug":"sql关键字报错","published":1,"updated":"2017-06-15T08:03:19.202Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2ene0014npjxa8x9gyy5","content":"<p>今天建立订单实体的时，不能生成sql文件，一直报错。当时挺无语的，开始的时候一点点吧字段都注释掉，怀疑字段名太长等，最终发现是数据表名是sql关键字。环境：mysql，hebinate，springMvc。</p>\n<a id=\"more\"></a>\n<h2 id=\"错误信息\"><a href=\"#错误信息\" class=\"headerlink\" title=\"错误信息\"></a>错误信息</h2><p>报错信息如下<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">org.hibernate.tool.hbm2ddl.SchemaExport  : HHH000389: Unsuccessful: <span class=\"keyword\">drop</span> <span class=\"keyword\">table</span> <span class=\"keyword\">if</span> exists <span class=\"keyword\">order</span></div><div class=\"line\">2017-06-06 20:16:58.422 <span class=\"keyword\">ERROR</span> 8020 --- [  restartedMain] org.hibernate.tool.hbm2ddl.SchemaExport  : You have <span class=\"keyword\">an</span> <span class=\"keyword\">error</span> <span class=\"keyword\">in</span> your SQL <span class=\"keyword\">syntax</span>; check the manual that corresponds to your MariaDB server <span class=\"keyword\">version</span> <span class=\"keyword\">for</span> the right <span class=\"keyword\">syntax</span> to <span class=\"keyword\">use</span> near '<span class=\"keyword\">order</span>' at <span class=\"keyword\">line</span> 1</div></pre></td></tr></table></figure></p>\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h2><ul>\n<li>给实体起一个别名。</li>\n<li>将数据表换个名字</li>\n</ul>\n<h2 id=\"对比\"><a href=\"#对比\" class=\"headerlink\" title=\"对比\"></a>对比</h2><p>之前在php的项目中使用mysql数据库建立订单表就是使用order表，但是并没有错误，所以这个报错应该主要是hebinate的原因。但是疑问的是user也是sql保留的关键字，但是使用hebinate建立user表为什么没有报错呢？所以最终还是要以运行结果为准。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>在sql的手册中这样说到，一条通用的规则是：如果你看到任何古怪的分析错，说命令包含任何这里列出的关键字做标识符， 那么你可以先试试用双引号把那个标识符括起来，看看问题是否消失。</p>\n<blockquote>\n<p><a href=\"http://www.postgres.cn/docs/9.3/sql-keywords-appendix.html\" target=\"_blank\" rel=\"external\">sql中文手册</a> 列出了sql的关键字。</p>\n</blockquote>\n","excerpt":"<p>今天建立订单实体的时，不能生成sql文件，一直报错。当时挺无语的，开始的时候一点点吧字段都注释掉，怀疑字段名太长等，最终发现是数据表名是sql关键字。环境：mysql，hebinate，springMvc。</p>","more":"<h2 id=\"错误信息\"><a href=\"#错误信息\" class=\"headerlink\" title=\"错误信息\"></a>错误信息</h2><p>报错信息如下<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">org.hibernate.tool.hbm2ddl.SchemaExport  : HHH000389: Unsuccessful: <span class=\"keyword\">drop</span> <span class=\"keyword\">table</span> <span class=\"keyword\">if</span> exists <span class=\"keyword\">order</span></div><div class=\"line\">2017-06-06 20:16:58.422 <span class=\"keyword\">ERROR</span> 8020 --- [  restartedMain] org.hibernate.tool.hbm2ddl.SchemaExport  : You have <span class=\"keyword\">an</span> <span class=\"keyword\">error</span> <span class=\"keyword\">in</span> your SQL <span class=\"keyword\">syntax</span>; check the manual that corresponds to your MariaDB server <span class=\"keyword\">version</span> <span class=\"keyword\">for</span> the right <span class=\"keyword\">syntax</span> to <span class=\"keyword\">use</span> near '<span class=\"keyword\">order</span>' at <span class=\"keyword\">line</span> 1</div></pre></td></tr></table></figure></p>\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h2><ul>\n<li>给实体起一个别名。</li>\n<li>将数据表换个名字</li>\n</ul>\n<h2 id=\"对比\"><a href=\"#对比\" class=\"headerlink\" title=\"对比\"></a>对比</h2><p>之前在php的项目中使用mysql数据库建立订单表就是使用order表，但是并没有错误，所以这个报错应该主要是hebinate的原因。但是疑问的是user也是sql保留的关键字，但是使用hebinate建立user表为什么没有报错呢？所以最终还是要以运行结果为准。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>在sql的手册中这样说到，一条通用的规则是：如果你看到任何古怪的分析错，说命令包含任何这里列出的关键字做标识符， 那么你可以先试试用双引号把那个标识符括起来，看看问题是否消失。</p>\n<blockquote>\n<p><a href=\"http://www.postgres.cn/docs/9.3/sql-keywords-appendix.html\">sql中文手册</a> 列出了sql的关键字。</p>\n</blockquote>"},{"layout":"photo","title":"Gallery","date":"2017-04-16T01:51:34.000Z","photos":["http://localhost:4000/images/%E9%80%89%E5%8C%BA_001.png","/images/选区_001.png","http://ww3.sinaimg.cn/mw690/81b78497jw1emfgvcdn25j21hc0u0qpa.jpg"],"description":"Gallery Post Test. 测试图片类文章的显示。","_content":"\n这是一个gallery测试","source":"_posts/test.md","raw":"---\nlayout: photo\ntitle: Gallery\ndate: 2017-04-16 09:51:34\ncategory: photos\nphotos:\n- http://localhost:4000/images/%E9%80%89%E5%8C%BA_001.png\n- /images/选区_001.png\n- http://ww3.sinaimg.cn/mw690/81b78497jw1emfgvcdn25j21hc0u0qpa.jpg\n\n\ndescription: Gallery Post Test. 测试图片类文章的显示。\n---\n\n这是一个gallery测试","slug":"test","published":1,"updated":"2017-07-30T03:04:06.061Z","comments":1,"link":"","_id":"cj5rs2eni0017npjxs9pomqm3","content":"<p>这是一个gallery测试</p>\n","excerpt":"","more":"<p>这是一个gallery测试</p>\n"},{"title":"初始cookie与session","date":"2017-05-16T01:51:34.000Z","_content":"\n作为一个程序员，你可能会经常听到cookie和session这一对好兄弟，下面简单介绍一下 他们。\n\n<!--more-->\n\n### 了解cookie\n当登录一个网站时，网站往往会请求用户输入用户名和密码，并且用户可以勾选“下次自动登录”。如果勾选了，那么下次访问同一网站时，用户会发现没输入用户名和密码就已经登录了。这正是因为前一次登录时，服务器发送了包含登录凭据（用户名加密码的某种加密形式）的Cookie到用户的硬盘上。第二次登录时，（如果该Cookie尚未到期）浏览器会发送该Cookie，服务器验证凭据，于是不必输入用户名和密码就让用户登录了。\n### cookie分类\nCookie总是保存在客户端中，按在客户端中的存储位置，可分为内存Cookie和硬盘Cookie。内存Cookie由浏览器维护，保存在内存中，浏览器关闭后就消失了，其存在时间是短暂的。硬盘Cookie保存在硬盘里，有一个过期时间，除非用户手工清理或到了过期时间，硬盘Cookie不会被删除，其存在时间是长期的。所以，按存在时间，可分为非持久Cookie和持久Cookie。\n### cookie的缺陷\n+ Cookie会被附加在每个HTTP请求中，所以无形中增加了流量。\n+ 由于在HTTP请求中的Cookie是明文传递的，所以安全性成问题。（除非用HTTPS）\n+ Cookie的大小限制在4KB左右。对于复杂的存储需求来说是不够用的。[3]\n\n### session是什么技术\nsession采用的是在服务器端保存状态数据的方案。当较多的用户数据长时间的储存在服务器上，会增加服务器的负担，因此session中的数据信息要尽可能的少。\n### 关于session\n+ session_id的名称可以修改么？可以通过session_name()来获取或者设置。\n+ session_id的值可以修改么？可以通过session_id()来获取或者设置。\n+ session文件在计算机中的保存路径可以修改么？可以通过session_save_path()来获取或者设置。windows系统上的默认值为“C:\\Windows\\Temp”。\n+ 启动session会话后怎么做？通过session_start()函数启动回话后，接下来就可以注册session变量，PHP通过预定义数组来注册session变量，并且用isset()函数或者empty（）函数判断session变量是否注册。\n\n### session和cookie的区别。\n+ cookie机制采用的是在客户端保存的方案，也就是说cookie数据存放在用户的浏览器上，而session机制采用的是在服务器端保存的方案，即session数据存放在服务器端。\n+ 单个cookie文件的大小在客户端限制是3字节，而session文件大小在服务器段没有限制。\n+ 恶意网站可以通过暗中读取用户cookie的方式来盗取用户的隐私信息，因此，考虑到安全性，应当减少cookie的使用，转而使用session。\n+ session将数据保存在服务器上，当访问增多时，会降低服务器的性能，因此，考虑到减轻服务器的负担，应当减少使用session，转而使用cookie。故建议在实际开发中，将重要的信息使用session保存，其他信息使用cookie保存。\n\n## 总结\n用户访问一个服务器，服务器首先检客户端是否含有session标识（session id）。如果客户端已经创建过session，则服务器会把他检索出来使用，如果没有，服务器会为他重新创建一个相关联的session id，并返回给客户端。用户浏览器收到这个session id后，会在硬盘的指定目录下生成客户端的session文件。文件的命名格为\"sess\"+session_id，文件中包含的是回话的具体内容。就这样建立一个回话后，下一次http请求时，用户浏览器会将当前域名下所有的cookie发给服务器，服务器根据cookie 中的session_id来读取保存在计算机中的相应session文件，并从session文件中获取会话的内容。\n\n> 如有错误，欢迎指正！\n","source":"_posts/初始cookie与session.md","raw":"---\ntitle: 初始cookie与session\ndate: 2017-05-16 09:51:34\ntags:\ncategories: [php]\n---\n\n作为一个程序员，你可能会经常听到cookie和session这一对好兄弟，下面简单介绍一下 他们。\n\n<!--more-->\n\n### 了解cookie\n当登录一个网站时，网站往往会请求用户输入用户名和密码，并且用户可以勾选“下次自动登录”。如果勾选了，那么下次访问同一网站时，用户会发现没输入用户名和密码就已经登录了。这正是因为前一次登录时，服务器发送了包含登录凭据（用户名加密码的某种加密形式）的Cookie到用户的硬盘上。第二次登录时，（如果该Cookie尚未到期）浏览器会发送该Cookie，服务器验证凭据，于是不必输入用户名和密码就让用户登录了。\n### cookie分类\nCookie总是保存在客户端中，按在客户端中的存储位置，可分为内存Cookie和硬盘Cookie。内存Cookie由浏览器维护，保存在内存中，浏览器关闭后就消失了，其存在时间是短暂的。硬盘Cookie保存在硬盘里，有一个过期时间，除非用户手工清理或到了过期时间，硬盘Cookie不会被删除，其存在时间是长期的。所以，按存在时间，可分为非持久Cookie和持久Cookie。\n### cookie的缺陷\n+ Cookie会被附加在每个HTTP请求中，所以无形中增加了流量。\n+ 由于在HTTP请求中的Cookie是明文传递的，所以安全性成问题。（除非用HTTPS）\n+ Cookie的大小限制在4KB左右。对于复杂的存储需求来说是不够用的。[3]\n\n### session是什么技术\nsession采用的是在服务器端保存状态数据的方案。当较多的用户数据长时间的储存在服务器上，会增加服务器的负担，因此session中的数据信息要尽可能的少。\n### 关于session\n+ session_id的名称可以修改么？可以通过session_name()来获取或者设置。\n+ session_id的值可以修改么？可以通过session_id()来获取或者设置。\n+ session文件在计算机中的保存路径可以修改么？可以通过session_save_path()来获取或者设置。windows系统上的默认值为“C:\\Windows\\Temp”。\n+ 启动session会话后怎么做？通过session_start()函数启动回话后，接下来就可以注册session变量，PHP通过预定义数组来注册session变量，并且用isset()函数或者empty（）函数判断session变量是否注册。\n\n### session和cookie的区别。\n+ cookie机制采用的是在客户端保存的方案，也就是说cookie数据存放在用户的浏览器上，而session机制采用的是在服务器端保存的方案，即session数据存放在服务器端。\n+ 单个cookie文件的大小在客户端限制是3字节，而session文件大小在服务器段没有限制。\n+ 恶意网站可以通过暗中读取用户cookie的方式来盗取用户的隐私信息，因此，考虑到安全性，应当减少cookie的使用，转而使用session。\n+ session将数据保存在服务器上，当访问增多时，会降低服务器的性能，因此，考虑到减轻服务器的负担，应当减少使用session，转而使用cookie。故建议在实际开发中，将重要的信息使用session保存，其他信息使用cookie保存。\n\n## 总结\n用户访问一个服务器，服务器首先检客户端是否含有session标识（session id）。如果客户端已经创建过session，则服务器会把他检索出来使用，如果没有，服务器会为他重新创建一个相关联的session id，并返回给客户端。用户浏览器收到这个session id后，会在硬盘的指定目录下生成客户端的session文件。文件的命名格为\"sess\"+session_id，文件中包含的是回话的具体内容。就这样建立一个回话后，下一次http请求时，用户浏览器会将当前域名下所有的cookie发给服务器，服务器根据cookie 中的session_id来读取保存在计算机中的相应session文件，并从session文件中获取会话的内容。\n\n> 如有错误，欢迎指正！\n","slug":"初始cookie与session","published":1,"updated":"2017-07-30T03:02:29.349Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2enk0019npjxvehzl6hx","content":"<p>作为一个程序员，你可能会经常听到cookie和session这一对好兄弟，下面简单介绍一下 他们。</p>\n<a id=\"more\"></a>\n<h3 id=\"了解cookie\"><a href=\"#了解cookie\" class=\"headerlink\" title=\"了解cookie\"></a>了解cookie</h3><p>当登录一个网站时，网站往往会请求用户输入用户名和密码，并且用户可以勾选“下次自动登录”。如果勾选了，那么下次访问同一网站时，用户会发现没输入用户名和密码就已经登录了。这正是因为前一次登录时，服务器发送了包含登录凭据（用户名加密码的某种加密形式）的Cookie到用户的硬盘上。第二次登录时，（如果该Cookie尚未到期）浏览器会发送该Cookie，服务器验证凭据，于是不必输入用户名和密码就让用户登录了。</p>\n<h3 id=\"cookie分类\"><a href=\"#cookie分类\" class=\"headerlink\" title=\"cookie分类\"></a>cookie分类</h3><p>Cookie总是保存在客户端中，按在客户端中的存储位置，可分为内存Cookie和硬盘Cookie。内存Cookie由浏览器维护，保存在内存中，浏览器关闭后就消失了，其存在时间是短暂的。硬盘Cookie保存在硬盘里，有一个过期时间，除非用户手工清理或到了过期时间，硬盘Cookie不会被删除，其存在时间是长期的。所以，按存在时间，可分为非持久Cookie和持久Cookie。</p>\n<h3 id=\"cookie的缺陷\"><a href=\"#cookie的缺陷\" class=\"headerlink\" title=\"cookie的缺陷\"></a>cookie的缺陷</h3><ul>\n<li>Cookie会被附加在每个HTTP请求中，所以无形中增加了流量。</li>\n<li>由于在HTTP请求中的Cookie是明文传递的，所以安全性成问题。（除非用HTTPS）</li>\n<li>Cookie的大小限制在4KB左右。对于复杂的存储需求来说是不够用的。[3]</li>\n</ul>\n<h3 id=\"session是什么技术\"><a href=\"#session是什么技术\" class=\"headerlink\" title=\"session是什么技术\"></a>session是什么技术</h3><p>session采用的是在服务器端保存状态数据的方案。当较多的用户数据长时间的储存在服务器上，会增加服务器的负担，因此session中的数据信息要尽可能的少。</p>\n<h3 id=\"关于session\"><a href=\"#关于session\" class=\"headerlink\" title=\"关于session\"></a>关于session</h3><ul>\n<li>session_id的名称可以修改么？可以通过session_name()来获取或者设置。</li>\n<li>session_id的值可以修改么？可以通过session_id()来获取或者设置。</li>\n<li>session文件在计算机中的保存路径可以修改么？可以通过session_save_path()来获取或者设置。windows系统上的默认值为“C:\\Windows\\Temp”。</li>\n<li>启动session会话后怎么做？通过session_start()函数启动回话后，接下来就可以注册session变量，PHP通过预定义数组来注册session变量，并且用isset()函数或者empty（）函数判断session变量是否注册。</li>\n</ul>\n<h3 id=\"session和cookie的区别。\"><a href=\"#session和cookie的区别。\" class=\"headerlink\" title=\"session和cookie的区别。\"></a>session和cookie的区别。</h3><ul>\n<li>cookie机制采用的是在客户端保存的方案，也就是说cookie数据存放在用户的浏览器上，而session机制采用的是在服务器端保存的方案，即session数据存放在服务器端。</li>\n<li>单个cookie文件的大小在客户端限制是3字节，而session文件大小在服务器段没有限制。</li>\n<li>恶意网站可以通过暗中读取用户cookie的方式来盗取用户的隐私信息，因此，考虑到安全性，应当减少cookie的使用，转而使用session。</li>\n<li>session将数据保存在服务器上，当访问增多时，会降低服务器的性能，因此，考虑到减轻服务器的负担，应当减少使用session，转而使用cookie。故建议在实际开发中，将重要的信息使用session保存，其他信息使用cookie保存。</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>用户访问一个服务器，服务器首先检客户端是否含有session标识（session id）。如果客户端已经创建过session，则服务器会把他检索出来使用，如果没有，服务器会为他重新创建一个相关联的session id，并返回给客户端。用户浏览器收到这个session id后，会在硬盘的指定目录下生成客户端的session文件。文件的命名格为”sess”+session_id，文件中包含的是回话的具体内容。就这样建立一个回话后，下一次http请求时，用户浏览器会将当前域名下所有的cookie发给服务器，服务器根据cookie 中的session_id来读取保存在计算机中的相应session文件，并从session文件中获取会话的内容。</p>\n<blockquote>\n<p>如有错误，欢迎指正！</p>\n</blockquote>\n","excerpt":"<p>作为一个程序员，你可能会经常听到cookie和session这一对好兄弟，下面简单介绍一下 他们。</p>","more":"<h3 id=\"了解cookie\"><a href=\"#了解cookie\" class=\"headerlink\" title=\"了解cookie\"></a>了解cookie</h3><p>当登录一个网站时，网站往往会请求用户输入用户名和密码，并且用户可以勾选“下次自动登录”。如果勾选了，那么下次访问同一网站时，用户会发现没输入用户名和密码就已经登录了。这正是因为前一次登录时，服务器发送了包含登录凭据（用户名加密码的某种加密形式）的Cookie到用户的硬盘上。第二次登录时，（如果该Cookie尚未到期）浏览器会发送该Cookie，服务器验证凭据，于是不必输入用户名和密码就让用户登录了。</p>\n<h3 id=\"cookie分类\"><a href=\"#cookie分类\" class=\"headerlink\" title=\"cookie分类\"></a>cookie分类</h3><p>Cookie总是保存在客户端中，按在客户端中的存储位置，可分为内存Cookie和硬盘Cookie。内存Cookie由浏览器维护，保存在内存中，浏览器关闭后就消失了，其存在时间是短暂的。硬盘Cookie保存在硬盘里，有一个过期时间，除非用户手工清理或到了过期时间，硬盘Cookie不会被删除，其存在时间是长期的。所以，按存在时间，可分为非持久Cookie和持久Cookie。</p>\n<h3 id=\"cookie的缺陷\"><a href=\"#cookie的缺陷\" class=\"headerlink\" title=\"cookie的缺陷\"></a>cookie的缺陷</h3><ul>\n<li>Cookie会被附加在每个HTTP请求中，所以无形中增加了流量。</li>\n<li>由于在HTTP请求中的Cookie是明文传递的，所以安全性成问题。（除非用HTTPS）</li>\n<li>Cookie的大小限制在4KB左右。对于复杂的存储需求来说是不够用的。[3]</li>\n</ul>\n<h3 id=\"session是什么技术\"><a href=\"#session是什么技术\" class=\"headerlink\" title=\"session是什么技术\"></a>session是什么技术</h3><p>session采用的是在服务器端保存状态数据的方案。当较多的用户数据长时间的储存在服务器上，会增加服务器的负担，因此session中的数据信息要尽可能的少。</p>\n<h3 id=\"关于session\"><a href=\"#关于session\" class=\"headerlink\" title=\"关于session\"></a>关于session</h3><ul>\n<li>session_id的名称可以修改么？可以通过session_name()来获取或者设置。</li>\n<li>session_id的值可以修改么？可以通过session_id()来获取或者设置。</li>\n<li>session文件在计算机中的保存路径可以修改么？可以通过session_save_path()来获取或者设置。windows系统上的默认值为“C:\\Windows\\Temp”。</li>\n<li>启动session会话后怎么做？通过session_start()函数启动回话后，接下来就可以注册session变量，PHP通过预定义数组来注册session变量，并且用isset()函数或者empty（）函数判断session变量是否注册。</li>\n</ul>\n<h3 id=\"session和cookie的区别。\"><a href=\"#session和cookie的区别。\" class=\"headerlink\" title=\"session和cookie的区别。\"></a>session和cookie的区别。</h3><ul>\n<li>cookie机制采用的是在客户端保存的方案，也就是说cookie数据存放在用户的浏览器上，而session机制采用的是在服务器端保存的方案，即session数据存放在服务器端。</li>\n<li>单个cookie文件的大小在客户端限制是3字节，而session文件大小在服务器段没有限制。</li>\n<li>恶意网站可以通过暗中读取用户cookie的方式来盗取用户的隐私信息，因此，考虑到安全性，应当减少cookie的使用，转而使用session。</li>\n<li>session将数据保存在服务器上，当访问增多时，会降低服务器的性能，因此，考虑到减轻服务器的负担，应当减少使用session，转而使用cookie。故建议在实际开发中，将重要的信息使用session保存，其他信息使用cookie保存。</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>用户访问一个服务器，服务器首先检客户端是否含有session标识（session id）。如果客户端已经创建过session，则服务器会把他检索出来使用，如果没有，服务器会为他重新创建一个相关联的session id，并返回给客户端。用户浏览器收到这个session id后，会在硬盘的指定目录下生成客户端的session文件。文件的命名格为”sess”+session_id，文件中包含的是回话的具体内容。就这样建立一个回话后，下一次http请求时，用户浏览器会将当前域名下所有的cookie发给服务器，服务器根据cookie 中的session_id来读取保存在计算机中的相应session文件，并从session文件中获取会话的内容。</p>\n<blockquote>\n<p>如有错误，欢迎指正！</p>\n</blockquote>"},{"title":"在IDEA中部署tomcat","date":"2017-06-23T03:21:35.000Z","_content":"\n最近要开发一个小程序的项目，必须要使用https协议，idea自带的tomcat不知道怎么配置成https协议的，就想着在idea中部署自己电脑中的tomcat。下面是在idea中部署tomcat的过程。环境：2017版的idea，tomcat8，jdk1.8。\n\n<!--more-->\n1.file->setting->Application Servers，添加本机的tomcat,起一个名字，选则tomcat所在的路径。\n ![](/images/选区_072.png)\n 2.Run->Edit Configurations,点击左上角的加号\n  ![](/images/选区_073.png)\n  起一个名字，然后点击右下角的apply。\n  3.打开Project Structure（ctrl+Alt+shift+s）\n  ![](/images/选区_074.png)\n  选择artifacts，然后选择红色方框中的web appliscation: Exploded.\n    ![](/images/选区_075.png)\n    然后点击加号，选择directory contentl，选择项目中的一个目录即可，因为我的项目中暂时没有视图层，因此暂时选择c层的目录。然后保存运行即可。\n\n4.这时点击运行，发现会在浏览器中访问localhost,但是服务器没有响应，会出现这样的界面\n![](/images/选区_080.png)\n 依次点击run->Debug Configurations \n![](/images/选区_076.png)\n 勾选方框中的内容，tomcat就能正常的运行了。\n       ","source":"_posts/在IDEA中部署tomcat.md","raw":"---\ntitle: 在IDEA中部署tomcat\ndate: 2017-06-23 11:21:35\ncategories: SpringMvc\n---\n\n最近要开发一个小程序的项目，必须要使用https协议，idea自带的tomcat不知道怎么配置成https协议的，就想着在idea中部署自己电脑中的tomcat。下面是在idea中部署tomcat的过程。环境：2017版的idea，tomcat8，jdk1.8。\n\n<!--more-->\n1.file->setting->Application Servers，添加本机的tomcat,起一个名字，选则tomcat所在的路径。\n ![](/images/选区_072.png)\n 2.Run->Edit Configurations,点击左上角的加号\n  ![](/images/选区_073.png)\n  起一个名字，然后点击右下角的apply。\n  3.打开Project Structure（ctrl+Alt+shift+s）\n  ![](/images/选区_074.png)\n  选择artifacts，然后选择红色方框中的web appliscation: Exploded.\n    ![](/images/选区_075.png)\n    然后点击加号，选择directory contentl，选择项目中的一个目录即可，因为我的项目中暂时没有视图层，因此暂时选择c层的目录。然后保存运行即可。\n\n4.这时点击运行，发现会在浏览器中访问localhost,但是服务器没有响应，会出现这样的界面\n![](/images/选区_080.png)\n 依次点击run->Debug Configurations \n![](/images/选区_076.png)\n 勾选方框中的内容，tomcat就能正常的运行了。\n       ","slug":"在IDEA中部署tomcat","published":1,"updated":"2017-06-26T13:15:31.105Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2enm001dnpjxabay1nd8","content":"<p>最近要开发一个小程序的项目，必须要使用https协议，idea自带的tomcat不知道怎么配置成https协议的，就想着在idea中部署自己电脑中的tomcat。下面是在idea中部署tomcat的过程。环境：2017版的idea，tomcat8，jdk1.8。</p>\n<a id=\"more\"></a>\n<p>1.file-&gt;setting-&gt;Application Servers，添加本机的tomcat,起一个名字，选则tomcat所在的路径。<br> <figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/选区_072.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br> 2.Run-&gt;Edit Configurations,点击左上角的加号<br>  <img src=\"/images/选区_073.png\" alt=\"\"><br>  起一个名字，然后点击右下角的apply。<br>  3.打开Project Structure（ctrl+Alt+shift+s）<br>  <img src=\"/images/选区_074.png\" alt=\"\"><br>  选择artifacts，然后选择红色方框中的web appliscation: Exploded.<br>    <img src=\"/images/选区_075.png\" alt=\"\"><br>    然后点击加号，选择directory contentl，选择项目中的一个目录即可，因为我的项目中暂时没有视图层，因此暂时选择c层的目录。然后保存运行即可。</p>\n<p>4.这时点击运行，发现会在浏览器中访问localhost,但是服务器没有响应，会出现这样的界面<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/选区_080.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br> 依次点击run-&gt;Debug Configurations<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/选区_076.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br> 勾选方框中的内容，tomcat就能正常的运行了。</p>\n","excerpt":"<p>最近要开发一个小程序的项目，必须要使用https协议，idea自带的tomcat不知道怎么配置成https协议的，就想着在idea中部署自己电脑中的tomcat。下面是在idea中部署tomcat的过程。环境：2017版的idea，tomcat8，jdk1.8。</p>","more":"<p>1.file-&gt;setting-&gt;Application Servers，添加本机的tomcat,起一个名字，选则tomcat所在的路径。<br> <figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/选区_072.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br> 2.Run-&gt;Edit Configurations,点击左上角的加号<br>  <img src=\"/images/选区_073.png\" alt=\"\"><br>  起一个名字，然后点击右下角的apply。<br>  3.打开Project Structure（ctrl+Alt+shift+s）<br>  <img src=\"/images/选区_074.png\" alt=\"\"><br>  选择artifacts，然后选择红色方框中的web appliscation: Exploded.<br>    <img src=\"/images/选区_075.png\" alt=\"\"><br>    然后点击加号，选择directory contentl，选择项目中的一个目录即可，因为我的项目中暂时没有视图层，因此暂时选择c层的目录。然后保存运行即可。</p>\n<p>4.这时点击运行，发现会在浏览器中访问localhost,但是服务器没有响应，会出现这样的界面<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/选区_080.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br> 依次点击run-&gt;Debug Configurations<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/选区_076.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br> 勾选方框中的内容，tomcat就能正常的运行了。</p>"},{"title":"基于链表的C语言信息管理系统","date":"2017-05-13T01:51:34.000Z","_content":"这两天学习了朋友推荐的[C语言链表视频教程](http://study.163.com/course/courseMain.htm?courseId=1003284031) ，有了对链表的初步认识。教程用C对单向链表的实现了基本的增删改查操作，以及将数据储存到文件中和从文件中读取的功能。\n\n<!--more-->\n\n### 认识链表\n![ ](https://upload.wikimedia.org/wikipedia/commons/6/6d/Singly-linked-list.svg  \"图片\")\n上图为单向链表的模型，图中包含三个节点，且每个节点包含两个部分，一部分保存或者显示节点的有关信息，一部分储存下一个节点的地址。从第一个节点依次指向最后一个节点，最后一个节点指向一个空值。如果需要查找链表的节点，则需要依次遍历节点。\n\n### 功能需求\n基于C语言链表，实现对学生表的基本增删改查操作，将学生数据保存至文件中，从文件中取出。并逐步完善系统，如在链表头和尾及指定位置增加学生信息，恢复删除学生信息等功能。\n### 整体规划\n定义学生节点STUNODE，声明链表的头和尾g_pHead，g_pEnd，使用switch语句，针对不同的指令，执行不同的命令。搭建学生信息管理系统的骨架。\n```\n//学生结点\ntypedef struct _STU\n{\n\tchar arrStuNum[10];\n\tchar arrStuName[10];\n\tint iStuScore;\n\tstruct _STU* pNext;\n} STUNODE;\n\n//声明链表的头和尾\nSTUNODE* g_pHead = NULL;\nSTUNODE* g_pEnd = NULL;\n```\n### 删除功能\n以删除功能为例，具体说明。分成只有一个节点或者多个节点两种情况讨论。\n\n+  只有一个节点。\n```\n//只有一个节点\nif (g_pHead == g_pEnd) {\n\tfree(g_pHead);\t\t//删除节点\n\tg_pHead = NULL;\t\t//把链表头赋值为NULL\n\tg_pEnd = NULL;\t\t//把链表尾赋值为NULL\n\treturn;\t\t\t\t//完成\n}\n```\n\n+  有多个节点。这种情况又需要讨论了，分为链表的头、尾、中间三种。\n```\n//如果是首节点\nif (g_pHead == pNode) {\n\tfree(g_pHead);\t\t\t\t//删除节点\n\tg_pHead = g_pHead->pNext;\t//指向想一个节点\n\treturn;\t\t\t\t\t\t//完成\n}\n//如果是尾节点\nSTUNODE* pTemp = g_pHead;\nif (g_pEnd == pNode) {\n\t//找到倒数第二个节点，并将指向空\n\twhile (pTemp->pNext != pNode) {\n\t\tpTemp = pTemp->pNext;\n\t}\n\tpTemp->pNext = NULL;\t\t\n\tg_pEnd = pTemp;\t\t\t\t//把倒数第二个链表赋值为链表尾\n\tfree(pNode);\t\t\t\t//删除节点\n\treturn;\t\t\t\t\t\t//完成\n}\t\n\n//如果是中间节点\nif (pNode != g_pHead && pNode != g_pEnd && g_pHead != g_pEnd) {\n\t//找出要删除的节点前一个\n\twhile (pTemp->pNext != pNode) {\n\t\tpTemp = pTemp->pNext;\n\t}\n\tpTemp->pNext = pNode->pNext;\t//剔除节点\n\tfree(pNode);\t\t\t\t\t//删除节点\n\treturn;\t\t\t\t\t\t\t//完成\n}\n```\n\t\n### 实现学生信息管理系统\n完成增删改查后，把链表的节点的属性拼接起来，然后写入制定的文件中。读取时，拆分字符串，再将学生信息存入链表中。\n效果如下：\n{% asciinema 5r01vujvrx4b3d1jlpdnui1kb %}\n\n代码如下：\n```\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n//学生结点\ntypedef struct _STU\n{\n\tchar arrStuNum[10];\n\tchar arrStuName[10];\n\tint iStuScore;\n\tstruct _STU* pNext;\n} STUNODE;\n\n//声明链表的头和尾\nSTUNODE* g_pHead = NULL;\nSTUNODE* g_pEnd = NULL;\n\n//添加一个学生信息\nvoid AddStuMSG(char arrStuNum[10], char arrStuName[10], int iStuScore);\n\n//链表头添加一个节点\nvoid AddStuMSGToLinkHead(char arrStuNum[10], char arrStuName[10], int iStuScore);\n\n//清空链表\nvoid FreeLinkData();\n\n//打印数据\nvoid ShowStuData();\n\n//显示指令\nvoid ShowOrder();\n\n//指定位置插入节点\nvoid InsertNode(STUNODE* pTemp, char arrStuNum[10], char arrStuName[10], int iStuScore);\n\n//查找制定学生\nSTUNODE* FindStuByNum(char* arrStuNum);\n\n//删除指定的学生\nvoid DeleteStuNode(STUNODE* pNode);\n\n//保存信息到文件中\nvoid SaveStuToFile();\n\n//读取文件中的学生信息\nvoid ReadStuFromFile();\n\nint main(void)\n{\n\tint nOrder = -1;\n\tchar arrStuNum[10] = {'\\0'};\n\tchar arrStuName[10] = {'\\0'};\n\tint iStuScore = -1;\n\tint nFlag = 1;\n\n\tprintf(\"***********学生信息管理系统************************\\n\");\n\tprintf(\"***********本系统操作指令如下**********************\\n\");\n\tprintf(\"***\t  1、增加一个学生信息（尾添加）\t\t***\\n\");\n\tprintf(\"***\t 11、增加一个学生信息（头添加）\t\t***\\n\");\n\tprintf(\"***\t111、增加一个学生信息（在指定位置添加） ***\\n\");\n\tprintf(\"***\t  2、查找指定学生的信息（姓名/学号） \t***\\n\");\n\tprintf(\"***\t  3、修改指定学生的信息\t\t\t***\\n\");\n\tprintf(\"***\t  4、保存业主的信息到文件中\t\t***\\n\");\n\tprintf(\"***\t  5、读取文件的业主信息\t\t\t***\\n\");\n\tprintf(\"***\t  6、删除指定学生的信息\t\t\t***\\n\");\n\tprintf(\"***\t  7、恢复删除的学生的信息\t\t***\\n\");\n\tprintf(\"***\t  9、显示所有学生的信息\t\t\t***\\n\");\n\tprintf(\"***\t  0、退出系统\t\t\t\t***\\n\");\n\n\t//读取文件中的学生信息\n\tReadStuFromFile();\n\n\twhile (nFlag)\n\t{\n\t\tprintf(\"请输入指令(10查看指令):\\n\");\n\t\t//printf(\"%p\\n\", &nOrder);\n\t\tscanf(\"%d\", &nOrder);\n\n\t\tswitch (nOrder)\n\t\t{\n\t\tcase 1:\n\t\t\t//添加一个学生信息\n\t\t\tprintf(\"输入学生的学号\\n\");\n\t\t\tscanf(\"%s\", arrStuNum);\n\t\t\tprintf(\"输入学生的姓名\\n\");\n\t\t\tscanf(\"%s\", arrStuName);\n\t\t\tprintf(\"输入学生的分数\\n\");\n\t\t\tscanf(\"%d\", &iStuScore);\n\n\t\t\tAddStuMSG(arrStuNum, arrStuName, iStuScore);\n\t\t\tbreak;\n\t\tcase 11:\n\t\t\t//添加一个学生信息\n\t\t\tprintf(\"输入学生的学号\\n\");\n\t\t\tscanf(\"%s\", arrStuNum);\n\t\t\tprintf(\"输入学生的姓名\\n\");\n\t\t\tscanf(\"%s\", arrStuName);\n\t\t\tprintf(\"输入学生的分数\\n\");\n\t\t\tscanf(\"%d\", &iStuScore);\n\n\t\t\tAddStuMSGToLinkHead(arrStuNum, arrStuName, iStuScore);\n\t\t\tbreak;\n\t\tcase 111:\n\t\t\t//指定位置添加学生\n\t\t\tprintf(\"输入指定学号\\n\");\n\t\t\tscanf(\"%s\", arrStuNum);\n\n\t\t\tSTUNODE* pTemp;\n\t\t\tpTemp = FindStuByNum(arrStuNum);\n\t\t\tif (NULL != pTemp) {\n\t\t\t\tprintf(\"输入学生的学号\\n\");\n\t\t\t\tscanf(\"%s\", arrStuNum);\n\t\t\t\tprintf(\"输入学生的姓名\\n\");\n\t\t\t\tscanf(\"%s\", arrStuName);\n\t\t\t\tprintf(\"输入学生的分数\\n\");\n\t\t\t\tscanf(\"%d\", &iStuScore);\n\n\t\t\t\tInsertNode(pTemp, arrStuNum,  arrStuName, iStuScore);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\t//查找指定学生的信息\n\t\t\tprintf(\"输入指定学号\\n\");\n\t\t\tscanf(\"%s\", arrStuNum);\n\n\t\t\tpTemp = FindStuByNum(arrStuNum);\n\n\t\t\t//打印\n\t\t\tif (NULL != pTemp) {\n\t\t\t\tprintf(\"学号:%s, 姓名:%s, 分数:%d\\n\", pTemp->arrStuNum, pTemp->arrStuName, pTemp->iStuScore);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\t//查找指定学生的信息\n\t\t\tprintf(\"输入指定学号\\n\");\n\t\t\tscanf(\"%s\", arrStuNum);\n\n\t\t\t//查找\n\t\t\tpTemp = FindStuByNum(arrStuNum);\n\n\t\t\t//打印\n\t\t\tif (NULL != pTemp) {\n\t\t\t\t//修改学号\n\t\t\t\tprintf(\"请输入学号\\n\");\n\t\t\t\tscanf(\"%s\", arrStuNum);\n\t\t\t\tstrcpy(pTemp->arrStuNum, arrStuNum);\n\n\t\t\t\t//修改名字\n\t\t\t\tprintf(\"请输入姓名\\n\");\n\t\t\t\tscanf(\"%s\", arrStuName);\n\t\t\t\tstrcpy(pTemp->arrStuName, arrStuName);\n\n\t\t\t\t//修改分数\n\t\t\t\tprintf(\"请输入分数\\n\");\n\t\t\t\tscanf(\"%d\", &iStuScore);\n\t\t\t\tpTemp->iStuScore = iStuScore;\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\t//保存学生信息\n\t\t\tSaveStuToFile();\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\t//删除一个节点 \n\t\t\tprintf(\"输入要删除的学生的学号\\n\");\n\t\t\tscanf(\"%s\", arrStuNum);\n\n\t\t\t//查找\n\t\t\tpTemp = FindStuByNum(arrStuNum);\n\n\t\t\t//删除一个节点\n\t\t\tif (NULL != pTemp) {\n\t\t\t\tDeleteStuNode(pTemp);\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 7:\n\t\t\t//恢复\n\t\t\tFreeLinkData();\n\t\t\tg_pHead = NULL;\n\t\t\tg_pEnd = NULL;\n\t\t\tReadStuFromFile();\n\t\t\tbreak;\n\t\tcase 9:\n\t\t\tShowStuData();\n\t\t\tbreak;\n\t\tcase 10:\n\t\t\t//查看指令\n\t\t\tShowOrder();\n\t\t\tbreak;\n\t\tcase 0:\n\t\t\tnFlag = 0;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tprintf(\"not right\\n\");\n\t\t}\n\t}\n\n\t//保存学生信息\n\tSaveStuToFile();\n\n\t//释放链表\n\tFreeLinkData();\n\treturn 0;\n}\n\n//添加一个学生信息\nvoid AddStuMSG(char arrStuNum[10], char arrStuName[10], int iStuScore)\n{\n\t//逻辑\n\t//创建一个节点\n\tSTUNODE* pTemp = (STUNODE*)malloc (sizeof (STUNODE));\n\t//检验参数的合法性\n\tif (NULL == arrStuNum || NULL == arrStuName || iStuScore < 0) {\n\t\tprintf(\"学生信息输入错误！\\n\");\n\t\treturn;\n\t}\n\n\t//赋值\n\tstrcpy(pTemp->arrStuNum, arrStuNum);\n\tstrcpy(pTemp->arrStuName, arrStuName);\n\tpTemp->iStuScore = iStuScore;\n\tpTemp->pNext = NULL;\n\n\t//接在链表上\n\tif (NULL == g_pHead || NULL == g_pEnd) {\n\t\tg_pHead = pTemp;\n\t} else {\n\t\tg_pEnd->pNext = pTemp;\n\t}\n\tg_pEnd = pTemp;\n\n} \n\nvoid FreeLinkData()\n{\n\tSTUNODE* pTemp = g_pHead;\n\twhile (g_pHead != NULL) {\n\t\t//记录结点\n\t\tpTemp = g_pHead;\n\t\t//向后移动一个\n\t\tg_pHead = g_pHead->pNext; \n\t\t//删除节点\n\t\tfree(pTemp);\n\t}\n}\n\n//打印数据\nvoid ShowStuData()\n{\n\tSTUNODE* pTemp = g_pHead;\n\twhile (NULL != pTemp)\n\t{\n\t\tprintf(\"学号:%s, 姓名:%s, 分数:%d\\n\", pTemp->arrStuNum, pTemp->arrStuName, pTemp->iStuScore);\n\t\t//向下走一步\n\t\tpTemp = pTemp->pNext;\n\t}\n}\n\n//显示指令\nvoid ShowOrder()\n{\n\tprintf(\"***********学生信息管理系统************************\\n\");\n\tprintf(\"***********本系统操作指令如下**********************\\n\");\n\tprintf(\"***\t  1、增加一个学生信息（尾添加）\t\t***\\n\");\n\tprintf(\"***\t 11、增加一个学生信息（头添加）\t\t***\\n\");\n\tprintf(\"***\t111、增加一个学生信息（在指定位置添加） ***\\n\");\n\tprintf(\"***\t  2、查找指定学生的信息（姓名/学号） \t***\\n\");\n\tprintf(\"***\t  3、修改指定学生的信息\t\t\t***\\n\");\n\tprintf(\"***\t  4、保存业主的信息到文件中\t\t***\\n\");\n\tprintf(\"***\t  5、读取文件的业主信息\t\t\t***\\n\");\n\tprintf(\"***\t  6、删除指定学生的信息\t\t\t***\\n\");\n\tprintf(\"***\t  7、恢复删除的学生的信息\t\t***\\n\");\n\tprintf(\"***\t  9、显示所有学生的信息\t\t\t***\\n\");\n\tprintf(\"***\t  0、退出系统\t\t\t\t***\\n\");\n}\n\nvoid AddStuMSGToLinkHead(char arrStuNum[10], char arrStuName[10], int iStuScore)\n{\n\t//创建一个节点\n\tSTUNODE* pTemp = (STUNODE*)malloc(sizeof(STUNODE));\n\t//检测参数合法性\n\tif (NULL == arrStuNum || NULL == arrStuName || iStuScore < 0)\n\t{\n\t\tprintf(\"学生信息输入错误！\\n\");\n\t\treturn;\n\t}\n\n\tstrcpy(pTemp->arrStuNum, arrStuNum);\n\tstrcpy(pTemp->arrStuName, arrStuName);\n\tpTemp->iStuScore = iStuScore;\n\tpTemp->pNext = NULL;\n\n\t//链表为空\n\tif (NULL == g_pHead || NULL == g_pEnd) {\n\t\tg_pEnd = pTemp;\n\t} else {\n\t\tpTemp->pNext = g_pHead;\n\t}\n\t\n\tg_pHead = pTemp;\n\n}\n\n//查找制定学生\nSTUNODE* FindStuByNum(char* arrStuNum)\n{\n\tSTUNODE* pTemp = g_pHead;\n\t//判断参数的合法性\n\tif (NULL == arrStuNum) {\n\t\tprintf(\"学号输入错误！\\n\");\n\t\treturn NULL;\n\t}\n\n\t//判断链表是否为空\n\tif (NULL == g_pHead || NULL ==g_pEnd) {\n\t\tprintf(\"链表为NULL！\\n\");\n\t\treturn NULL;\n\t}\n\n\t//遍历链表\n\twhile (NULL != pTemp) {\n\t\tif (0 == strcmp(pTemp->arrStuNum, arrStuNum)) {\n\t\t\treturn pTemp;\n\t\t}\n\n\t\tpTemp = pTemp->pNext;\n\t}\n\tprintf(\"查无此节点！\\n\");\n\treturn NULL;\n}\n\n//指定位置插入节点\nvoid InsertNode(STUNODE* pTemp, char arrStuNum[10], char arrStuName[10], int iStuScore)\n{\n\t//创建节点\n\tSTUNODE* pNewTemp = (STUNODE*)malloc(sizeof(STUNODE));\n\n\t//成员赋值\n\tstrcpy(pNewTemp->arrStuNum, arrStuNum);\n\tstrcpy(pNewTemp->arrStuName, arrStuName);\n\tpNewTemp->iStuScore = iStuScore;\n\tpNewTemp->pNext = NULL;\n\n\t//判断插入位置是否为未结点\n\tif (pTemp == g_pEnd) {\n\t\tg_pEnd->pNext = pNewTemp;\n\t\tg_pEnd = pNewTemp;\n\t} else {\n\t\tpNewTemp->pNext =  pTemp->pNext;\n\t\tpTemp->pNext =  pNewTemp;\n\t}\n}\n\n//删除指定的学生\nvoid DeleteStuNode(STUNODE* pNode)\n{\n\t//只有一个节点\n\tif (g_pHead == g_pEnd) {\n\t\tfree(g_pHead);\n\t\tg_pHead = NULL;\n\t\tg_pEnd = NULL;\n\t\treturn;\n\t}\n\n\t//如果是首节点\n\tif (g_pHead == pNode) {\n\t\tfree(g_pHead);\n\t\tg_pHead = g_pHead->pNext;\n\t\treturn;\n\t}\n\t//如果是尾节点\n\tSTUNODE* pTemp = g_pHead;\n\tif (g_pEnd == pNode) {\n\t\twhile (pTemp->pNext != pNode) {\n\t\t\tpTemp = pTemp->pNext;\n\t\t}\n\t\tpTemp->pNext = NULL;\n\t\tg_pEnd = pTemp;\n\t\tfree(pNode);\n\t\treturn;\n\t}\n\n\t//如果是中间节点\n\tif (pNode != g_pHead && pNode != g_pEnd && g_pHead != g_pEnd) {\n\t\twhile (pTemp->pNext != pNode) {\n\t\t\tpTemp = pTemp->pNext;\n\t\t}\n\t\tpTemp->pNext = pNode->pNext;\n\t\tfree(pNode);\n\t\treturn;\n\n\t}\n}\n\n//保存信息到文件中\nvoid SaveStuToFile()\n{\n\tFILE* pFile = NULL;\n\tSTUNODE* pTemp = g_pHead;\n\tchar strBuf[30] = {0};\n\tchar strScore[10] = {0};\n\n\t//判断链表中是否为null\n\tif (g_pHead == NULL) {\n\t\tprintf(\"没有学生\\n\");\n\t\treturn;\n\t}\n\n\t//打开文件\n\tpFile = fopen(\"dat.dat\", \"wb+\");\n\tif (NULL == pFile) {\n\t\tprintf(\"文件打开失败！\\n\");\n\t\treturn;\n\t}\n\t//操作文件指针\n\twhile (NULL != pTemp) {\n\t\t//学号赋值进去\n\t\tstrcpy(strBuf, pTemp->arrStuNum);\n\t\tstrcat(strBuf, \".\");\n\t\t//姓名\n\t\tstrcat(strBuf, pTemp->arrStuName);\n\t\tstrcat(strBuf, \".\");\n\t\t//分数\n\t\tsnprintf(strScore, 10, \"%d\", pTemp->iStuScore);  //linux下不能使用itoa函数，故用此代替\n\t\t//拼接字符串\n\t\tstrcat(strBuf, strScore);\n\n\t\tfwrite(strBuf, 1, strlen(strBuf), pFile);\n\t\tfwrite(\"\\r\\n\", 1, strlen(\"\\r\\n\"), pFile);\n\n\t\tpTemp = pTemp->pNext;\n\t}\n\t//关闭文件\n\tfclose(pFile);\n}\n\n//读取文件中的学生信息\nvoid ReadStuFromFile()\n{\n\tFILE* pFile = fopen(\"dat.dat\", \"rb+\");\n\tchar strBuf[30] = {0};\n\tchar strStuNum[10] = {0};\n\tchar strStuName[10] = {0};\n\tchar strStuScore[10] = {0};\n\tint nCount = 0;\n\tint iStuScore;\n\n\n\tif (NULL == pFile) {\n\t\tprintf(\"文件打开失败\\n\");\n\t\treturn;\n\t}\n\n\t//操作指针读取函数\n\t\n\twhile (NULL != fgets(strBuf, 30, pFile)) {\n\t\tint i = 0;\n\t\tint j = 0;\n\t\tint nCount = 0;\n\t\tfor (i = 0; strBuf[i] != '\\r'; i++) {\n\t\t\t//没到.\n\t\t\tif (0 == nCount) {\n\t\t\t\tstrStuNum[i] = strBuf[i];\n\t\t\t\tif ('.' == strBuf[i]) {\n\t\t\t\t\tstrStuNum[i] = '\\0';\n\t\t\t\t\tnCount++;\n\t\t\t\t}\n\t\t\t} else if (1 == nCount) {\n\t\t\t\tif ('.' != strBuf[i]) {\n\t\t\t\t\tstrStuName[j] = strBuf[i];\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif ('.' == strBuf[i]) {\n\t\t\t\t\tstrStuName[j] = '\\0';\n\t\t\t\t\tnCount++;\n\t\t\t\t\tj = 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tstrStuScore[j] = strBuf[i];\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\t//将学生的分数转化为int类型\n\t\tiStuScore = strtol(strStuScore, NULL, 10);\n\t\tAddStuMSG(strStuNum, strStuName, iStuScore);\n\t}\n\tfclose(pFile);\n}\n\n```","source":"_posts/基于链表的C语言信息管理系统.md","raw":"---\ntitle: 基于链表的C语言信息管理系统\ntags:  [demo,链表]\ncategories: [数据结构]\ndate: 2017-05-13 09:51:34\n---\n这两天学习了朋友推荐的[C语言链表视频教程](http://study.163.com/course/courseMain.htm?courseId=1003284031) ，有了对链表的初步认识。教程用C对单向链表的实现了基本的增删改查操作，以及将数据储存到文件中和从文件中读取的功能。\n\n<!--more-->\n\n### 认识链表\n![ ](https://upload.wikimedia.org/wikipedia/commons/6/6d/Singly-linked-list.svg  \"图片\")\n上图为单向链表的模型，图中包含三个节点，且每个节点包含两个部分，一部分保存或者显示节点的有关信息，一部分储存下一个节点的地址。从第一个节点依次指向最后一个节点，最后一个节点指向一个空值。如果需要查找链表的节点，则需要依次遍历节点。\n\n### 功能需求\n基于C语言链表，实现对学生表的基本增删改查操作，将学生数据保存至文件中，从文件中取出。并逐步完善系统，如在链表头和尾及指定位置增加学生信息，恢复删除学生信息等功能。\n### 整体规划\n定义学生节点STUNODE，声明链表的头和尾g_pHead，g_pEnd，使用switch语句，针对不同的指令，执行不同的命令。搭建学生信息管理系统的骨架。\n```\n//学生结点\ntypedef struct _STU\n{\n\tchar arrStuNum[10];\n\tchar arrStuName[10];\n\tint iStuScore;\n\tstruct _STU* pNext;\n} STUNODE;\n\n//声明链表的头和尾\nSTUNODE* g_pHead = NULL;\nSTUNODE* g_pEnd = NULL;\n```\n### 删除功能\n以删除功能为例，具体说明。分成只有一个节点或者多个节点两种情况讨论。\n\n+  只有一个节点。\n```\n//只有一个节点\nif (g_pHead == g_pEnd) {\n\tfree(g_pHead);\t\t//删除节点\n\tg_pHead = NULL;\t\t//把链表头赋值为NULL\n\tg_pEnd = NULL;\t\t//把链表尾赋值为NULL\n\treturn;\t\t\t\t//完成\n}\n```\n\n+  有多个节点。这种情况又需要讨论了，分为链表的头、尾、中间三种。\n```\n//如果是首节点\nif (g_pHead == pNode) {\n\tfree(g_pHead);\t\t\t\t//删除节点\n\tg_pHead = g_pHead->pNext;\t//指向想一个节点\n\treturn;\t\t\t\t\t\t//完成\n}\n//如果是尾节点\nSTUNODE* pTemp = g_pHead;\nif (g_pEnd == pNode) {\n\t//找到倒数第二个节点，并将指向空\n\twhile (pTemp->pNext != pNode) {\n\t\tpTemp = pTemp->pNext;\n\t}\n\tpTemp->pNext = NULL;\t\t\n\tg_pEnd = pTemp;\t\t\t\t//把倒数第二个链表赋值为链表尾\n\tfree(pNode);\t\t\t\t//删除节点\n\treturn;\t\t\t\t\t\t//完成\n}\t\n\n//如果是中间节点\nif (pNode != g_pHead && pNode != g_pEnd && g_pHead != g_pEnd) {\n\t//找出要删除的节点前一个\n\twhile (pTemp->pNext != pNode) {\n\t\tpTemp = pTemp->pNext;\n\t}\n\tpTemp->pNext = pNode->pNext;\t//剔除节点\n\tfree(pNode);\t\t\t\t\t//删除节点\n\treturn;\t\t\t\t\t\t\t//完成\n}\n```\n\t\n### 实现学生信息管理系统\n完成增删改查后，把链表的节点的属性拼接起来，然后写入制定的文件中。读取时，拆分字符串，再将学生信息存入链表中。\n效果如下：\n{% asciinema 5r01vujvrx4b3d1jlpdnui1kb %}\n\n代码如下：\n```\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n//学生结点\ntypedef struct _STU\n{\n\tchar arrStuNum[10];\n\tchar arrStuName[10];\n\tint iStuScore;\n\tstruct _STU* pNext;\n} STUNODE;\n\n//声明链表的头和尾\nSTUNODE* g_pHead = NULL;\nSTUNODE* g_pEnd = NULL;\n\n//添加一个学生信息\nvoid AddStuMSG(char arrStuNum[10], char arrStuName[10], int iStuScore);\n\n//链表头添加一个节点\nvoid AddStuMSGToLinkHead(char arrStuNum[10], char arrStuName[10], int iStuScore);\n\n//清空链表\nvoid FreeLinkData();\n\n//打印数据\nvoid ShowStuData();\n\n//显示指令\nvoid ShowOrder();\n\n//指定位置插入节点\nvoid InsertNode(STUNODE* pTemp, char arrStuNum[10], char arrStuName[10], int iStuScore);\n\n//查找制定学生\nSTUNODE* FindStuByNum(char* arrStuNum);\n\n//删除指定的学生\nvoid DeleteStuNode(STUNODE* pNode);\n\n//保存信息到文件中\nvoid SaveStuToFile();\n\n//读取文件中的学生信息\nvoid ReadStuFromFile();\n\nint main(void)\n{\n\tint nOrder = -1;\n\tchar arrStuNum[10] = {'\\0'};\n\tchar arrStuName[10] = {'\\0'};\n\tint iStuScore = -1;\n\tint nFlag = 1;\n\n\tprintf(\"***********学生信息管理系统************************\\n\");\n\tprintf(\"***********本系统操作指令如下**********************\\n\");\n\tprintf(\"***\t  1、增加一个学生信息（尾添加）\t\t***\\n\");\n\tprintf(\"***\t 11、增加一个学生信息（头添加）\t\t***\\n\");\n\tprintf(\"***\t111、增加一个学生信息（在指定位置添加） ***\\n\");\n\tprintf(\"***\t  2、查找指定学生的信息（姓名/学号） \t***\\n\");\n\tprintf(\"***\t  3、修改指定学生的信息\t\t\t***\\n\");\n\tprintf(\"***\t  4、保存业主的信息到文件中\t\t***\\n\");\n\tprintf(\"***\t  5、读取文件的业主信息\t\t\t***\\n\");\n\tprintf(\"***\t  6、删除指定学生的信息\t\t\t***\\n\");\n\tprintf(\"***\t  7、恢复删除的学生的信息\t\t***\\n\");\n\tprintf(\"***\t  9、显示所有学生的信息\t\t\t***\\n\");\n\tprintf(\"***\t  0、退出系统\t\t\t\t***\\n\");\n\n\t//读取文件中的学生信息\n\tReadStuFromFile();\n\n\twhile (nFlag)\n\t{\n\t\tprintf(\"请输入指令(10查看指令):\\n\");\n\t\t//printf(\"%p\\n\", &nOrder);\n\t\tscanf(\"%d\", &nOrder);\n\n\t\tswitch (nOrder)\n\t\t{\n\t\tcase 1:\n\t\t\t//添加一个学生信息\n\t\t\tprintf(\"输入学生的学号\\n\");\n\t\t\tscanf(\"%s\", arrStuNum);\n\t\t\tprintf(\"输入学生的姓名\\n\");\n\t\t\tscanf(\"%s\", arrStuName);\n\t\t\tprintf(\"输入学生的分数\\n\");\n\t\t\tscanf(\"%d\", &iStuScore);\n\n\t\t\tAddStuMSG(arrStuNum, arrStuName, iStuScore);\n\t\t\tbreak;\n\t\tcase 11:\n\t\t\t//添加一个学生信息\n\t\t\tprintf(\"输入学生的学号\\n\");\n\t\t\tscanf(\"%s\", arrStuNum);\n\t\t\tprintf(\"输入学生的姓名\\n\");\n\t\t\tscanf(\"%s\", arrStuName);\n\t\t\tprintf(\"输入学生的分数\\n\");\n\t\t\tscanf(\"%d\", &iStuScore);\n\n\t\t\tAddStuMSGToLinkHead(arrStuNum, arrStuName, iStuScore);\n\t\t\tbreak;\n\t\tcase 111:\n\t\t\t//指定位置添加学生\n\t\t\tprintf(\"输入指定学号\\n\");\n\t\t\tscanf(\"%s\", arrStuNum);\n\n\t\t\tSTUNODE* pTemp;\n\t\t\tpTemp = FindStuByNum(arrStuNum);\n\t\t\tif (NULL != pTemp) {\n\t\t\t\tprintf(\"输入学生的学号\\n\");\n\t\t\t\tscanf(\"%s\", arrStuNum);\n\t\t\t\tprintf(\"输入学生的姓名\\n\");\n\t\t\t\tscanf(\"%s\", arrStuName);\n\t\t\t\tprintf(\"输入学生的分数\\n\");\n\t\t\t\tscanf(\"%d\", &iStuScore);\n\n\t\t\t\tInsertNode(pTemp, arrStuNum,  arrStuName, iStuScore);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\t//查找指定学生的信息\n\t\t\tprintf(\"输入指定学号\\n\");\n\t\t\tscanf(\"%s\", arrStuNum);\n\n\t\t\tpTemp = FindStuByNum(arrStuNum);\n\n\t\t\t//打印\n\t\t\tif (NULL != pTemp) {\n\t\t\t\tprintf(\"学号:%s, 姓名:%s, 分数:%d\\n\", pTemp->arrStuNum, pTemp->arrStuName, pTemp->iStuScore);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\t//查找指定学生的信息\n\t\t\tprintf(\"输入指定学号\\n\");\n\t\t\tscanf(\"%s\", arrStuNum);\n\n\t\t\t//查找\n\t\t\tpTemp = FindStuByNum(arrStuNum);\n\n\t\t\t//打印\n\t\t\tif (NULL != pTemp) {\n\t\t\t\t//修改学号\n\t\t\t\tprintf(\"请输入学号\\n\");\n\t\t\t\tscanf(\"%s\", arrStuNum);\n\t\t\t\tstrcpy(pTemp->arrStuNum, arrStuNum);\n\n\t\t\t\t//修改名字\n\t\t\t\tprintf(\"请输入姓名\\n\");\n\t\t\t\tscanf(\"%s\", arrStuName);\n\t\t\t\tstrcpy(pTemp->arrStuName, arrStuName);\n\n\t\t\t\t//修改分数\n\t\t\t\tprintf(\"请输入分数\\n\");\n\t\t\t\tscanf(\"%d\", &iStuScore);\n\t\t\t\tpTemp->iStuScore = iStuScore;\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\t//保存学生信息\n\t\t\tSaveStuToFile();\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\t//删除一个节点 \n\t\t\tprintf(\"输入要删除的学生的学号\\n\");\n\t\t\tscanf(\"%s\", arrStuNum);\n\n\t\t\t//查找\n\t\t\tpTemp = FindStuByNum(arrStuNum);\n\n\t\t\t//删除一个节点\n\t\t\tif (NULL != pTemp) {\n\t\t\t\tDeleteStuNode(pTemp);\n\t\t\t}\n\n\t\t\tbreak;\n\t\tcase 7:\n\t\t\t//恢复\n\t\t\tFreeLinkData();\n\t\t\tg_pHead = NULL;\n\t\t\tg_pEnd = NULL;\n\t\t\tReadStuFromFile();\n\t\t\tbreak;\n\t\tcase 9:\n\t\t\tShowStuData();\n\t\t\tbreak;\n\t\tcase 10:\n\t\t\t//查看指令\n\t\t\tShowOrder();\n\t\t\tbreak;\n\t\tcase 0:\n\t\t\tnFlag = 0;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tprintf(\"not right\\n\");\n\t\t}\n\t}\n\n\t//保存学生信息\n\tSaveStuToFile();\n\n\t//释放链表\n\tFreeLinkData();\n\treturn 0;\n}\n\n//添加一个学生信息\nvoid AddStuMSG(char arrStuNum[10], char arrStuName[10], int iStuScore)\n{\n\t//逻辑\n\t//创建一个节点\n\tSTUNODE* pTemp = (STUNODE*)malloc (sizeof (STUNODE));\n\t//检验参数的合法性\n\tif (NULL == arrStuNum || NULL == arrStuName || iStuScore < 0) {\n\t\tprintf(\"学生信息输入错误！\\n\");\n\t\treturn;\n\t}\n\n\t//赋值\n\tstrcpy(pTemp->arrStuNum, arrStuNum);\n\tstrcpy(pTemp->arrStuName, arrStuName);\n\tpTemp->iStuScore = iStuScore;\n\tpTemp->pNext = NULL;\n\n\t//接在链表上\n\tif (NULL == g_pHead || NULL == g_pEnd) {\n\t\tg_pHead = pTemp;\n\t} else {\n\t\tg_pEnd->pNext = pTemp;\n\t}\n\tg_pEnd = pTemp;\n\n} \n\nvoid FreeLinkData()\n{\n\tSTUNODE* pTemp = g_pHead;\n\twhile (g_pHead != NULL) {\n\t\t//记录结点\n\t\tpTemp = g_pHead;\n\t\t//向后移动一个\n\t\tg_pHead = g_pHead->pNext; \n\t\t//删除节点\n\t\tfree(pTemp);\n\t}\n}\n\n//打印数据\nvoid ShowStuData()\n{\n\tSTUNODE* pTemp = g_pHead;\n\twhile (NULL != pTemp)\n\t{\n\t\tprintf(\"学号:%s, 姓名:%s, 分数:%d\\n\", pTemp->arrStuNum, pTemp->arrStuName, pTemp->iStuScore);\n\t\t//向下走一步\n\t\tpTemp = pTemp->pNext;\n\t}\n}\n\n//显示指令\nvoid ShowOrder()\n{\n\tprintf(\"***********学生信息管理系统************************\\n\");\n\tprintf(\"***********本系统操作指令如下**********************\\n\");\n\tprintf(\"***\t  1、增加一个学生信息（尾添加）\t\t***\\n\");\n\tprintf(\"***\t 11、增加一个学生信息（头添加）\t\t***\\n\");\n\tprintf(\"***\t111、增加一个学生信息（在指定位置添加） ***\\n\");\n\tprintf(\"***\t  2、查找指定学生的信息（姓名/学号） \t***\\n\");\n\tprintf(\"***\t  3、修改指定学生的信息\t\t\t***\\n\");\n\tprintf(\"***\t  4、保存业主的信息到文件中\t\t***\\n\");\n\tprintf(\"***\t  5、读取文件的业主信息\t\t\t***\\n\");\n\tprintf(\"***\t  6、删除指定学生的信息\t\t\t***\\n\");\n\tprintf(\"***\t  7、恢复删除的学生的信息\t\t***\\n\");\n\tprintf(\"***\t  9、显示所有学生的信息\t\t\t***\\n\");\n\tprintf(\"***\t  0、退出系统\t\t\t\t***\\n\");\n}\n\nvoid AddStuMSGToLinkHead(char arrStuNum[10], char arrStuName[10], int iStuScore)\n{\n\t//创建一个节点\n\tSTUNODE* pTemp = (STUNODE*)malloc(sizeof(STUNODE));\n\t//检测参数合法性\n\tif (NULL == arrStuNum || NULL == arrStuName || iStuScore < 0)\n\t{\n\t\tprintf(\"学生信息输入错误！\\n\");\n\t\treturn;\n\t}\n\n\tstrcpy(pTemp->arrStuNum, arrStuNum);\n\tstrcpy(pTemp->arrStuName, arrStuName);\n\tpTemp->iStuScore = iStuScore;\n\tpTemp->pNext = NULL;\n\n\t//链表为空\n\tif (NULL == g_pHead || NULL == g_pEnd) {\n\t\tg_pEnd = pTemp;\n\t} else {\n\t\tpTemp->pNext = g_pHead;\n\t}\n\t\n\tg_pHead = pTemp;\n\n}\n\n//查找制定学生\nSTUNODE* FindStuByNum(char* arrStuNum)\n{\n\tSTUNODE* pTemp = g_pHead;\n\t//判断参数的合法性\n\tif (NULL == arrStuNum) {\n\t\tprintf(\"学号输入错误！\\n\");\n\t\treturn NULL;\n\t}\n\n\t//判断链表是否为空\n\tif (NULL == g_pHead || NULL ==g_pEnd) {\n\t\tprintf(\"链表为NULL！\\n\");\n\t\treturn NULL;\n\t}\n\n\t//遍历链表\n\twhile (NULL != pTemp) {\n\t\tif (0 == strcmp(pTemp->arrStuNum, arrStuNum)) {\n\t\t\treturn pTemp;\n\t\t}\n\n\t\tpTemp = pTemp->pNext;\n\t}\n\tprintf(\"查无此节点！\\n\");\n\treturn NULL;\n}\n\n//指定位置插入节点\nvoid InsertNode(STUNODE* pTemp, char arrStuNum[10], char arrStuName[10], int iStuScore)\n{\n\t//创建节点\n\tSTUNODE* pNewTemp = (STUNODE*)malloc(sizeof(STUNODE));\n\n\t//成员赋值\n\tstrcpy(pNewTemp->arrStuNum, arrStuNum);\n\tstrcpy(pNewTemp->arrStuName, arrStuName);\n\tpNewTemp->iStuScore = iStuScore;\n\tpNewTemp->pNext = NULL;\n\n\t//判断插入位置是否为未结点\n\tif (pTemp == g_pEnd) {\n\t\tg_pEnd->pNext = pNewTemp;\n\t\tg_pEnd = pNewTemp;\n\t} else {\n\t\tpNewTemp->pNext =  pTemp->pNext;\n\t\tpTemp->pNext =  pNewTemp;\n\t}\n}\n\n//删除指定的学生\nvoid DeleteStuNode(STUNODE* pNode)\n{\n\t//只有一个节点\n\tif (g_pHead == g_pEnd) {\n\t\tfree(g_pHead);\n\t\tg_pHead = NULL;\n\t\tg_pEnd = NULL;\n\t\treturn;\n\t}\n\n\t//如果是首节点\n\tif (g_pHead == pNode) {\n\t\tfree(g_pHead);\n\t\tg_pHead = g_pHead->pNext;\n\t\treturn;\n\t}\n\t//如果是尾节点\n\tSTUNODE* pTemp = g_pHead;\n\tif (g_pEnd == pNode) {\n\t\twhile (pTemp->pNext != pNode) {\n\t\t\tpTemp = pTemp->pNext;\n\t\t}\n\t\tpTemp->pNext = NULL;\n\t\tg_pEnd = pTemp;\n\t\tfree(pNode);\n\t\treturn;\n\t}\n\n\t//如果是中间节点\n\tif (pNode != g_pHead && pNode != g_pEnd && g_pHead != g_pEnd) {\n\t\twhile (pTemp->pNext != pNode) {\n\t\t\tpTemp = pTemp->pNext;\n\t\t}\n\t\tpTemp->pNext = pNode->pNext;\n\t\tfree(pNode);\n\t\treturn;\n\n\t}\n}\n\n//保存信息到文件中\nvoid SaveStuToFile()\n{\n\tFILE* pFile = NULL;\n\tSTUNODE* pTemp = g_pHead;\n\tchar strBuf[30] = {0};\n\tchar strScore[10] = {0};\n\n\t//判断链表中是否为null\n\tif (g_pHead == NULL) {\n\t\tprintf(\"没有学生\\n\");\n\t\treturn;\n\t}\n\n\t//打开文件\n\tpFile = fopen(\"dat.dat\", \"wb+\");\n\tif (NULL == pFile) {\n\t\tprintf(\"文件打开失败！\\n\");\n\t\treturn;\n\t}\n\t//操作文件指针\n\twhile (NULL != pTemp) {\n\t\t//学号赋值进去\n\t\tstrcpy(strBuf, pTemp->arrStuNum);\n\t\tstrcat(strBuf, \".\");\n\t\t//姓名\n\t\tstrcat(strBuf, pTemp->arrStuName);\n\t\tstrcat(strBuf, \".\");\n\t\t//分数\n\t\tsnprintf(strScore, 10, \"%d\", pTemp->iStuScore);  //linux下不能使用itoa函数，故用此代替\n\t\t//拼接字符串\n\t\tstrcat(strBuf, strScore);\n\n\t\tfwrite(strBuf, 1, strlen(strBuf), pFile);\n\t\tfwrite(\"\\r\\n\", 1, strlen(\"\\r\\n\"), pFile);\n\n\t\tpTemp = pTemp->pNext;\n\t}\n\t//关闭文件\n\tfclose(pFile);\n}\n\n//读取文件中的学生信息\nvoid ReadStuFromFile()\n{\n\tFILE* pFile = fopen(\"dat.dat\", \"rb+\");\n\tchar strBuf[30] = {0};\n\tchar strStuNum[10] = {0};\n\tchar strStuName[10] = {0};\n\tchar strStuScore[10] = {0};\n\tint nCount = 0;\n\tint iStuScore;\n\n\n\tif (NULL == pFile) {\n\t\tprintf(\"文件打开失败\\n\");\n\t\treturn;\n\t}\n\n\t//操作指针读取函数\n\t\n\twhile (NULL != fgets(strBuf, 30, pFile)) {\n\t\tint i = 0;\n\t\tint j = 0;\n\t\tint nCount = 0;\n\t\tfor (i = 0; strBuf[i] != '\\r'; i++) {\n\t\t\t//没到.\n\t\t\tif (0 == nCount) {\n\t\t\t\tstrStuNum[i] = strBuf[i];\n\t\t\t\tif ('.' == strBuf[i]) {\n\t\t\t\t\tstrStuNum[i] = '\\0';\n\t\t\t\t\tnCount++;\n\t\t\t\t}\n\t\t\t} else if (1 == nCount) {\n\t\t\t\tif ('.' != strBuf[i]) {\n\t\t\t\t\tstrStuName[j] = strBuf[i];\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif ('.' == strBuf[i]) {\n\t\t\t\t\tstrStuName[j] = '\\0';\n\t\t\t\t\tnCount++;\n\t\t\t\t\tj = 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tstrStuScore[j] = strBuf[i];\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\t//将学生的分数转化为int类型\n\t\tiStuScore = strtol(strStuScore, NULL, 10);\n\t\tAddStuMSG(strStuNum, strStuName, iStuScore);\n\t}\n\tfclose(pFile);\n}\n\n```","slug":"基于链表的C语言信息管理系统","published":1,"updated":"2017-07-30T03:05:55.009Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2enp001gnpjxu7c85enf","content":"<p>这两天学习了朋友推荐的<a href=\"http://study.163.com/course/courseMain.htm?courseId=1003284031\" target=\"_blank\" rel=\"external\">C语言链表视频教程</a> ，有了对链表的初步认识。教程用C对单向链表的实现了基本的增删改查操作，以及将数据储存到文件中和从文件中读取的功能。</p>\n<a id=\"more\"></a>\n<h3 id=\"认识链表\"><a href=\"#认识链表\" class=\"headerlink\" title=\"认识链表\"></a>认识链表</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6d/Singly-linked-list.svg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>上图为单向链表的模型，图中包含三个节点，且每个节点包含两个部分，一部分保存或者显示节点的有关信息，一部分储存下一个节点的地址。从第一个节点依次指向最后一个节点，最后一个节点指向一个空值。如果需要查找链表的节点，则需要依次遍历节点。</p>\n<h3 id=\"功能需求\"><a href=\"#功能需求\" class=\"headerlink\" title=\"功能需求\"></a>功能需求</h3><p>基于C语言链表，实现对学生表的基本增删改查操作，将学生数据保存至文件中，从文件中取出。并逐步完善系统，如在链表头和尾及指定位置增加学生信息，恢复删除学生信息等功能。</p>\n<h3 id=\"整体规划\"><a href=\"#整体规划\" class=\"headerlink\" title=\"整体规划\"></a>整体规划</h3><p>定义学生节点STUNODE，声明链表的头和尾g_pHead，g_pEnd，使用switch语句，针对不同的指令，执行不同的命令。搭建学生信息管理系统的骨架。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//学生结点</span></div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> _<span class=\"title\">STU</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"keyword\">char</span> arrStuNum[<span class=\"number\">10</span>];</div><div class=\"line\">\t<span class=\"keyword\">char</span> arrStuName[<span class=\"number\">10</span>];</div><div class=\"line\">\t<span class=\"keyword\">int</span> iStuScore;</div><div class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> _<span class=\"title\">STU</span>* <span class=\"title\">pNext</span>;</span></div><div class=\"line\">&#125; STUNODE;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//声明链表的头和尾</span></div><div class=\"line\">STUNODE* g_pHead = <span class=\"literal\">NULL</span>;</div><div class=\"line\">STUNODE* g_pEnd = <span class=\"literal\">NULL</span>;</div></pre></td></tr></table></figure></p>\n<h3 id=\"删除功能\"><a href=\"#删除功能\" class=\"headerlink\" title=\"删除功能\"></a>删除功能</h3><p>以删除功能为例，具体说明。分成只有一个节点或者多个节点两种情况讨论。</p>\n<ul>\n<li><p>只有一个节点。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//只有一个节点</span></div><div class=\"line\"><span class=\"keyword\">if</span> (g_pHead == g_pEnd) &#123;</div><div class=\"line\">\t<span class=\"built_in\">free</span>(g_pHead);\t\t<span class=\"comment\">//删除节点</span></div><div class=\"line\">\tg_pHead = <span class=\"literal\">NULL</span>;\t\t<span class=\"comment\">//把链表头赋值为NULL</span></div><div class=\"line\">\tg_pEnd = <span class=\"literal\">NULL</span>;\t\t<span class=\"comment\">//把链表尾赋值为NULL</span></div><div class=\"line\">\t<span class=\"keyword\">return</span>;\t\t\t\t<span class=\"comment\">//完成</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>有多个节点。这种情况又需要讨论了，分为链表的头、尾、中间三种。</p>\n<figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//如果是首节点</span></div><div class=\"line\"><span class=\"keyword\">if</span> (g_pHead == pNode) &#123;</div><div class=\"line\">\tfree(g_pHead);\t\t\t\t<span class=\"comment\">//删除节点</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"title\">g_pHead</span> = g_pHead-&gt;</span>pNext;\t<span class=\"comment\">//指向想一个节点</span></div><div class=\"line\">\treturn;\t\t\t\t\t\t<span class=\"comment\">//完成</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//如果是尾节点</span></div><div class=\"line\">STUNODE* pTemp = g_pHead;</div><div class=\"line\"><span class=\"keyword\">if</span> (g_pEnd == pNode) &#123;</div><div class=\"line\">\t<span class=\"comment\">//找到倒数第二个节点，并将指向空</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"title\">while</span> (pTemp-&gt;</span>pNext != pNode) &#123;</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"title\">pTemp</span> = pTemp-&gt;</span>pNext;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"title\">pTemp</span>-&gt;</span>pNext = NULL;\t\t</div><div class=\"line\">\tg_pEnd = pTemp;\t\t\t\t<span class=\"comment\">//把倒数第二个链表赋值为链表尾</span></div><div class=\"line\">\tfree(pNode);\t\t\t\t<span class=\"comment\">//删除节点</span></div><div class=\"line\">\treturn;\t\t\t\t\t\t<span class=\"comment\">//完成</span></div><div class=\"line\">&#125;\t</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//如果是中间节点</span></div><div class=\"line\"><span class=\"keyword\">if</span> (pNode != g_pHead &amp;&amp; pNode != g_pEnd &amp;&amp; g_pHead != g_pEnd) &#123;</div><div class=\"line\">\t<span class=\"comment\">//找出要删除的节点前一个</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"title\">while</span> (pTemp-&gt;</span>pNext != pNode) &#123;</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"title\">pTemp</span> = pTemp-&gt;</span>pNext;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"title\">pTemp</span>-&gt;</span><span class=\"function\"><span class=\"title\">pNext</span> = pNode-&gt;</span>pNext;\t<span class=\"comment\">//剔除节点</span></div><div class=\"line\">\tfree(pNode);\t\t\t\t\t<span class=\"comment\">//删除节点</span></div><div class=\"line\">\treturn;\t\t\t\t\t\t\t<span class=\"comment\">//完成</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"实现学生信息管理系统\"><a href=\"#实现学生信息管理系统\" class=\"headerlink\" title=\"实现学生信息管理系统\"></a>实现学生信息管理系统</h3><p>完成增删改查后，把链表的节点的属性拼接起来，然后写入制定的文件中。读取时，拆分字符串，再将学生信息存入链表中。<br>效果如下：<br><script type=\"text/javascript\" src=\"https://asciinema.org/a/5r01vujvrx4b3d1jlpdnui1kb.js\" id=\"asciicast-5r01vujvrx4b3d1jlpdnui1kb\" async></script></p>\n<p>代码如下：<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div><div class=\"line\">333</div><div class=\"line\">334</div><div class=\"line\">335</div><div class=\"line\">336</div><div class=\"line\">337</div><div class=\"line\">338</div><div class=\"line\">339</div><div class=\"line\">340</div><div class=\"line\">341</div><div class=\"line\">342</div><div class=\"line\">343</div><div class=\"line\">344</div><div class=\"line\">345</div><div class=\"line\">346</div><div class=\"line\">347</div><div class=\"line\">348</div><div class=\"line\">349</div><div class=\"line\">350</div><div class=\"line\">351</div><div class=\"line\">352</div><div class=\"line\">353</div><div class=\"line\">354</div><div class=\"line\">355</div><div class=\"line\">356</div><div class=\"line\">357</div><div class=\"line\">358</div><div class=\"line\">359</div><div class=\"line\">360</div><div class=\"line\">361</div><div class=\"line\">362</div><div class=\"line\">363</div><div class=\"line\">364</div><div class=\"line\">365</div><div class=\"line\">366</div><div class=\"line\">367</div><div class=\"line\">368</div><div class=\"line\">369</div><div class=\"line\">370</div><div class=\"line\">371</div><div class=\"line\">372</div><div class=\"line\">373</div><div class=\"line\">374</div><div class=\"line\">375</div><div class=\"line\">376</div><div class=\"line\">377</div><div class=\"line\">378</div><div class=\"line\">379</div><div class=\"line\">380</div><div class=\"line\">381</div><div class=\"line\">382</div><div class=\"line\">383</div><div class=\"line\">384</div><div class=\"line\">385</div><div class=\"line\">386</div><div class=\"line\">387</div><div class=\"line\">388</div><div class=\"line\">389</div><div class=\"line\">390</div><div class=\"line\">391</div><div class=\"line\">392</div><div class=\"line\">393</div><div class=\"line\">394</div><div class=\"line\">395</div><div class=\"line\">396</div><div class=\"line\">397</div><div class=\"line\">398</div><div class=\"line\">399</div><div class=\"line\">400</div><div class=\"line\">401</div><div class=\"line\">402</div><div class=\"line\">403</div><div class=\"line\">404</div><div class=\"line\">405</div><div class=\"line\">406</div><div class=\"line\">407</div><div class=\"line\">408</div><div class=\"line\">409</div><div class=\"line\">410</div><div class=\"line\">411</div><div class=\"line\">412</div><div class=\"line\">413</div><div class=\"line\">414</div><div class=\"line\">415</div><div class=\"line\">416</div><div class=\"line\">417</div><div class=\"line\">418</div><div class=\"line\">419</div><div class=\"line\">420</div><div class=\"line\">421</div><div class=\"line\">422</div><div class=\"line\">423</div><div class=\"line\">424</div><div class=\"line\">425</div><div class=\"line\">426</div><div class=\"line\">427</div><div class=\"line\">428</div><div class=\"line\">429</div><div class=\"line\">430</div><div class=\"line\">431</div><div class=\"line\">432</div><div class=\"line\">433</div><div class=\"line\">434</div><div class=\"line\">435</div><div class=\"line\">436</div><div class=\"line\">437</div><div class=\"line\">438</div><div class=\"line\">439</div><div class=\"line\">440</div><div class=\"line\">441</div><div class=\"line\">442</div><div class=\"line\">443</div><div class=\"line\">444</div><div class=\"line\">445</div><div class=\"line\">446</div><div class=\"line\">447</div><div class=\"line\">448</div><div class=\"line\">449</div><div class=\"line\">450</div><div class=\"line\">451</div><div class=\"line\">452</div><div class=\"line\">453</div><div class=\"line\">454</div><div class=\"line\">455</div><div class=\"line\">456</div><div class=\"line\">457</div><div class=\"line\">458</div><div class=\"line\">459</div><div class=\"line\">460</div><div class=\"line\">461</div><div class=\"line\">462</div><div class=\"line\">463</div><div class=\"line\">464</div><div class=\"line\">465</div><div class=\"line\">466</div><div class=\"line\">467</div><div class=\"line\">468</div><div class=\"line\">469</div><div class=\"line\">470</div><div class=\"line\">471</div><div class=\"line\">472</div><div class=\"line\">473</div><div class=\"line\">474</div><div class=\"line\">475</div><div class=\"line\">476</div><div class=\"line\">477</div><div class=\"line\">478</div><div class=\"line\">479</div><div class=\"line\">480</div><div class=\"line\">481</div><div class=\"line\">482</div><div class=\"line\">483</div><div class=\"line\">484</div><div class=\"line\">485</div><div class=\"line\">486</div><div class=\"line\">487</div><div class=\"line\">488</div><div class=\"line\">489</div><div class=\"line\">490</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"><span class=\"comment\">//学生结点</span></div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> _<span class=\"title\">STU</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"keyword\">char</span> arrStuNum[<span class=\"number\">10</span>];</div><div class=\"line\">\t<span class=\"keyword\">char</span> arrStuName[<span class=\"number\">10</span>];</div><div class=\"line\">\t<span class=\"keyword\">int</span> iStuScore;</div><div class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> _<span class=\"title\">STU</span>* <span class=\"title\">pNext</span>;</span></div><div class=\"line\">&#125; STUNODE;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//声明链表的头和尾</span></div><div class=\"line\">STUNODE* g_pHead = <span class=\"literal\">NULL</span>;</div><div class=\"line\">STUNODE* g_pEnd = <span class=\"literal\">NULL</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//添加一个学生信息</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">AddStuMSG</span><span class=\"params\">(<span class=\"keyword\">char</span> arrStuNum[<span class=\"number\">10</span>], <span class=\"keyword\">char</span> arrStuName[<span class=\"number\">10</span>], <span class=\"keyword\">int</span> iStuScore)</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//链表头添加一个节点</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">AddStuMSGToLinkHead</span><span class=\"params\">(<span class=\"keyword\">char</span> arrStuNum[<span class=\"number\">10</span>], <span class=\"keyword\">char</span> arrStuName[<span class=\"number\">10</span>], <span class=\"keyword\">int</span> iStuScore)</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//清空链表</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">FreeLinkData</span><span class=\"params\">()</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//打印数据</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ShowStuData</span><span class=\"params\">()</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//显示指令</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ShowOrder</span><span class=\"params\">()</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//指定位置插入节点</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InsertNode</span><span class=\"params\">(STUNODE* pTemp, <span class=\"keyword\">char</span> arrStuNum[<span class=\"number\">10</span>], <span class=\"keyword\">char</span> arrStuName[<span class=\"number\">10</span>], <span class=\"keyword\">int</span> iStuScore)</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//查找制定学生</span></div><div class=\"line\"><span class=\"function\">STUNODE* <span class=\"title\">FindStuByNum</span><span class=\"params\">(<span class=\"keyword\">char</span>* arrStuNum)</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//删除指定的学生</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DeleteStuNode</span><span class=\"params\">(STUNODE* pNode)</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//保存信息到文件中</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SaveStuToFile</span><span class=\"params\">()</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//读取文件中的学生信息</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ReadStuFromFile</span><span class=\"params\">()</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> nOrder = <span class=\"number\">-1</span>;</div><div class=\"line\">\t<span class=\"keyword\">char</span> arrStuNum[<span class=\"number\">10</span>] = &#123;<span class=\"string\">'\\0'</span>&#125;;</div><div class=\"line\">\t<span class=\"keyword\">char</span> arrStuName[<span class=\"number\">10</span>] = &#123;<span class=\"string\">'\\0'</span>&#125;;</div><div class=\"line\">\t<span class=\"keyword\">int</span> iStuScore = <span class=\"number\">-1</span>;</div><div class=\"line\">\t<span class=\"keyword\">int</span> nFlag = <span class=\"number\">1</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***********学生信息管理系统************************\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***********本系统操作指令如下**********************\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  1、增加一个学生信息（尾添加）\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t 11、增加一个学生信息（头添加）\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t111、增加一个学生信息（在指定位置添加） ***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  2、查找指定学生的信息（姓名/学号） \t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  3、修改指定学生的信息\t\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  4、保存业主的信息到文件中\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  5、读取文件的业主信息\t\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  6、删除指定学生的信息\t\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  7、恢复删除的学生的信息\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  9、显示所有学生的信息\t\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  0、退出系统\t\t\t\t***\\n\"</span>);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//读取文件中的学生信息</span></div><div class=\"line\">\tReadStuFromFile();</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">while</span> (nFlag)</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"请输入指令(10查看指令):\\n\"</span>);</div><div class=\"line\">\t\t<span class=\"comment\">//printf(\"%p\\n\", &amp;nOrder);</span></div><div class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;nOrder);</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">switch</span> (nOrder)</div><div class=\"line\">\t\t&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">1</span>:</div><div class=\"line\">\t\t\t<span class=\"comment\">//添加一个学生信息</span></div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入学生的学号\\n\"</span>);</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuNum);</div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入学生的姓名\\n\"</span>);</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuName);</div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入学生的分数\\n\"</span>);</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;iStuScore);</div><div class=\"line\"></div><div class=\"line\">\t\t\tAddStuMSG(arrStuNum, arrStuName, iStuScore);</div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">11</span>:</div><div class=\"line\">\t\t\t<span class=\"comment\">//添加一个学生信息</span></div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入学生的学号\\n\"</span>);</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuNum);</div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入学生的姓名\\n\"</span>);</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuName);</div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入学生的分数\\n\"</span>);</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;iStuScore);</div><div class=\"line\"></div><div class=\"line\">\t\t\tAddStuMSGToLinkHead(arrStuNum, arrStuName, iStuScore);</div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">111</span>:</div><div class=\"line\">\t\t\t<span class=\"comment\">//指定位置添加学生</span></div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入指定学号\\n\"</span>);</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuNum);</div><div class=\"line\"></div><div class=\"line\">\t\t\tSTUNODE* pTemp;</div><div class=\"line\">\t\t\tpTemp = FindStuByNum(arrStuNum);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> != pTemp) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入学生的学号\\n\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuNum);</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入学生的姓名\\n\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuName);</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入学生的分数\\n\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;iStuScore);</div><div class=\"line\"></div><div class=\"line\">\t\t\t\tInsertNode(pTemp, arrStuNum,  arrStuName, iStuScore);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">2</span>:</div><div class=\"line\">\t\t\t<span class=\"comment\">//查找指定学生的信息</span></div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入指定学号\\n\"</span>);</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuNum);</div><div class=\"line\"></div><div class=\"line\">\t\t\tpTemp = FindStuByNum(arrStuNum);</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"comment\">//打印</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> != pTemp) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"学号:%s, 姓名:%s, 分数:%d\\n\"</span>, pTemp-&gt;arrStuNum, pTemp-&gt;arrStuName, pTemp-&gt;iStuScore);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">3</span>:</div><div class=\"line\">\t\t\t<span class=\"comment\">//查找指定学生的信息</span></div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入指定学号\\n\"</span>);</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuNum);</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"comment\">//查找</span></div><div class=\"line\">\t\t\tpTemp = FindStuByNum(arrStuNum);</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"comment\">//打印</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> != pTemp) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"comment\">//修改学号</span></div><div class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"请输入学号\\n\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuNum);</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">strcpy</span>(pTemp-&gt;arrStuNum, arrStuNum);</div><div class=\"line\"></div><div class=\"line\">\t\t\t\t<span class=\"comment\">//修改名字</span></div><div class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"请输入姓名\\n\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuName);</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">strcpy</span>(pTemp-&gt;arrStuName, arrStuName);</div><div class=\"line\"></div><div class=\"line\">\t\t\t\t<span class=\"comment\">//修改分数</span></div><div class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"请输入分数\\n\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;iStuScore);</div><div class=\"line\">\t\t\t\tpTemp-&gt;iStuScore = iStuScore;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">4</span>:</div><div class=\"line\">\t\t\t<span class=\"comment\">//保存学生信息</span></div><div class=\"line\">\t\t\tSaveStuToFile();</div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">6</span>:</div><div class=\"line\">\t\t\t<span class=\"comment\">//删除一个节点 </span></div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入要删除的学生的学号\\n\"</span>);</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuNum);</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"comment\">//查找</span></div><div class=\"line\">\t\t\tpTemp = FindStuByNum(arrStuNum);</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"comment\">//删除一个节点</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> != pTemp) &#123;</div><div class=\"line\">\t\t\t\tDeleteStuNode(pTemp);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">7</span>:</div><div class=\"line\">\t\t\t<span class=\"comment\">//恢复</span></div><div class=\"line\">\t\t\tFreeLinkData();</div><div class=\"line\">\t\t\tg_pHead = <span class=\"literal\">NULL</span>;</div><div class=\"line\">\t\t\tg_pEnd = <span class=\"literal\">NULL</span>;</div><div class=\"line\">\t\t\tReadStuFromFile();</div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">9</span>:</div><div class=\"line\">\t\t\tShowStuData();</div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">10</span>:</div><div class=\"line\">\t\t\t<span class=\"comment\">//查看指令</span></div><div class=\"line\">\t\t\tShowOrder();</div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">0</span>:</div><div class=\"line\">\t\t\tnFlag = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">default</span>:</div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"not right\\n\"</span>);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//保存学生信息</span></div><div class=\"line\">\tSaveStuToFile();</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//释放链表</span></div><div class=\"line\">\tFreeLinkData();</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//添加一个学生信息</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">AddStuMSG</span><span class=\"params\">(<span class=\"keyword\">char</span> arrStuNum[<span class=\"number\">10</span>], <span class=\"keyword\">char</span> arrStuName[<span class=\"number\">10</span>], <span class=\"keyword\">int</span> iStuScore)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"comment\">//逻辑</span></div><div class=\"line\">\t<span class=\"comment\">//创建一个节点</span></div><div class=\"line\">\tSTUNODE* pTemp = (STUNODE*)<span class=\"built_in\">malloc</span> (<span class=\"keyword\">sizeof</span> (STUNODE));</div><div class=\"line\">\t<span class=\"comment\">//检验参数的合法性</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == arrStuNum || <span class=\"literal\">NULL</span> == arrStuName || iStuScore &lt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"学生信息输入错误！\\n\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//赋值</span></div><div class=\"line\">\t<span class=\"built_in\">strcpy</span>(pTemp-&gt;arrStuNum, arrStuNum);</div><div class=\"line\">\t<span class=\"built_in\">strcpy</span>(pTemp-&gt;arrStuName, arrStuName);</div><div class=\"line\">\tpTemp-&gt;iStuScore = iStuScore;</div><div class=\"line\">\tpTemp-&gt;pNext = <span class=\"literal\">NULL</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//接在链表上</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == g_pHead || <span class=\"literal\">NULL</span> == g_pEnd) &#123;</div><div class=\"line\">\t\tg_pHead = pTemp;</div><div class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\tg_pEnd-&gt;pNext = pTemp;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tg_pEnd = pTemp;</div><div class=\"line\"></div><div class=\"line\">&#125; </div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">FreeLinkData</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">\tSTUNODE* pTemp = g_pHead;</div><div class=\"line\">\t<span class=\"keyword\">while</span> (g_pHead != <span class=\"literal\">NULL</span>) &#123;</div><div class=\"line\">\t\t<span class=\"comment\">//记录结点</span></div><div class=\"line\">\t\tpTemp = g_pHead;</div><div class=\"line\">\t\t<span class=\"comment\">//向后移动一个</span></div><div class=\"line\">\t\tg_pHead = g_pHead-&gt;pNext; </div><div class=\"line\">\t\t<span class=\"comment\">//删除节点</span></div><div class=\"line\">\t\t<span class=\"built_in\">free</span>(pTemp);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//打印数据</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ShowStuData</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">\tSTUNODE* pTemp = g_pHead;</div><div class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"literal\">NULL</span> != pTemp)</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"学号:%s, 姓名:%s, 分数:%d\\n\"</span>, pTemp-&gt;arrStuNum, pTemp-&gt;arrStuName, pTemp-&gt;iStuScore);</div><div class=\"line\">\t\t<span class=\"comment\">//向下走一步</span></div><div class=\"line\">\t\tpTemp = pTemp-&gt;pNext;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//显示指令</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ShowOrder</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***********学生信息管理系统************************\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***********本系统操作指令如下**********************\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  1、增加一个学生信息（尾添加）\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t 11、增加一个学生信息（头添加）\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t111、增加一个学生信息（在指定位置添加） ***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  2、查找指定学生的信息（姓名/学号） \t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  3、修改指定学生的信息\t\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  4、保存业主的信息到文件中\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  5、读取文件的业主信息\t\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  6、删除指定学生的信息\t\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  7、恢复删除的学生的信息\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  9、显示所有学生的信息\t\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  0、退出系统\t\t\t\t***\\n\"</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">AddStuMSGToLinkHead</span><span class=\"params\">(<span class=\"keyword\">char</span> arrStuNum[<span class=\"number\">10</span>], <span class=\"keyword\">char</span> arrStuName[<span class=\"number\">10</span>], <span class=\"keyword\">int</span> iStuScore)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"comment\">//创建一个节点</span></div><div class=\"line\">\tSTUNODE* pTemp = (STUNODE*)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(STUNODE));</div><div class=\"line\">\t<span class=\"comment\">//检测参数合法性</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == arrStuNum || <span class=\"literal\">NULL</span> == arrStuName || iStuScore &lt; <span class=\"number\">0</span>)</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"学生信息输入错误！\\n\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"built_in\">strcpy</span>(pTemp-&gt;arrStuNum, arrStuNum);</div><div class=\"line\">\t<span class=\"built_in\">strcpy</span>(pTemp-&gt;arrStuName, arrStuName);</div><div class=\"line\">\tpTemp-&gt;iStuScore = iStuScore;</div><div class=\"line\">\tpTemp-&gt;pNext = <span class=\"literal\">NULL</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//链表为空</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == g_pHead || <span class=\"literal\">NULL</span> == g_pEnd) &#123;</div><div class=\"line\">\t\tg_pEnd = pTemp;</div><div class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\tpTemp-&gt;pNext = g_pHead;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\tg_pHead = pTemp;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//查找制定学生</span></div><div class=\"line\"><span class=\"function\">STUNODE* <span class=\"title\">FindStuByNum</span><span class=\"params\">(<span class=\"keyword\">char</span>* arrStuNum)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">\tSTUNODE* pTemp = g_pHead;</div><div class=\"line\">\t<span class=\"comment\">//判断参数的合法性</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == arrStuNum) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"学号输入错误！\\n\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//判断链表是否为空</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == g_pHead || <span class=\"literal\">NULL</span> ==g_pEnd) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"链表为NULL！\\n\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//遍历链表</span></div><div class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"literal\">NULL</span> != pTemp) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"number\">0</span> == <span class=\"built_in\">strcmp</span>(pTemp-&gt;arrStuNum, arrStuNum)) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> pTemp;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\tpTemp = pTemp-&gt;pNext;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"查无此节点！\\n\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//指定位置插入节点</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InsertNode</span><span class=\"params\">(STUNODE* pTemp, <span class=\"keyword\">char</span> arrStuNum[<span class=\"number\">10</span>], <span class=\"keyword\">char</span> arrStuName[<span class=\"number\">10</span>], <span class=\"keyword\">int</span> iStuScore)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"comment\">//创建节点</span></div><div class=\"line\">\tSTUNODE* pNewTemp = (STUNODE*)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(STUNODE));</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//成员赋值</span></div><div class=\"line\">\t<span class=\"built_in\">strcpy</span>(pNewTemp-&gt;arrStuNum, arrStuNum);</div><div class=\"line\">\t<span class=\"built_in\">strcpy</span>(pNewTemp-&gt;arrStuName, arrStuName);</div><div class=\"line\">\tpNewTemp-&gt;iStuScore = iStuScore;</div><div class=\"line\">\tpNewTemp-&gt;pNext = <span class=\"literal\">NULL</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//判断插入位置是否为未结点</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (pTemp == g_pEnd) &#123;</div><div class=\"line\">\t\tg_pEnd-&gt;pNext = pNewTemp;</div><div class=\"line\">\t\tg_pEnd = pNewTemp;</div><div class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\tpNewTemp-&gt;pNext =  pTemp-&gt;pNext;</div><div class=\"line\">\t\tpTemp-&gt;pNext =  pNewTemp;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//删除指定的学生</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DeleteStuNode</span><span class=\"params\">(STUNODE* pNode)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"comment\">//只有一个节点</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (g_pHead == g_pEnd) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">free</span>(g_pHead);</div><div class=\"line\">\t\tg_pHead = <span class=\"literal\">NULL</span>;</div><div class=\"line\">\t\tg_pEnd = <span class=\"literal\">NULL</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//如果是首节点</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (g_pHead == pNode) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">free</span>(g_pHead);</div><div class=\"line\">\t\tg_pHead = g_pHead-&gt;pNext;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">//如果是尾节点</span></div><div class=\"line\">\tSTUNODE* pTemp = g_pHead;</div><div class=\"line\">\t<span class=\"keyword\">if</span> (g_pEnd == pNode) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span> (pTemp-&gt;pNext != pNode) &#123;</div><div class=\"line\">\t\t\tpTemp = pTemp-&gt;pNext;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tpTemp-&gt;pNext = <span class=\"literal\">NULL</span>;</div><div class=\"line\">\t\tg_pEnd = pTemp;</div><div class=\"line\">\t\t<span class=\"built_in\">free</span>(pNode);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//如果是中间节点</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (pNode != g_pHead &amp;&amp; pNode != g_pEnd &amp;&amp; g_pHead != g_pEnd) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span> (pTemp-&gt;pNext != pNode) &#123;</div><div class=\"line\">\t\t\tpTemp = pTemp-&gt;pNext;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tpTemp-&gt;pNext = pNode-&gt;pNext;</div><div class=\"line\">\t\t<span class=\"built_in\">free</span>(pNode);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\"></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//保存信息到文件中</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SaveStuToFile</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">\tFILE* pFile = <span class=\"literal\">NULL</span>;</div><div class=\"line\">\tSTUNODE* pTemp = g_pHead;</div><div class=\"line\">\t<span class=\"keyword\">char</span> strBuf[<span class=\"number\">30</span>] = &#123;<span class=\"number\">0</span>&#125;;</div><div class=\"line\">\t<span class=\"keyword\">char</span> strScore[<span class=\"number\">10</span>] = &#123;<span class=\"number\">0</span>&#125;;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//判断链表中是否为null</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (g_pHead == <span class=\"literal\">NULL</span>) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"没有学生\\n\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//打开文件</span></div><div class=\"line\">\tpFile = fopen(<span class=\"string\">\"dat.dat\"</span>, <span class=\"string\">\"wb+\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == pFile) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"文件打开失败！\\n\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">//操作文件指针</span></div><div class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"literal\">NULL</span> != pTemp) &#123;</div><div class=\"line\">\t\t<span class=\"comment\">//学号赋值进去</span></div><div class=\"line\">\t\t<span class=\"built_in\">strcpy</span>(strBuf, pTemp-&gt;arrStuNum);</div><div class=\"line\">\t\t<span class=\"built_in\">strcat</span>(strBuf, <span class=\"string\">\".\"</span>);</div><div class=\"line\">\t\t<span class=\"comment\">//姓名</span></div><div class=\"line\">\t\t<span class=\"built_in\">strcat</span>(strBuf, pTemp-&gt;arrStuName);</div><div class=\"line\">\t\t<span class=\"built_in\">strcat</span>(strBuf, <span class=\"string\">\".\"</span>);</div><div class=\"line\">\t\t<span class=\"comment\">//分数</span></div><div class=\"line\">\t\t<span class=\"built_in\">snprintf</span>(strScore, <span class=\"number\">10</span>, <span class=\"string\">\"%d\"</span>, pTemp-&gt;iStuScore);  <span class=\"comment\">//linux下不能使用itoa函数，故用此代替</span></div><div class=\"line\">\t\t<span class=\"comment\">//拼接字符串</span></div><div class=\"line\">\t\t<span class=\"built_in\">strcat</span>(strBuf, strScore);</div><div class=\"line\"></div><div class=\"line\">\t\tfwrite(strBuf, <span class=\"number\">1</span>, <span class=\"built_in\">strlen</span>(strBuf), pFile);</div><div class=\"line\">\t\tfwrite(<span class=\"string\">\"\\r\\n\"</span>, <span class=\"number\">1</span>, <span class=\"built_in\">strlen</span>(<span class=\"string\">\"\\r\\n\"</span>), pFile);</div><div class=\"line\"></div><div class=\"line\">\t\tpTemp = pTemp-&gt;pNext;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">//关闭文件</span></div><div class=\"line\">\tfclose(pFile);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//读取文件中的学生信息</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ReadStuFromFile</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">\tFILE* pFile = fopen(<span class=\"string\">\"dat.dat\"</span>, <span class=\"string\">\"rb+\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">char</span> strBuf[<span class=\"number\">30</span>] = &#123;<span class=\"number\">0</span>&#125;;</div><div class=\"line\">\t<span class=\"keyword\">char</span> strStuNum[<span class=\"number\">10</span>] = &#123;<span class=\"number\">0</span>&#125;;</div><div class=\"line\">\t<span class=\"keyword\">char</span> strStuName[<span class=\"number\">10</span>] = &#123;<span class=\"number\">0</span>&#125;;</div><div class=\"line\">\t<span class=\"keyword\">char</span> strStuScore[<span class=\"number\">10</span>] = &#123;<span class=\"number\">0</span>&#125;;</div><div class=\"line\">\t<span class=\"keyword\">int</span> nCount = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"keyword\">int</span> iStuScore;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == pFile) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"文件打开失败\\n\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//操作指针读取函数</span></div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"literal\">NULL</span> != fgets(strBuf, <span class=\"number\">30</span>, pFile)) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> nCount = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; strBuf[i] != <span class=\"string\">'\\r'</span>; i++) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">//没到.</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"number\">0</span> == nCount) &#123;</div><div class=\"line\">\t\t\t\tstrStuNum[i] = strBuf[i];</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"string\">'.'</span> == strBuf[i]) &#123;</div><div class=\"line\">\t\t\t\t\tstrStuNum[i] = <span class=\"string\">'\\0'</span>;</div><div class=\"line\">\t\t\t\t\tnCount++;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">1</span> == nCount) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"string\">'.'</span> != strBuf[i]) &#123;</div><div class=\"line\">\t\t\t\t\tstrStuName[j] = strBuf[i];</div><div class=\"line\">\t\t\t\t\tj++;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"string\">'.'</span> == strBuf[i]) &#123;</div><div class=\"line\">\t\t\t\t\tstrStuName[j] = <span class=\"string\">'\\0'</span>;</div><div class=\"line\">\t\t\t\t\tnCount++;</div><div class=\"line\">\t\t\t\t\tj = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t\tstrStuScore[j] = strBuf[i];</div><div class=\"line\">\t\t\t\tj++;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">//将学生的分数转化为int类型</span></div><div class=\"line\">\t\tiStuScore = strtol(strStuScore, <span class=\"literal\">NULL</span>, <span class=\"number\">10</span>);</div><div class=\"line\">\t\tAddStuMSG(strStuNum, strStuName, iStuScore);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tfclose(pFile);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>这两天学习了朋友推荐的<a href=\"http://study.163.com/course/courseMain.htm?courseId=1003284031\">C语言链表视频教程</a> ，有了对链表的初步认识。教程用C对单向链表的实现了基本的增删改查操作，以及将数据储存到文件中和从文件中读取的功能。</p>","more":"<h3 id=\"认识链表\"><a href=\"#认识链表\" class=\"headerlink\" title=\"认识链表\"></a>认识链表</h3><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6d/Singly-linked-list.svg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<p>上图为单向链表的模型，图中包含三个节点，且每个节点包含两个部分，一部分保存或者显示节点的有关信息，一部分储存下一个节点的地址。从第一个节点依次指向最后一个节点，最后一个节点指向一个空值。如果需要查找链表的节点，则需要依次遍历节点。</p>\n<h3 id=\"功能需求\"><a href=\"#功能需求\" class=\"headerlink\" title=\"功能需求\"></a>功能需求</h3><p>基于C语言链表，实现对学生表的基本增删改查操作，将学生数据保存至文件中，从文件中取出。并逐步完善系统，如在链表头和尾及指定位置增加学生信息，恢复删除学生信息等功能。</p>\n<h3 id=\"整体规划\"><a href=\"#整体规划\" class=\"headerlink\" title=\"整体规划\"></a>整体规划</h3><p>定义学生节点STUNODE，声明链表的头和尾g_pHead，g_pEnd，使用switch语句，针对不同的指令，执行不同的命令。搭建学生信息管理系统的骨架。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//学生结点</span></div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> _<span class=\"title\">STU</span></div><div class=\"line\">&#123;</span></div><div class=\"line\">\t<span class=\"keyword\">char</span> arrStuNum[<span class=\"number\">10</span>];</div><div class=\"line\">\t<span class=\"keyword\">char</span> arrStuName[<span class=\"number\">10</span>];</div><div class=\"line\">\t<span class=\"keyword\">int</span> iStuScore;</div><div class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> _<span class=\"title\">STU</span>* <span class=\"title\">pNext</span>;</span></div><div class=\"line\">&#125; STUNODE;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//声明链表的头和尾</span></div><div class=\"line\">STUNODE* g_pHead = <span class=\"literal\">NULL</span>;</div><div class=\"line\">STUNODE* g_pEnd = <span class=\"literal\">NULL</span>;</div></pre></td></tr></table></figure></p>\n<h3 id=\"删除功能\"><a href=\"#删除功能\" class=\"headerlink\" title=\"删除功能\"></a>删除功能</h3><p>以删除功能为例，具体说明。分成只有一个节点或者多个节点两种情况讨论。</p>\n<ul>\n<li><p>只有一个节点。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//只有一个节点</span></div><div class=\"line\"><span class=\"keyword\">if</span> (g_pHead == g_pEnd) &#123;</div><div class=\"line\">\t<span class=\"built_in\">free</span>(g_pHead);\t\t<span class=\"comment\">//删除节点</span></div><div class=\"line\">\tg_pHead = <span class=\"literal\">NULL</span>;\t\t<span class=\"comment\">//把链表头赋值为NULL</span></div><div class=\"line\">\tg_pEnd = <span class=\"literal\">NULL</span>;\t\t<span class=\"comment\">//把链表尾赋值为NULL</span></div><div class=\"line\">\t<span class=\"keyword\">return</span>;\t\t\t\t<span class=\"comment\">//完成</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n<li><p>有多个节点。这种情况又需要讨论了，分为链表的头、尾、中间三种。</p>\n<figure class=\"highlight xl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//如果是首节点</span></div><div class=\"line\"><span class=\"keyword\">if</span> (g_pHead == pNode) &#123;</div><div class=\"line\">\tfree(g_pHead);\t\t\t\t<span class=\"comment\">//删除节点</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"title\">g_pHead</span> = g_pHead-&gt;</span>pNext;\t<span class=\"comment\">//指向想一个节点</span></div><div class=\"line\">\treturn;\t\t\t\t\t\t<span class=\"comment\">//完成</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"comment\">//如果是尾节点</span></div><div class=\"line\">STUNODE* pTemp = g_pHead;</div><div class=\"line\"><span class=\"keyword\">if</span> (g_pEnd == pNode) &#123;</div><div class=\"line\">\t<span class=\"comment\">//找到倒数第二个节点，并将指向空</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"title\">while</span> (pTemp-&gt;</span>pNext != pNode) &#123;</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"title\">pTemp</span> = pTemp-&gt;</span>pNext;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"title\">pTemp</span>-&gt;</span>pNext = NULL;\t\t</div><div class=\"line\">\tg_pEnd = pTemp;\t\t\t\t<span class=\"comment\">//把倒数第二个链表赋值为链表尾</span></div><div class=\"line\">\tfree(pNode);\t\t\t\t<span class=\"comment\">//删除节点</span></div><div class=\"line\">\treturn;\t\t\t\t\t\t<span class=\"comment\">//完成</span></div><div class=\"line\">&#125;\t</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//如果是中间节点</span></div><div class=\"line\"><span class=\"keyword\">if</span> (pNode != g_pHead &amp;&amp; pNode != g_pEnd &amp;&amp; g_pHead != g_pEnd) &#123;</div><div class=\"line\">\t<span class=\"comment\">//找出要删除的节点前一个</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"title\">while</span> (pTemp-&gt;</span>pNext != pNode) &#123;</div><div class=\"line\">\t\t<span class=\"function\"><span class=\"title\">pTemp</span> = pTemp-&gt;</span>pNext;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"function\"><span class=\"title\">pTemp</span>-&gt;</span><span class=\"function\"><span class=\"title\">pNext</span> = pNode-&gt;</span>pNext;\t<span class=\"comment\">//剔除节点</span></div><div class=\"line\">\tfree(pNode);\t\t\t\t\t<span class=\"comment\">//删除节点</span></div><div class=\"line\">\treturn;\t\t\t\t\t\t\t<span class=\"comment\">//完成</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"实现学生信息管理系统\"><a href=\"#实现学生信息管理系统\" class=\"headerlink\" title=\"实现学生信息管理系统\"></a>实现学生信息管理系统</h3><p>完成增删改查后，把链表的节点的属性拼接起来，然后写入制定的文件中。读取时，拆分字符串，再将学生信息存入链表中。<br>效果如下：<br><script type=\"text/javascript\" src=\"https://asciinema.org/a/5r01vujvrx4b3d1jlpdnui1kb.js\" id=\"asciicast-5r01vujvrx4b3d1jlpdnui1kb\" async></script></p>\n<p>代码如下：<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div><div class=\"line\">333</div><div class=\"line\">334</div><div class=\"line\">335</div><div class=\"line\">336</div><div class=\"line\">337</div><div class=\"line\">338</div><div class=\"line\">339</div><div class=\"line\">340</div><div class=\"line\">341</div><div class=\"line\">342</div><div class=\"line\">343</div><div class=\"line\">344</div><div class=\"line\">345</div><div class=\"line\">346</div><div class=\"line\">347</div><div class=\"line\">348</div><div class=\"line\">349</div><div class=\"line\">350</div><div class=\"line\">351</div><div class=\"line\">352</div><div class=\"line\">353</div><div class=\"line\">354</div><div class=\"line\">355</div><div class=\"line\">356</div><div class=\"line\">357</div><div class=\"line\">358</div><div class=\"line\">359</div><div class=\"line\">360</div><div class=\"line\">361</div><div class=\"line\">362</div><div class=\"line\">363</div><div class=\"line\">364</div><div class=\"line\">365</div><div class=\"line\">366</div><div class=\"line\">367</div><div class=\"line\">368</div><div class=\"line\">369</div><div class=\"line\">370</div><div class=\"line\">371</div><div class=\"line\">372</div><div class=\"line\">373</div><div class=\"line\">374</div><div class=\"line\">375</div><div class=\"line\">376</div><div class=\"line\">377</div><div class=\"line\">378</div><div class=\"line\">379</div><div class=\"line\">380</div><div class=\"line\">381</div><div class=\"line\">382</div><div class=\"line\">383</div><div class=\"line\">384</div><div class=\"line\">385</div><div class=\"line\">386</div><div class=\"line\">387</div><div class=\"line\">388</div><div class=\"line\">389</div><div class=\"line\">390</div><div class=\"line\">391</div><div class=\"line\">392</div><div class=\"line\">393</div><div class=\"line\">394</div><div class=\"line\">395</div><div class=\"line\">396</div><div class=\"line\">397</div><div class=\"line\">398</div><div class=\"line\">399</div><div class=\"line\">400</div><div class=\"line\">401</div><div class=\"line\">402</div><div class=\"line\">403</div><div class=\"line\">404</div><div class=\"line\">405</div><div class=\"line\">406</div><div class=\"line\">407</div><div class=\"line\">408</div><div class=\"line\">409</div><div class=\"line\">410</div><div class=\"line\">411</div><div class=\"line\">412</div><div class=\"line\">413</div><div class=\"line\">414</div><div class=\"line\">415</div><div class=\"line\">416</div><div class=\"line\">417</div><div class=\"line\">418</div><div class=\"line\">419</div><div class=\"line\">420</div><div class=\"line\">421</div><div class=\"line\">422</div><div class=\"line\">423</div><div class=\"line\">424</div><div class=\"line\">425</div><div class=\"line\">426</div><div class=\"line\">427</div><div class=\"line\">428</div><div class=\"line\">429</div><div class=\"line\">430</div><div class=\"line\">431</div><div class=\"line\">432</div><div class=\"line\">433</div><div class=\"line\">434</div><div class=\"line\">435</div><div class=\"line\">436</div><div class=\"line\">437</div><div class=\"line\">438</div><div class=\"line\">439</div><div class=\"line\">440</div><div class=\"line\">441</div><div class=\"line\">442</div><div class=\"line\">443</div><div class=\"line\">444</div><div class=\"line\">445</div><div class=\"line\">446</div><div class=\"line\">447</div><div class=\"line\">448</div><div class=\"line\">449</div><div class=\"line\">450</div><div class=\"line\">451</div><div class=\"line\">452</div><div class=\"line\">453</div><div class=\"line\">454</div><div class=\"line\">455</div><div class=\"line\">456</div><div class=\"line\">457</div><div class=\"line\">458</div><div class=\"line\">459</div><div class=\"line\">460</div><div class=\"line\">461</div><div class=\"line\">462</div><div class=\"line\">463</div><div class=\"line\">464</div><div class=\"line\">465</div><div class=\"line\">466</div><div class=\"line\">467</div><div class=\"line\">468</div><div class=\"line\">469</div><div class=\"line\">470</div><div class=\"line\">471</div><div class=\"line\">472</div><div class=\"line\">473</div><div class=\"line\">474</div><div class=\"line\">475</div><div class=\"line\">476</div><div class=\"line\">477</div><div class=\"line\">478</div><div class=\"line\">479</div><div class=\"line\">480</div><div class=\"line\">481</div><div class=\"line\">482</div><div class=\"line\">483</div><div class=\"line\">484</div><div class=\"line\">485</div><div class=\"line\">486</div><div class=\"line\">487</div><div class=\"line\">488</div><div class=\"line\">489</div><div class=\"line\">490</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></div><div class=\"line\"><span class=\"comment\">//学生结点</span></div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> _<span class=\"title\">STU</span></div><div class=\"line\">&#123;</span></div><div class=\"line\">\t<span class=\"keyword\">char</span> arrStuNum[<span class=\"number\">10</span>];</div><div class=\"line\">\t<span class=\"keyword\">char</span> arrStuName[<span class=\"number\">10</span>];</div><div class=\"line\">\t<span class=\"keyword\">int</span> iStuScore;</div><div class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> _<span class=\"title\">STU</span>* <span class=\"title\">pNext</span>;</span></div><div class=\"line\">&#125; STUNODE;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//声明链表的头和尾</span></div><div class=\"line\">STUNODE* g_pHead = <span class=\"literal\">NULL</span>;</div><div class=\"line\">STUNODE* g_pEnd = <span class=\"literal\">NULL</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//添加一个学生信息</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">AddStuMSG</span><span class=\"params\">(<span class=\"keyword\">char</span> arrStuNum[<span class=\"number\">10</span>], <span class=\"keyword\">char</span> arrStuName[<span class=\"number\">10</span>], <span class=\"keyword\">int</span> iStuScore)</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//链表头添加一个节点</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">AddStuMSGToLinkHead</span><span class=\"params\">(<span class=\"keyword\">char</span> arrStuNum[<span class=\"number\">10</span>], <span class=\"keyword\">char</span> arrStuName[<span class=\"number\">10</span>], <span class=\"keyword\">int</span> iStuScore)</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//清空链表</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">FreeLinkData</span><span class=\"params\">()</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//打印数据</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ShowStuData</span><span class=\"params\">()</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//显示指令</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ShowOrder</span><span class=\"params\">()</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//指定位置插入节点</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InsertNode</span><span class=\"params\">(STUNODE* pTemp, <span class=\"keyword\">char</span> arrStuNum[<span class=\"number\">10</span>], <span class=\"keyword\">char</span> arrStuName[<span class=\"number\">10</span>], <span class=\"keyword\">int</span> iStuScore)</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//查找制定学生</span></div><div class=\"line\"><span class=\"function\">STUNODE* <span class=\"title\">FindStuByNum</span><span class=\"params\">(<span class=\"keyword\">char</span>* arrStuNum)</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//删除指定的学生</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DeleteStuNode</span><span class=\"params\">(STUNODE* pNode)</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//保存信息到文件中</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SaveStuToFile</span><span class=\"params\">()</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//读取文件中的学生信息</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ReadStuFromFile</span><span class=\"params\">()</span></span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">\t<span class=\"keyword\">int</span> nOrder = <span class=\"number\">-1</span>;</div><div class=\"line\">\t<span class=\"keyword\">char</span> arrStuNum[<span class=\"number\">10</span>] = &#123;<span class=\"string\">'\\0'</span>&#125;;</div><div class=\"line\">\t<span class=\"keyword\">char</span> arrStuName[<span class=\"number\">10</span>] = &#123;<span class=\"string\">'\\0'</span>&#125;;</div><div class=\"line\">\t<span class=\"keyword\">int</span> iStuScore = <span class=\"number\">-1</span>;</div><div class=\"line\">\t<span class=\"keyword\">int</span> nFlag = <span class=\"number\">1</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***********学生信息管理系统************************\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***********本系统操作指令如下**********************\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  1、增加一个学生信息（尾添加）\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t 11、增加一个学生信息（头添加）\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t111、增加一个学生信息（在指定位置添加） ***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  2、查找指定学生的信息（姓名/学号） \t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  3、修改指定学生的信息\t\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  4、保存业主的信息到文件中\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  5、读取文件的业主信息\t\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  6、删除指定学生的信息\t\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  7、恢复删除的学生的信息\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  9、显示所有学生的信息\t\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  0、退出系统\t\t\t\t***\\n\"</span>);</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//读取文件中的学生信息</span></div><div class=\"line\">\tReadStuFromFile();</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">while</span> (nFlag)</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"请输入指令(10查看指令):\\n\"</span>);</div><div class=\"line\">\t\t<span class=\"comment\">//printf(\"%p\\n\", &amp;nOrder);</span></div><div class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;nOrder);</div><div class=\"line\"></div><div class=\"line\">\t\t<span class=\"keyword\">switch</span> (nOrder)</div><div class=\"line\">\t\t&#123;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">1</span>:</div><div class=\"line\">\t\t\t<span class=\"comment\">//添加一个学生信息</span></div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入学生的学号\\n\"</span>);</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuNum);</div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入学生的姓名\\n\"</span>);</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuName);</div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入学生的分数\\n\"</span>);</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;iStuScore);</div><div class=\"line\"></div><div class=\"line\">\t\t\tAddStuMSG(arrStuNum, arrStuName, iStuScore);</div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">11</span>:</div><div class=\"line\">\t\t\t<span class=\"comment\">//添加一个学生信息</span></div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入学生的学号\\n\"</span>);</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuNum);</div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入学生的姓名\\n\"</span>);</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuName);</div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入学生的分数\\n\"</span>);</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;iStuScore);</div><div class=\"line\"></div><div class=\"line\">\t\t\tAddStuMSGToLinkHead(arrStuNum, arrStuName, iStuScore);</div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">111</span>:</div><div class=\"line\">\t\t\t<span class=\"comment\">//指定位置添加学生</span></div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入指定学号\\n\"</span>);</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuNum);</div><div class=\"line\"></div><div class=\"line\">\t\t\tSTUNODE* pTemp;</div><div class=\"line\">\t\t\tpTemp = FindStuByNum(arrStuNum);</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> != pTemp) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入学生的学号\\n\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuNum);</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入学生的姓名\\n\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuName);</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入学生的分数\\n\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;iStuScore);</div><div class=\"line\"></div><div class=\"line\">\t\t\t\tInsertNode(pTemp, arrStuNum,  arrStuName, iStuScore);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">2</span>:</div><div class=\"line\">\t\t\t<span class=\"comment\">//查找指定学生的信息</span></div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入指定学号\\n\"</span>);</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuNum);</div><div class=\"line\"></div><div class=\"line\">\t\t\tpTemp = FindStuByNum(arrStuNum);</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"comment\">//打印</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> != pTemp) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"学号:%s, 姓名:%s, 分数:%d\\n\"</span>, pTemp-&gt;arrStuNum, pTemp-&gt;arrStuName, pTemp-&gt;iStuScore);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">3</span>:</div><div class=\"line\">\t\t\t<span class=\"comment\">//查找指定学生的信息</span></div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入指定学号\\n\"</span>);</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuNum);</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"comment\">//查找</span></div><div class=\"line\">\t\t\tpTemp = FindStuByNum(arrStuNum);</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"comment\">//打印</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> != pTemp) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"comment\">//修改学号</span></div><div class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"请输入学号\\n\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuNum);</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">strcpy</span>(pTemp-&gt;arrStuNum, arrStuNum);</div><div class=\"line\"></div><div class=\"line\">\t\t\t\t<span class=\"comment\">//修改名字</span></div><div class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"请输入姓名\\n\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuName);</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">strcpy</span>(pTemp-&gt;arrStuName, arrStuName);</div><div class=\"line\"></div><div class=\"line\">\t\t\t\t<span class=\"comment\">//修改分数</span></div><div class=\"line\">\t\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"请输入分数\\n\"</span>);</div><div class=\"line\">\t\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;iStuScore);</div><div class=\"line\">\t\t\t\tpTemp-&gt;iStuScore = iStuScore;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">4</span>:</div><div class=\"line\">\t\t\t<span class=\"comment\">//保存学生信息</span></div><div class=\"line\">\t\t\tSaveStuToFile();</div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">6</span>:</div><div class=\"line\">\t\t\t<span class=\"comment\">//删除一个节点 </span></div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"输入要删除的学生的学号\\n\"</span>);</div><div class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, arrStuNum);</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"comment\">//查找</span></div><div class=\"line\">\t\t\tpTemp = FindStuByNum(arrStuNum);</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"comment\">//删除一个节点</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> != pTemp) &#123;</div><div class=\"line\">\t\t\t\tDeleteStuNode(pTemp);</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">7</span>:</div><div class=\"line\">\t\t\t<span class=\"comment\">//恢复</span></div><div class=\"line\">\t\t\tFreeLinkData();</div><div class=\"line\">\t\t\tg_pHead = <span class=\"literal\">NULL</span>;</div><div class=\"line\">\t\t\tg_pEnd = <span class=\"literal\">NULL</span>;</div><div class=\"line\">\t\t\tReadStuFromFile();</div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">9</span>:</div><div class=\"line\">\t\t\tShowStuData();</div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">10</span>:</div><div class=\"line\">\t\t\t<span class=\"comment\">//查看指令</span></div><div class=\"line\">\t\t\tShowOrder();</div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">case</span> <span class=\"number\">0</span>:</div><div class=\"line\">\t\t\tnFlag = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">default</span>:</div><div class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"not right\\n\"</span>);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//保存学生信息</span></div><div class=\"line\">\tSaveStuToFile();</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//释放链表</span></div><div class=\"line\">\tFreeLinkData();</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//添加一个学生信息</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">AddStuMSG</span><span class=\"params\">(<span class=\"keyword\">char</span> arrStuNum[<span class=\"number\">10</span>], <span class=\"keyword\">char</span> arrStuName[<span class=\"number\">10</span>], <span class=\"keyword\">int</span> iStuScore)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">\t<span class=\"comment\">//逻辑</span></div><div class=\"line\">\t<span class=\"comment\">//创建一个节点</span></div><div class=\"line\">\tSTUNODE* pTemp = (STUNODE*)<span class=\"built_in\">malloc</span> (<span class=\"keyword\">sizeof</span> (STUNODE));</div><div class=\"line\">\t<span class=\"comment\">//检验参数的合法性</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == arrStuNum || <span class=\"literal\">NULL</span> == arrStuName || iStuScore &lt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"学生信息输入错误！\\n\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//赋值</span></div><div class=\"line\">\t<span class=\"built_in\">strcpy</span>(pTemp-&gt;arrStuNum, arrStuNum);</div><div class=\"line\">\t<span class=\"built_in\">strcpy</span>(pTemp-&gt;arrStuName, arrStuName);</div><div class=\"line\">\tpTemp-&gt;iStuScore = iStuScore;</div><div class=\"line\">\tpTemp-&gt;pNext = <span class=\"literal\">NULL</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//接在链表上</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == g_pHead || <span class=\"literal\">NULL</span> == g_pEnd) &#123;</div><div class=\"line\">\t\tg_pHead = pTemp;</div><div class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\tg_pEnd-&gt;pNext = pTemp;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tg_pEnd = pTemp;</div><div class=\"line\"></div><div class=\"line\">&#125; </div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">FreeLinkData</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">\tSTUNODE* pTemp = g_pHead;</div><div class=\"line\">\t<span class=\"keyword\">while</span> (g_pHead != <span class=\"literal\">NULL</span>) &#123;</div><div class=\"line\">\t\t<span class=\"comment\">//记录结点</span></div><div class=\"line\">\t\tpTemp = g_pHead;</div><div class=\"line\">\t\t<span class=\"comment\">//向后移动一个</span></div><div class=\"line\">\t\tg_pHead = g_pHead-&gt;pNext; </div><div class=\"line\">\t\t<span class=\"comment\">//删除节点</span></div><div class=\"line\">\t\t<span class=\"built_in\">free</span>(pTemp);</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//打印数据</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ShowStuData</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">\tSTUNODE* pTemp = g_pHead;</div><div class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"literal\">NULL</span> != pTemp)</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"学号:%s, 姓名:%s, 分数:%d\\n\"</span>, pTemp-&gt;arrStuNum, pTemp-&gt;arrStuName, pTemp-&gt;iStuScore);</div><div class=\"line\">\t\t<span class=\"comment\">//向下走一步</span></div><div class=\"line\">\t\tpTemp = pTemp-&gt;pNext;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//显示指令</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ShowOrder</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***********学生信息管理系统************************\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***********本系统操作指令如下**********************\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  1、增加一个学生信息（尾添加）\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t 11、增加一个学生信息（头添加）\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t111、增加一个学生信息（在指定位置添加） ***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  2、查找指定学生的信息（姓名/学号） \t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  3、修改指定学生的信息\t\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  4、保存业主的信息到文件中\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  5、读取文件的业主信息\t\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  6、删除指定学生的信息\t\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  7、恢复删除的学生的信息\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  9、显示所有学生的信息\t\t\t***\\n\"</span>);</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"***\t  0、退出系统\t\t\t\t***\\n\"</span>);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">AddStuMSGToLinkHead</span><span class=\"params\">(<span class=\"keyword\">char</span> arrStuNum[<span class=\"number\">10</span>], <span class=\"keyword\">char</span> arrStuName[<span class=\"number\">10</span>], <span class=\"keyword\">int</span> iStuScore)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">\t<span class=\"comment\">//创建一个节点</span></div><div class=\"line\">\tSTUNODE* pTemp = (STUNODE*)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(STUNODE));</div><div class=\"line\">\t<span class=\"comment\">//检测参数合法性</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == arrStuNum || <span class=\"literal\">NULL</span> == arrStuName || iStuScore &lt; <span class=\"number\">0</span>)</div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"学生信息输入错误！\\n\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"built_in\">strcpy</span>(pTemp-&gt;arrStuNum, arrStuNum);</div><div class=\"line\">\t<span class=\"built_in\">strcpy</span>(pTemp-&gt;arrStuName, arrStuName);</div><div class=\"line\">\tpTemp-&gt;iStuScore = iStuScore;</div><div class=\"line\">\tpTemp-&gt;pNext = <span class=\"literal\">NULL</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//链表为空</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == g_pHead || <span class=\"literal\">NULL</span> == g_pEnd) &#123;</div><div class=\"line\">\t\tg_pEnd = pTemp;</div><div class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\tpTemp-&gt;pNext = g_pHead;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\tg_pHead = pTemp;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//查找制定学生</span></div><div class=\"line\"><span class=\"function\">STUNODE* <span class=\"title\">FindStuByNum</span><span class=\"params\">(<span class=\"keyword\">char</span>* arrStuNum)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">\tSTUNODE* pTemp = g_pHead;</div><div class=\"line\">\t<span class=\"comment\">//判断参数的合法性</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == arrStuNum) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"学号输入错误！\\n\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//判断链表是否为空</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == g_pHead || <span class=\"literal\">NULL</span> ==g_pEnd) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"链表为NULL！\\n\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//遍历链表</span></div><div class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"literal\">NULL</span> != pTemp) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"number\">0</span> == <span class=\"built_in\">strcmp</span>(pTemp-&gt;arrStuNum, arrStuNum)) &#123;</div><div class=\"line\">\t\t\t<span class=\"keyword\">return</span> pTemp;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t\tpTemp = pTemp-&gt;pNext;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"查无此节点！\\n\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//指定位置插入节点</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">InsertNode</span><span class=\"params\">(STUNODE* pTemp, <span class=\"keyword\">char</span> arrStuNum[<span class=\"number\">10</span>], <span class=\"keyword\">char</span> arrStuName[<span class=\"number\">10</span>], <span class=\"keyword\">int</span> iStuScore)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">\t<span class=\"comment\">//创建节点</span></div><div class=\"line\">\tSTUNODE* pNewTemp = (STUNODE*)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(STUNODE));</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//成员赋值</span></div><div class=\"line\">\t<span class=\"built_in\">strcpy</span>(pNewTemp-&gt;arrStuNum, arrStuNum);</div><div class=\"line\">\t<span class=\"built_in\">strcpy</span>(pNewTemp-&gt;arrStuName, arrStuName);</div><div class=\"line\">\tpNewTemp-&gt;iStuScore = iStuScore;</div><div class=\"line\">\tpNewTemp-&gt;pNext = <span class=\"literal\">NULL</span>;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//判断插入位置是否为未结点</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (pTemp == g_pEnd) &#123;</div><div class=\"line\">\t\tg_pEnd-&gt;pNext = pNewTemp;</div><div class=\"line\">\t\tg_pEnd = pNewTemp;</div><div class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\tpNewTemp-&gt;pNext =  pTemp-&gt;pNext;</div><div class=\"line\">\t\tpTemp-&gt;pNext =  pNewTemp;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//删除指定的学生</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DeleteStuNode</span><span class=\"params\">(STUNODE* pNode)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">\t<span class=\"comment\">//只有一个节点</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (g_pHead == g_pEnd) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">free</span>(g_pHead);</div><div class=\"line\">\t\tg_pHead = <span class=\"literal\">NULL</span>;</div><div class=\"line\">\t\tg_pEnd = <span class=\"literal\">NULL</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//如果是首节点</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (g_pHead == pNode) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">free</span>(g_pHead);</div><div class=\"line\">\t\tg_pHead = g_pHead-&gt;pNext;</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">//如果是尾节点</span></div><div class=\"line\">\tSTUNODE* pTemp = g_pHead;</div><div class=\"line\">\t<span class=\"keyword\">if</span> (g_pEnd == pNode) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span> (pTemp-&gt;pNext != pNode) &#123;</div><div class=\"line\">\t\t\tpTemp = pTemp-&gt;pNext;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tpTemp-&gt;pNext = <span class=\"literal\">NULL</span>;</div><div class=\"line\">\t\tg_pEnd = pTemp;</div><div class=\"line\">\t\t<span class=\"built_in\">free</span>(pNode);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//如果是中间节点</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (pNode != g_pHead &amp;&amp; pNode != g_pEnd &amp;&amp; g_pHead != g_pEnd) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">while</span> (pTemp-&gt;pNext != pNode) &#123;</div><div class=\"line\">\t\t\tpTemp = pTemp-&gt;pNext;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\tpTemp-&gt;pNext = pNode-&gt;pNext;</div><div class=\"line\">\t\t<span class=\"built_in\">free</span>(pNode);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\"></div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//保存信息到文件中</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">SaveStuToFile</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">\tFILE* pFile = <span class=\"literal\">NULL</span>;</div><div class=\"line\">\tSTUNODE* pTemp = g_pHead;</div><div class=\"line\">\t<span class=\"keyword\">char</span> strBuf[<span class=\"number\">30</span>] = &#123;<span class=\"number\">0</span>&#125;;</div><div class=\"line\">\t<span class=\"keyword\">char</span> strScore[<span class=\"number\">10</span>] = &#123;<span class=\"number\">0</span>&#125;;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//判断链表中是否为null</span></div><div class=\"line\">\t<span class=\"keyword\">if</span> (g_pHead == <span class=\"literal\">NULL</span>) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"没有学生\\n\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//打开文件</span></div><div class=\"line\">\tpFile = fopen(<span class=\"string\">\"dat.dat\"</span>, <span class=\"string\">\"wb+\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == pFile) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"文件打开失败！\\n\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">//操作文件指针</span></div><div class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"literal\">NULL</span> != pTemp) &#123;</div><div class=\"line\">\t\t<span class=\"comment\">//学号赋值进去</span></div><div class=\"line\">\t\t<span class=\"built_in\">strcpy</span>(strBuf, pTemp-&gt;arrStuNum);</div><div class=\"line\">\t\t<span class=\"built_in\">strcat</span>(strBuf, <span class=\"string\">\".\"</span>);</div><div class=\"line\">\t\t<span class=\"comment\">//姓名</span></div><div class=\"line\">\t\t<span class=\"built_in\">strcat</span>(strBuf, pTemp-&gt;arrStuName);</div><div class=\"line\">\t\t<span class=\"built_in\">strcat</span>(strBuf, <span class=\"string\">\".\"</span>);</div><div class=\"line\">\t\t<span class=\"comment\">//分数</span></div><div class=\"line\">\t\t<span class=\"built_in\">snprintf</span>(strScore, <span class=\"number\">10</span>, <span class=\"string\">\"%d\"</span>, pTemp-&gt;iStuScore);  <span class=\"comment\">//linux下不能使用itoa函数，故用此代替</span></div><div class=\"line\">\t\t<span class=\"comment\">//拼接字符串</span></div><div class=\"line\">\t\t<span class=\"built_in\">strcat</span>(strBuf, strScore);</div><div class=\"line\"></div><div class=\"line\">\t\tfwrite(strBuf, <span class=\"number\">1</span>, <span class=\"built_in\">strlen</span>(strBuf), pFile);</div><div class=\"line\">\t\tfwrite(<span class=\"string\">\"\\r\\n\"</span>, <span class=\"number\">1</span>, <span class=\"built_in\">strlen</span>(<span class=\"string\">\"\\r\\n\"</span>), pFile);</div><div class=\"line\"></div><div class=\"line\">\t\tpTemp = pTemp-&gt;pNext;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t<span class=\"comment\">//关闭文件</span></div><div class=\"line\">\tfclose(pFile);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//读取文件中的学生信息</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ReadStuFromFile</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">\tFILE* pFile = fopen(<span class=\"string\">\"dat.dat\"</span>, <span class=\"string\">\"rb+\"</span>);</div><div class=\"line\">\t<span class=\"keyword\">char</span> strBuf[<span class=\"number\">30</span>] = &#123;<span class=\"number\">0</span>&#125;;</div><div class=\"line\">\t<span class=\"keyword\">char</span> strStuNum[<span class=\"number\">10</span>] = &#123;<span class=\"number\">0</span>&#125;;</div><div class=\"line\">\t<span class=\"keyword\">char</span> strStuName[<span class=\"number\">10</span>] = &#123;<span class=\"number\">0</span>&#125;;</div><div class=\"line\">\t<span class=\"keyword\">char</span> strStuScore[<span class=\"number\">10</span>] = &#123;<span class=\"number\">0</span>&#125;;</div><div class=\"line\">\t<span class=\"keyword\">int</span> nCount = <span class=\"number\">0</span>;</div><div class=\"line\">\t<span class=\"keyword\">int</span> iStuScore;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == pFile) &#123;</div><div class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"文件打开失败\\n\"</span>);</div><div class=\"line\">\t\t<span class=\"keyword\">return</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"comment\">//操作指针读取函数</span></div><div class=\"line\">\t</div><div class=\"line\">\t<span class=\"keyword\">while</span> (<span class=\"literal\">NULL</span> != fgets(strBuf, <span class=\"number\">30</span>, pFile)) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">int</span> nCount = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; strBuf[i] != <span class=\"string\">'\\r'</span>; i++) &#123;</div><div class=\"line\">\t\t\t<span class=\"comment\">//没到.</span></div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (<span class=\"number\">0</span> == nCount) &#123;</div><div class=\"line\">\t\t\t\tstrStuNum[i] = strBuf[i];</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"string\">'.'</span> == strBuf[i]) &#123;</div><div class=\"line\">\t\t\t\t\tstrStuNum[i] = <span class=\"string\">'\\0'</span>;</div><div class=\"line\">\t\t\t\t\tnCount++;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">1</span> == nCount) &#123;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"string\">'.'</span> != strBuf[i]) &#123;</div><div class=\"line\">\t\t\t\t\tstrStuName[j] = strBuf[i];</div><div class=\"line\">\t\t\t\t\tj++;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (<span class=\"string\">'.'</span> == strBuf[i]) &#123;</div><div class=\"line\">\t\t\t\t\tstrStuName[j] = <span class=\"string\">'\\0'</span>;</div><div class=\"line\">\t\t\t\t\tnCount++;</div><div class=\"line\">\t\t\t\t\tj = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t\t</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t\tstrStuScore[j] = strBuf[i];</div><div class=\"line\">\t\t\t\tj++;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t<span class=\"comment\">//将学生的分数转化为int类型</span></div><div class=\"line\">\t\tiStuScore = strtol(strStuScore, <span class=\"literal\">NULL</span>, <span class=\"number\">10</span>);</div><div class=\"line\">\t\tAddStuMSG(strStuNum, strStuName, iStuScore);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tfclose(pFile);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>"},{"title":"微信小程序wx.request请求服务器配置问题","date":"2017-06-14T14:45:24.000Z","_content":"\n最近开发小程序，需要前后台对接，当使用wx.request方法向后台发送http请求时，控制台报错，随后就google了一下，本文主要讲述此问题及解决方案。\n\n<!--more-->\n\n## 问题\n控制台报错截图：\n![](/images/1.png)\n看到控制台报错，提示要配置域名，google了一下，确实有很多关于wx.request请求配置服务器的文章，就配置了服务器（当时并没有服务器）。\n![](/images/4.png)\n难道在开发阶段每次测试都要吧代码推送到服务器么？有这么麻烦么？于是就开始尝试通过第三方平台，以便利前后台对接的测试，如leancloud等，然而效果并不理想。\n\n## 解决方案\n+ 首先，控制台虽然报错了，但是依然可以正确的发送请求，点击请求的地址即可得到请求的返回值（如果请求地址正确的话，地址可以是本地的）。在测试阶段是可以正确的发送http请求，但是项目上线后就需要配置服务器了。\n+ 端口问题。wx,request文档中说明了请求的地址不能带有端口号，笔着使用SpringMvc后台开发，端口号是8080，讲端口号改为80即可省略端口号。\n+ 在本地开发，如果想配置服务器的话，可以通过修改host文件的方法。将本地与配置的域名进行绑定。配置方法如下：\n![](/images/2.png)\n红色方框中的代码作用是，当我们访问api.water.mengyunzhi.com服务器时，实际上访问的地址是localhost。DNS的作用就是对ip地址进行解析，使其和域名相对应。而hosts文件是用来提高效率的，在进行dns请求前，系统会先检查自己的hosts文件中是否有这个地址的映射关系，如果有，则直接调用这个映射关系，如果没有再向dns服务器提出域名解析。也就是说 Hosts 的请求级别比 DNS 高。当你的 Hosts 文件里面有对应的 IP 时，它就会直接访问那个 IP，而不用通过 DNS。相应的，在小程序的后台配置这个域名即可：\n![](/images/3.png)\n实际上访问的是localhost，这样就方便了我们前后台对接。\n\n## 总结\n在这个问题上，笔者开始的时候犯了一个严重的错误：在软件开发中，相信大多时候第三方平台都会尽力满足开发者的需求，方便我们开发测试。而不至于发送一个请求就要配置服务器这样繁琐的操作。\n\n> 如有错误，欢迎指正！","source":"_posts/微信小程序wx-request请求服务器配置问题.md","raw":"---\ntitle: 微信小程序wx.request请求服务器配置问题\ndate: 2017-06-14 22:45:24\ntags:  [服务器, wx.request, 小程序]\n---\n\n最近开发小程序，需要前后台对接，当使用wx.request方法向后台发送http请求时，控制台报错，随后就google了一下，本文主要讲述此问题及解决方案。\n\n<!--more-->\n\n## 问题\n控制台报错截图：\n![](/images/1.png)\n看到控制台报错，提示要配置域名，google了一下，确实有很多关于wx.request请求配置服务器的文章，就配置了服务器（当时并没有服务器）。\n![](/images/4.png)\n难道在开发阶段每次测试都要吧代码推送到服务器么？有这么麻烦么？于是就开始尝试通过第三方平台，以便利前后台对接的测试，如leancloud等，然而效果并不理想。\n\n## 解决方案\n+ 首先，控制台虽然报错了，但是依然可以正确的发送请求，点击请求的地址即可得到请求的返回值（如果请求地址正确的话，地址可以是本地的）。在测试阶段是可以正确的发送http请求，但是项目上线后就需要配置服务器了。\n+ 端口问题。wx,request文档中说明了请求的地址不能带有端口号，笔着使用SpringMvc后台开发，端口号是8080，讲端口号改为80即可省略端口号。\n+ 在本地开发，如果想配置服务器的话，可以通过修改host文件的方法。将本地与配置的域名进行绑定。配置方法如下：\n![](/images/2.png)\n红色方框中的代码作用是，当我们访问api.water.mengyunzhi.com服务器时，实际上访问的地址是localhost。DNS的作用就是对ip地址进行解析，使其和域名相对应。而hosts文件是用来提高效率的，在进行dns请求前，系统会先检查自己的hosts文件中是否有这个地址的映射关系，如果有，则直接调用这个映射关系，如果没有再向dns服务器提出域名解析。也就是说 Hosts 的请求级别比 DNS 高。当你的 Hosts 文件里面有对应的 IP 时，它就会直接访问那个 IP，而不用通过 DNS。相应的，在小程序的后台配置这个域名即可：\n![](/images/3.png)\n实际上访问的是localhost，这样就方便了我们前后台对接。\n\n## 总结\n在这个问题上，笔者开始的时候犯了一个严重的错误：在软件开发中，相信大多时候第三方平台都会尽力满足开发者的需求，方便我们开发测试。而不至于发送一个请求就要配置服务器这样繁琐的操作。\n\n> 如有错误，欢迎指正！","slug":"微信小程序wx-request请求服务器配置问题","published":1,"updated":"2017-07-30T06:39:10.383Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2ens001lnpjxzr2v7dzo","content":"<p>最近开发小程序，需要前后台对接，当使用wx.request方法向后台发送http请求时，控制台报错，随后就google了一下，本文主要讲述此问题及解决方案。</p>\n<a id=\"more\"></a>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>控制台报错截图：<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/1.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br>看到控制台报错，提示要配置域名，google了一下，确实有很多关于wx.request请求配置服务器的文章，就配置了服务器（当时并没有服务器）。<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/4.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br>难道在开发阶段每次测试都要吧代码推送到服务器么？有这么麻烦么？于是就开始尝试通过第三方平台，以便利前后台对接的测试，如leancloud等，然而效果并不理想。</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><ul>\n<li>首先，控制台虽然报错了，但是依然可以正确的发送请求，点击请求的地址即可得到请求的返回值（如果请求地址正确的话，地址可以是本地的）。在测试阶段是可以正确的发送http请求，但是项目上线后就需要配置服务器了。</li>\n<li>端口问题。wx,request文档中说明了请求的地址不能带有端口号，笔着使用SpringMvc后台开发，端口号是8080，讲端口号改为80即可省略端口号。</li>\n<li>在本地开发，如果想配置服务器的话，可以通过修改host文件的方法。将本地与配置的域名进行绑定。配置方法如下：<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/2.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n红色方框中的代码作用是，当我们访问api.water.mengyunzhi.com服务器时，实际上访问的地址是localhost。DNS的作用就是对ip地址进行解析，使其和域名相对应。而hosts文件是用来提高效率的，在进行dns请求前，系统会先检查自己的hosts文件中是否有这个地址的映射关系，如果有，则直接调用这个映射关系，如果没有再向dns服务器提出域名解析。也就是说 Hosts 的请求级别比 DNS 高。当你的 Hosts 文件里面有对应的 IP 时，它就会直接访问那个 IP，而不用通过 DNS。相应的，在小程序的后台配置这个域名即可：<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/3.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n实际上访问的是localhost，这样就方便了我们前后台对接。</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>在这个问题上，笔者开始的时候犯了一个严重的错误：在软件开发中，相信大多时候第三方平台都会尽力满足开发者的需求，方便我们开发测试。而不至于发送一个请求就要配置服务器这样繁琐的操作。</p>\n<blockquote>\n<p>如有错误，欢迎指正！</p>\n</blockquote>\n","excerpt":"<p>最近开发小程序，需要前后台对接，当使用wx.request方法向后台发送http请求时，控制台报错，随后就google了一下，本文主要讲述此问题及解决方案。</p>","more":"<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>控制台报错截图：<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/1.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br>看到控制台报错，提示要配置域名，google了一下，确实有很多关于wx.request请求配置服务器的文章，就配置了服务器（当时并没有服务器）。<br><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/4.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure><br>难道在开发阶段每次测试都要吧代码推送到服务器么？有这么麻烦么？于是就开始尝试通过第三方平台，以便利前后台对接的测试，如leancloud等，然而效果并不理想。</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><ul>\n<li>首先，控制台虽然报错了，但是依然可以正确的发送请求，点击请求的地址即可得到请求的返回值（如果请求地址正确的话，地址可以是本地的）。在测试阶段是可以正确的发送http请求，但是项目上线后就需要配置服务器了。</li>\n<li>端口问题。wx,request文档中说明了请求的地址不能带有端口号，笔着使用SpringMvc后台开发，端口号是8080，讲端口号改为80即可省略端口号。</li>\n<li>在本地开发，如果想配置服务器的话，可以通过修改host文件的方法。将本地与配置的域名进行绑定。配置方法如下：<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/2.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n红色方框中的代码作用是，当我们访问api.water.mengyunzhi.com服务器时，实际上访问的地址是localhost。DNS的作用就是对ip地址进行解析，使其和域名相对应。而hosts文件是用来提高效率的，在进行dns请求前，系统会先检查自己的hosts文件中是否有这个地址的映射关系，如果有，则直接调用这个映射关系，如果没有再向dns服务器提出域名解析。也就是说 Hosts 的请求级别比 DNS 高。当你的 Hosts 文件里面有对应的 IP 时，它就会直接访问那个 IP，而不用通过 DNS。相应的，在小程序的后台配置这个域名即可：<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/3.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n实际上访问的是localhost，这样就方便了我们前后台对接。</li>\n</ul>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>在这个问题上，笔者开始的时候犯了一个严重的错误：在软件开发中，相信大多时候第三方平台都会尽力满足开发者的需求，方便我们开发测试。而不至于发送一个请求就要配置服务器这样繁琐的操作。</p>\n<blockquote>\n<p>如有错误，欢迎指正！</p>\n</blockquote>"},{"title":"hexo+Github Pages搭建个人博客详解","date":"2017-05-19T00:01:54.000Z","comments":1,"_content":"\ngithub Pages是托管在github上的静态网页，有300M的免费空间。Hexo 是一个快速、简洁且高效的博客框架。因为hexo是静态页面，不涉及到和数据库的交互等复杂操作，所以github pages的300M空间足以使用。本文将手把手教你在github pages上使用hexo搭建静态博客。您需要一个github账号，[Node.js](https://nodejs.org/en/) 、[git](https://git-scm.com/) 应用程序\n\n<!--more-->\n\n## hexo建站\n+ 安裝hexo ``npm install -g hexo-cli``\n+ 初始化博客``hexo init <folder>``\n+ 切換到对应的目录``cd <folder>``\n+ 检查是否有未安装的依赖``npm install``\n+ 配置_config.yml文件，参考[官网](https://hexo.io/zh-cn/docs/configuration.html) ，配置文件信息务必要填写正确。eg：``timezone: Asia/Shanghai``，如出现拼写错误将影响文章发表的日期。\n+ 在本地预览博客``hexo s``\n+ 发布文章``hexo new \"My New Post\"``，终端会显示文章生成的路径，按照对应的路径即可编辑文章。\n\n## 将博客部署到github pages上\n+ 进入github官网，创建一个github仓库，命名为``username.github.io``。eg：chuhang123.github.io\n+  修改_config.yml文件的部署地址，实例如下：\n```\ndeploy:\n  type: git \n  repo: https://github.com/chuhang123/chuhang123.github.io.git\n  branch : master\n```\n+ 将本地的博客推送到服务器上`` hexo d -g``\n+ hexo有很多主题，读者可根据自己的喜好安装自己喜欢的主题，主题一般都会有对应的教程，如笔者使用的[jacman主题](https://github.com/wuchong/jacman) ，[教程](http://jacman.wuchong.me/2014/11/20/how-to-use-jacman/) 就很详尽，请读者根据自己所选择的主题自行配置。\n> 如出现博客推送到服务器后，css样式无法显示，执行``hexo clean``，再次推送即可。\n\n## hexo上传图片、视频\n+ 将图片储存在本地，通过``![](/images/image.jpg)``访问图片，文件夹images和_posts为同一目录。将图片放在images文件夹即可。\n+ 将图片储存在七牛云。如果你的博客有大量的图片，可以将图片放在七牛云上，然后复制url，插入即可。\n+ 上传视频，建议将视频放在七牛云上，[实例效果](https://chuhang123.github.io/2017/05/13/angular-thinkphp%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/) ，实例代码\n``` \n<video src='http://oligray7m.bkt.clouddn.com/1490257478069.mp4 ' type='video/mp4' controls='controls'  width='100%' height='100%'>\n</video>\n```\n+ 使用[asciinema](https://asciinema.org) 在终端录制视频，安装及操作过程请参考[这里](https://asciinema.org/docs/installation) ，执行``asciinema rec``命令，开始录制终端，``Ctrl-D``结束录制，录制结束后会生成录制视频的网址。您也可以注册一个asclinema账号，对录制的视频进行管理。\n\n## 畅言评论系统\n因为多说评论系统即将关闭,[disqus](https://disqus.com/) 在国内访问受限，所以本博客转为使用[畅言](https://changyan.kuaizhan.com/) 。但是很多主题默认的评论系统只有duoshuo或者disqus。所以需要自行安装。登录官网，发现使用畅言必须要有备案才能使用，不过也不用担心，在网上随便找一个域名，在[ICP备案查询](http://icp.chinaz.com/) 中查找备案号，填入即可，审核通过后（大约要几个小时），进入畅言后台-系统设置-通用设置，进行修改即可，eg：![](/images/选区_002.png)。\n\n将代码放在comment.ejs文件中\n<img src=\"/images/选区_001.png\" width=\"85%\" height=\"85%\" >\n将博客部署到服务器上，你可能发现电脑端没有畅言评论框，打开控制台，你可能会看到下面的报错提示\n```\nchuhang123.github.io/:211 Mixed Content: The page at 'https://chuhang123.github.io/2017/05/19/%E6%89%8B%E6%8A%8A%E6%89%8Bhexo%E5%BB%BA%E7%AB%99/' was loaded over HTTPS, but requested an insecure script 'http://assets.changyan.sohu.com/upload/changyan.js?conf=c245a97f00b9a8889eb374d9a544c127&appid=cyt1izVGM'. This request has been blocked; the content must be served over HTTPS.\n```\n大致是说只能使用https请求，不能使用http请求，有以下两种解决方案\n+ 因为畅言支持https加密站点，直接将js代码中的http请求修改为https即可。\n+ 在head标签中加入一下代码，会将博客中http请求自动转化为https请求，但是在本地预览可能有问题,暂时还没找到解决方案\n``` \n<meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\">\n<meta name=\"author\" content=\"chuhang\">\n```\n使用任意一种解决方案后，就可以愉快的使用畅言评论系统了。\n> 将博客部署到github后，注意博客的访问速度，如果访问过慢，打开控制台，看看是有什么原因导致的，比如使用百度站内搜索，将http修改为https后，访问速度就会变慢。\n\n## markdown基本语法\n[Markdown ](https://zh.wikipedia.org/wiki/Markdown) 是一种轻量级标记语言，非常适合写作。现将基本的markdown语法整理如下，方便未使用过markdown的读者参考\n<img src=\"/images/选区_003.png\" width=\"85%\" height=\"85%\" >\n>如果您发现有的效果没有实现，不防加个空格试试。eg：### 梦云智（最后一个”#”和”梦”之间加空格）。\n\n## 最后\n通过以上步骤，一个基本的博客站点就可以搭建起来了。建议每篇博客都要有关键词，提升被搜索引擎的找到的概率。 如果对主题的样式不是特别满意，您可以在themes/themeName/layout文件夹下修改主题页面的整体布局，在themes/themeName/source/css文件夹下修改css属性，打造属于自己的style。\n> 如有错误，欢迎指正。谢谢！\n \n \n\n\n\n\n","source":"_posts/手把手hexo建站.md","raw":"---\ntitle: hexo+Github Pages搭建个人博客详解\ndate:  2017-05-19 08:01:54\ntags: [hexo]\ncomments: true\n---\n\ngithub Pages是托管在github上的静态网页，有300M的免费空间。Hexo 是一个快速、简洁且高效的博客框架。因为hexo是静态页面，不涉及到和数据库的交互等复杂操作，所以github pages的300M空间足以使用。本文将手把手教你在github pages上使用hexo搭建静态博客。您需要一个github账号，[Node.js](https://nodejs.org/en/) 、[git](https://git-scm.com/) 应用程序\n\n<!--more-->\n\n## hexo建站\n+ 安裝hexo ``npm install -g hexo-cli``\n+ 初始化博客``hexo init <folder>``\n+ 切換到对应的目录``cd <folder>``\n+ 检查是否有未安装的依赖``npm install``\n+ 配置_config.yml文件，参考[官网](https://hexo.io/zh-cn/docs/configuration.html) ，配置文件信息务必要填写正确。eg：``timezone: Asia/Shanghai``，如出现拼写错误将影响文章发表的日期。\n+ 在本地预览博客``hexo s``\n+ 发布文章``hexo new \"My New Post\"``，终端会显示文章生成的路径，按照对应的路径即可编辑文章。\n\n## 将博客部署到github pages上\n+ 进入github官网，创建一个github仓库，命名为``username.github.io``。eg：chuhang123.github.io\n+  修改_config.yml文件的部署地址，实例如下：\n```\ndeploy:\n  type: git \n  repo: https://github.com/chuhang123/chuhang123.github.io.git\n  branch : master\n```\n+ 将本地的博客推送到服务器上`` hexo d -g``\n+ hexo有很多主题，读者可根据自己的喜好安装自己喜欢的主题，主题一般都会有对应的教程，如笔者使用的[jacman主题](https://github.com/wuchong/jacman) ，[教程](http://jacman.wuchong.me/2014/11/20/how-to-use-jacman/) 就很详尽，请读者根据自己所选择的主题自行配置。\n> 如出现博客推送到服务器后，css样式无法显示，执行``hexo clean``，再次推送即可。\n\n## hexo上传图片、视频\n+ 将图片储存在本地，通过``![](/images/image.jpg)``访问图片，文件夹images和_posts为同一目录。将图片放在images文件夹即可。\n+ 将图片储存在七牛云。如果你的博客有大量的图片，可以将图片放在七牛云上，然后复制url，插入即可。\n+ 上传视频，建议将视频放在七牛云上，[实例效果](https://chuhang123.github.io/2017/05/13/angular-thinkphp%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/) ，实例代码\n``` \n<video src='http://oligray7m.bkt.clouddn.com/1490257478069.mp4 ' type='video/mp4' controls='controls'  width='100%' height='100%'>\n</video>\n```\n+ 使用[asciinema](https://asciinema.org) 在终端录制视频，安装及操作过程请参考[这里](https://asciinema.org/docs/installation) ，执行``asciinema rec``命令，开始录制终端，``Ctrl-D``结束录制，录制结束后会生成录制视频的网址。您也可以注册一个asclinema账号，对录制的视频进行管理。\n\n## 畅言评论系统\n因为多说评论系统即将关闭,[disqus](https://disqus.com/) 在国内访问受限，所以本博客转为使用[畅言](https://changyan.kuaizhan.com/) 。但是很多主题默认的评论系统只有duoshuo或者disqus。所以需要自行安装。登录官网，发现使用畅言必须要有备案才能使用，不过也不用担心，在网上随便找一个域名，在[ICP备案查询](http://icp.chinaz.com/) 中查找备案号，填入即可，审核通过后（大约要几个小时），进入畅言后台-系统设置-通用设置，进行修改即可，eg：![](/images/选区_002.png)。\n\n将代码放在comment.ejs文件中\n<img src=\"/images/选区_001.png\" width=\"85%\" height=\"85%\" >\n将博客部署到服务器上，你可能发现电脑端没有畅言评论框，打开控制台，你可能会看到下面的报错提示\n```\nchuhang123.github.io/:211 Mixed Content: The page at 'https://chuhang123.github.io/2017/05/19/%E6%89%8B%E6%8A%8A%E6%89%8Bhexo%E5%BB%BA%E7%AB%99/' was loaded over HTTPS, but requested an insecure script 'http://assets.changyan.sohu.com/upload/changyan.js?conf=c245a97f00b9a8889eb374d9a544c127&appid=cyt1izVGM'. This request has been blocked; the content must be served over HTTPS.\n```\n大致是说只能使用https请求，不能使用http请求，有以下两种解决方案\n+ 因为畅言支持https加密站点，直接将js代码中的http请求修改为https即可。\n+ 在head标签中加入一下代码，会将博客中http请求自动转化为https请求，但是在本地预览可能有问题,暂时还没找到解决方案\n``` \n<meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\">\n<meta name=\"author\" content=\"chuhang\">\n```\n使用任意一种解决方案后，就可以愉快的使用畅言评论系统了。\n> 将博客部署到github后，注意博客的访问速度，如果访问过慢，打开控制台，看看是有什么原因导致的，比如使用百度站内搜索，将http修改为https后，访问速度就会变慢。\n\n## markdown基本语法\n[Markdown ](https://zh.wikipedia.org/wiki/Markdown) 是一种轻量级标记语言，非常适合写作。现将基本的markdown语法整理如下，方便未使用过markdown的读者参考\n<img src=\"/images/选区_003.png\" width=\"85%\" height=\"85%\" >\n>如果您发现有的效果没有实现，不防加个空格试试。eg：### 梦云智（最后一个”#”和”梦”之间加空格）。\n\n## 最后\n通过以上步骤，一个基本的博客站点就可以搭建起来了。建议每篇博客都要有关键词，提升被搜索引擎的找到的概率。 如果对主题的样式不是特别满意，您可以在themes/themeName/layout文件夹下修改主题页面的整体布局，在themes/themeName/source/css文件夹下修改css属性，打造属于自己的style。\n> 如有错误，欢迎指正。谢谢！\n \n \n\n\n\n\n","slug":"手把手hexo建站","published":1,"updated":"2017-05-21T09:56:57.895Z","layout":"post","photos":[],"link":"","_id":"cj5rs2env001onpjxmd5ahiih","content":"<p>github Pages是托管在github上的静态网页，有300M的免费空间。Hexo 是一个快速、简洁且高效的博客框架。因为hexo是静态页面，不涉及到和数据库的交互等复杂操作，所以github pages的300M空间足以使用。本文将手把手教你在github pages上使用hexo搭建静态博客。您需要一个github账号，<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">Node.js</a> 、<a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"external\">git</a> 应用程序</p>\n<a id=\"more\"></a>\n<h2 id=\"hexo建站\"><a href=\"#hexo建站\" class=\"headerlink\" title=\"hexo建站\"></a>hexo建站</h2><ul>\n<li>安裝hexo <code>npm install -g hexo-cli</code></li>\n<li>初始化博客<code>hexo init &lt;folder&gt;</code></li>\n<li>切換到对应的目录<code>cd &lt;folder&gt;</code></li>\n<li>检查是否有未安装的依赖<code>npm install</code></li>\n<li>配置_config.yml文件，参考<a href=\"https://hexo.io/zh-cn/docs/configuration.html\" target=\"_blank\" rel=\"external\">官网</a> ，配置文件信息务必要填写正确。eg：<code>timezone: Asia/Shanghai</code>，如出现拼写错误将影响文章发表的日期。</li>\n<li>在本地预览博客<code>hexo s</code></li>\n<li>发布文章<code>hexo new &quot;My New Post&quot;</code>，终端会显示文章生成的路径，按照对应的路径即可编辑文章。</li>\n</ul>\n<h2 id=\"将博客部署到github-pages上\"><a href=\"#将博客部署到github-pages上\" class=\"headerlink\" title=\"将博客部署到github pages上\"></a>将博客部署到github pages上</h2><ul>\n<li>进入github官网，创建一个github仓库，命名为<code>username.github.io</code>。eg：chuhang123.github.io</li>\n<li><p>修改_config.yml文件的部署地址，实例如下：</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">deploy</span>:</div><div class=\"line\">  <span class=\"attribute\">type</span>: git </div><div class=\"line\">  <span class=\"attribute\">repo</span>: <span class=\"attribute\">https</span>:<span class=\"comment\">//github.com/chuhang123/chuhang123.github.io.git</span></div><div class=\"line\">  <span class=\"attribute\">branch </span>: master</div></pre></td></tr></table></figure>\n</li>\n<li><p>将本地的博客推送到服务器上<code>hexo d -g</code></p>\n</li>\n<li>hexo有很多主题，读者可根据自己的喜好安装自己喜欢的主题，主题一般都会有对应的教程，如笔者使用的<a href=\"https://github.com/wuchong/jacman\" target=\"_blank\" rel=\"external\">jacman主题</a> ，<a href=\"http://jacman.wuchong.me/2014/11/20/how-to-use-jacman/\" target=\"_blank\" rel=\"external\">教程</a> 就很详尽，请读者根据自己所选择的主题自行配置。<blockquote>\n<p>如出现博客推送到服务器后，css样式无法显示，执行<code>hexo clean</code>，再次推送即可。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"hexo上传图片、视频\"><a href=\"#hexo上传图片、视频\" class=\"headerlink\" title=\"hexo上传图片、视频\"></a>hexo上传图片、视频</h2><ul>\n<li>将图片储存在本地，通过<code>![](/images/image.jpg)</code>访问图片，文件夹images和_posts为同一目录。将图片放在images文件夹即可。</li>\n<li>将图片储存在七牛云。如果你的博客有大量的图片，可以将图片放在七牛云上，然后复制url，插入即可。</li>\n<li><p>上传视频，建议将视频放在七牛云上，<a href=\"https://chuhang123.github.io/2017/05/13/angular-thinkphp%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/\" target=\"_blank\" rel=\"external\">实例效果</a> ，实例代码</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"selector-tag\">video</span> src=<span class=\"string\">'http://oligray7m.bkt.clouddn.com/1490257478069.mp4 '</span> type=<span class=\"string\">'video/mp4'</span> controls=<span class=\"string\">'controls'</span>  <span class=\"attribute\">width</span>=<span class=\"string\">'100%'</span> height=<span class=\"string\">'100%'</span>&gt;</div><div class=\"line\">&lt;/video&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>使用<a href=\"https://asciinema.org\" target=\"_blank\" rel=\"external\">asciinema</a> 在终端录制视频，安装及操作过程请参考<a href=\"https://asciinema.org/docs/installation\" target=\"_blank\" rel=\"external\">这里</a> ，执行<code>asciinema rec</code>命令，开始录制终端，<code>Ctrl-D</code>结束录制，录制结束后会生成录制视频的网址。您也可以注册一个asclinema账号，对录制的视频进行管理。</p>\n</li>\n</ul>\n<h2 id=\"畅言评论系统\"><a href=\"#畅言评论系统\" class=\"headerlink\" title=\"畅言评论系统\"></a>畅言评论系统</h2><p>因为多说评论系统即将关闭,<a href=\"https://disqus.com/\" target=\"_blank\" rel=\"external\">disqus</a> 在国内访问受限，所以本博客转为使用<a href=\"https://changyan.kuaizhan.com/\" target=\"_blank\" rel=\"external\">畅言</a> 。但是很多主题默认的评论系统只有duoshuo或者disqus。所以需要自行安装。登录官网，发现使用畅言必须要有备案才能使用，不过也不用担心，在网上随便找一个域名，在<a href=\"http://icp.chinaz.com/\" target=\"_blank\" rel=\"external\">ICP备案查询</a> 中查找备案号，填入即可，审核通过后（大约要几个小时），进入畅言后台-系统设置-通用设置，进行修改即可，eg：<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/选区_002.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>。</p>\n<p>将代码放在comment.ejs文件中<br><img src=\"/images/选区_001.png\" width=\"85%\" height=\"85%\"><br>将博客部署到服务器上，你可能发现电脑端没有畅言评论框，打开控制台，你可能会看到下面的报错提示<br><figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chuhang<span class=\"number\">123</span>.github.io/:<span class=\"number\">211</span> Mixed Content: The page at 'https://chuhang<span class=\"number\">123</span>.github.io/<span class=\"number\">2017</span>/<span class=\"number\">05</span>/<span class=\"number\">19</span>/<span class=\"symbol\">%E6</span><span class=\"symbol\">%89</span><span class=\"symbol\">%8</span>B<span class=\"symbol\">%E6</span><span class=\"symbol\">%8</span>A<span class=\"symbol\">%8</span>A<span class=\"symbol\">%E6</span><span class=\"symbol\">%89</span><span class=\"symbol\">%8</span>Bhexo<span class=\"symbol\">%E5</span><span class=\"symbol\">%BB</span><span class=\"symbol\">%BA</span><span class=\"symbol\">%E7</span><span class=\"symbol\">%AB</span><span class=\"symbol\">%99</span>/' was loaded over HTTPS, but requested an insecure script 'http://assets.changyan.sohu.com/upload/changyan.js?conf=<span class=\"keyword\">c</span><span class=\"number\">245</span>a<span class=\"number\">97</span>f<span class=\"number\">00</span>b<span class=\"number\">9</span>a<span class=\"number\">8889</span>eb<span class=\"number\">374</span>d<span class=\"number\">9</span>a<span class=\"number\">544</span><span class=\"keyword\">c</span><span class=\"number\">127</span>&amp;appid=cyt<span class=\"number\">1</span>izVGM'. This request has been blocked<span class=\"comment\">; the content must be served over HTTPS.</span></div></pre></td></tr></table></figure></p>\n<p>大致是说只能使用https请求，不能使用http请求，有以下两种解决方案</p>\n<ul>\n<li>因为畅言支持https加密站点，直接将js代码中的http请求修改为https即可。</li>\n<li>在head标签中加入一下代码，会将博客中http请求自动转化为https请求，但是在本地预览可能有问题,暂时还没找到解决方案<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Security-Policy\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"upgrade-insecure-requests\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"author\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"chuhang\"</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>使用任意一种解决方案后，就可以愉快的使用畅言评论系统了。</p>\n<blockquote>\n<p>将博客部署到github后，注意博客的访问速度，如果访问过慢，打开控制台，看看是有什么原因导致的，比如使用百度站内搜索，将http修改为https后，访问速度就会变慢。</p>\n</blockquote>\n<h2 id=\"markdown基本语法\"><a href=\"#markdown基本语法\" class=\"headerlink\" title=\"markdown基本语法\"></a>markdown基本语法</h2><p><a href=\"https://zh.wikipedia.org/wiki/Markdown\" target=\"_blank\" rel=\"external\">Markdown </a> 是一种轻量级标记语言，非常适合写作。现将基本的markdown语法整理如下，方便未使用过markdown的读者参考<br><img src=\"/images/选区_003.png\" width=\"85%\" height=\"85%\"></p>\n<blockquote>\n<p>如果您发现有的效果没有实现，不防加个空格试试。eg：### 梦云智（最后一个”#”和”梦”之间加空格）。</p>\n</blockquote>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>通过以上步骤，一个基本的博客站点就可以搭建起来了。建议每篇博客都要有关键词，提升被搜索引擎的找到的概率。 如果对主题的样式不是特别满意，您可以在themes/themeName/layout文件夹下修改主题页面的整体布局，在themes/themeName/source/css文件夹下修改css属性，打造属于自己的style。</p>\n<blockquote>\n<p>如有错误，欢迎指正。谢谢！</p>\n</blockquote>\n","excerpt":"<p>github Pages是托管在github上的静态网页，有300M的免费空间。Hexo 是一个快速、简洁且高效的博客框架。因为hexo是静态页面，不涉及到和数据库的交互等复杂操作，所以github pages的300M空间足以使用。本文将手把手教你在github pages上使用hexo搭建静态博客。您需要一个github账号，<a href=\"https://nodejs.org/en/\">Node.js</a> 、<a href=\"https://git-scm.com/\">git</a> 应用程序</p>","more":"<h2 id=\"hexo建站\"><a href=\"#hexo建站\" class=\"headerlink\" title=\"hexo建站\"></a>hexo建站</h2><ul>\n<li>安裝hexo <code>npm install -g hexo-cli</code></li>\n<li>初始化博客<code>hexo init &lt;folder&gt;</code></li>\n<li>切換到对应的目录<code>cd &lt;folder&gt;</code></li>\n<li>检查是否有未安装的依赖<code>npm install</code></li>\n<li>配置_config.yml文件，参考<a href=\"https://hexo.io/zh-cn/docs/configuration.html\">官网</a> ，配置文件信息务必要填写正确。eg：<code>timezone: Asia/Shanghai</code>，如出现拼写错误将影响文章发表的日期。</li>\n<li>在本地预览博客<code>hexo s</code></li>\n<li>发布文章<code>hexo new &quot;My New Post&quot;</code>，终端会显示文章生成的路径，按照对应的路径即可编辑文章。</li>\n</ul>\n<h2 id=\"将博客部署到github-pages上\"><a href=\"#将博客部署到github-pages上\" class=\"headerlink\" title=\"将博客部署到github pages上\"></a>将博客部署到github pages上</h2><ul>\n<li>进入github官网，创建一个github仓库，命名为<code>username.github.io</code>。eg：chuhang123.github.io</li>\n<li><p>修改_config.yml文件的部署地址，实例如下：</p>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">deploy</span>:</div><div class=\"line\">  <span class=\"attribute\">type</span>: git </div><div class=\"line\">  <span class=\"attribute\">repo</span>: <span class=\"attribute\">https</span>:<span class=\"comment\">//github.com/chuhang123/chuhang123.github.io.git</span></div><div class=\"line\">  <span class=\"attribute\">branch </span>: master</div></pre></td></tr></table></figure>\n</li>\n<li><p>将本地的博客推送到服务器上<code>hexo d -g</code></p>\n</li>\n<li>hexo有很多主题，读者可根据自己的喜好安装自己喜欢的主题，主题一般都会有对应的教程，如笔者使用的<a href=\"https://github.com/wuchong/jacman\">jacman主题</a> ，<a href=\"http://jacman.wuchong.me/2014/11/20/how-to-use-jacman/\">教程</a> 就很详尽，请读者根据自己所选择的主题自行配置。<blockquote>\n<p>如出现博客推送到服务器后，css样式无法显示，执行<code>hexo clean</code>，再次推送即可。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"hexo上传图片、视频\"><a href=\"#hexo上传图片、视频\" class=\"headerlink\" title=\"hexo上传图片、视频\"></a>hexo上传图片、视频</h2><ul>\n<li>将图片储存在本地，通过<code>![](/images/image.jpg)</code>访问图片，文件夹images和_posts为同一目录。将图片放在images文件夹即可。</li>\n<li>将图片储存在七牛云。如果你的博客有大量的图片，可以将图片放在七牛云上，然后复制url，插入即可。</li>\n<li><p>上传视频，建议将视频放在七牛云上，<a href=\"https://chuhang123.github.io/2017/05/13/angular-thinkphp%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/\">实例效果</a> ，实例代码</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"selector-tag\">video</span> src=<span class=\"string\">'http://oligray7m.bkt.clouddn.com/1490257478069.mp4 '</span> type=<span class=\"string\">'video/mp4'</span> controls=<span class=\"string\">'controls'</span>  <span class=\"attribute\">width</span>=<span class=\"string\">'100%'</span> height=<span class=\"string\">'100%'</span>&gt;</div><div class=\"line\">&lt;/video&gt;</div></pre></td></tr></table></figure>\n</li>\n<li><p>使用<a href=\"https://asciinema.org\">asciinema</a> 在终端录制视频，安装及操作过程请参考<a href=\"https://asciinema.org/docs/installation\">这里</a> ，执行<code>asciinema rec</code>命令，开始录制终端，<code>Ctrl-D</code>结束录制，录制结束后会生成录制视频的网址。您也可以注册一个asclinema账号，对录制的视频进行管理。</p>\n</li>\n</ul>\n<h2 id=\"畅言评论系统\"><a href=\"#畅言评论系统\" class=\"headerlink\" title=\"畅言评论系统\"></a>畅言评论系统</h2><p>因为多说评论系统即将关闭,<a href=\"https://disqus.com/\">disqus</a> 在国内访问受限，所以本博客转为使用<a href=\"https://changyan.kuaizhan.com/\">畅言</a> 。但是很多主题默认的评论系统只有duoshuo或者disqus。所以需要自行安装。登录官网，发现使用畅言必须要有备案才能使用，不过也不用担心，在网上随便找一个域名，在<a href=\"http://icp.chinaz.com/\">ICP备案查询</a> 中查找备案号，填入即可，审核通过后（大约要几个小时），进入畅言后台-系统设置-通用设置，进行修改即可，eg：<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/选区_002.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>。</p>\n<p>将代码放在comment.ejs文件中<br><img src=\"/images/选区_001.png\" width=\"85%\" height=\"85%\" ><br>将博客部署到服务器上，你可能发现电脑端没有畅言评论框，打开控制台，你可能会看到下面的报错提示<br><figure class=\"highlight llvm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chuhang<span class=\"number\">123</span>.github.io/:<span class=\"number\">211</span> Mixed Content: The page at 'https://chuhang<span class=\"number\">123</span>.github.io/<span class=\"number\">2017</span>/<span class=\"number\">05</span>/<span class=\"number\">19</span>/<span class=\"symbol\">%E6</span><span class=\"symbol\">%89</span><span class=\"symbol\">%8</span>B<span class=\"symbol\">%E6</span><span class=\"symbol\">%8</span>A<span class=\"symbol\">%8</span>A<span class=\"symbol\">%E6</span><span class=\"symbol\">%89</span><span class=\"symbol\">%8</span>Bhexo<span class=\"symbol\">%E5</span><span class=\"symbol\">%BB</span><span class=\"symbol\">%BA</span><span class=\"symbol\">%E7</span><span class=\"symbol\">%AB</span><span class=\"symbol\">%99</span>/' was loaded over HTTPS, but requested an insecure script 'http://assets.changyan.sohu.com/upload/changyan.js?conf=<span class=\"keyword\">c</span><span class=\"number\">245</span>a<span class=\"number\">97</span>f<span class=\"number\">00</span>b<span class=\"number\">9</span>a<span class=\"number\">8889</span>eb<span class=\"number\">374</span>d<span class=\"number\">9</span>a<span class=\"number\">544</span><span class=\"keyword\">c</span><span class=\"number\">127</span>&amp;appid=cyt<span class=\"number\">1</span>izVGM'. This request has been blocked<span class=\"comment\">; the content must be served over HTTPS.</span></div></pre></td></tr></table></figure></p>\n<p>大致是说只能使用https请求，不能使用http请求，有以下两种解决方案</p>\n<ul>\n<li>因为畅言支持https加密站点，直接将js代码中的http请求修改为https即可。</li>\n<li>在head标签中加入一下代码，会将博客中http请求自动转化为https请求，但是在本地预览可能有问题,暂时还没找到解决方案<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"Content-Security-Policy\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"upgrade-insecure-requests\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"author\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"chuhang\"</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>使用任意一种解决方案后，就可以愉快的使用畅言评论系统了。</p>\n<blockquote>\n<p>将博客部署到github后，注意博客的访问速度，如果访问过慢，打开控制台，看看是有什么原因导致的，比如使用百度站内搜索，将http修改为https后，访问速度就会变慢。</p>\n</blockquote>\n<h2 id=\"markdown基本语法\"><a href=\"#markdown基本语法\" class=\"headerlink\" title=\"markdown基本语法\"></a>markdown基本语法</h2><p><a href=\"https://zh.wikipedia.org/wiki/Markdown\">Markdown </a> 是一种轻量级标记语言，非常适合写作。现将基本的markdown语法整理如下，方便未使用过markdown的读者参考<br><img src=\"/images/选区_003.png\" width=\"85%\" height=\"85%\" ></p>\n<blockquote>\n<p>如果您发现有的效果没有实现，不防加个空格试试。eg：### 梦云智（最后一个”#”和”梦”之间加空格）。</p>\n</blockquote>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>通过以上步骤，一个基本的博客站点就可以搭建起来了。建议每篇博客都要有关键词，提升被搜索引擎的找到的概率。 如果对主题的样式不是特别满意，您可以在themes/themeName/layout文件夹下修改主题页面的整体布局，在themes/themeName/source/css文件夹下修改css属性，打造属于自己的style。</p>\n<blockquote>\n<p>如有错误，欢迎指正。谢谢！</p>\n</blockquote>"},{"title":"搭建个人博客全过程简要","date":"2017-04-16T01:51:34.000Z","_content":"\n\n本文主要简述搭建个人博客的全部流程，从搭建个人站点、学习hexo，到使用markdown写博客、实现上传图片的功能，对具体的技术细节不做讲述。工具：github账号、node、npm、hexo、极简图床、markdown、swiftype。\n\n<!--more-->\n\n\n###   搭建个人站点\n\n笔者通过github Pages搭建自己的站点，推荐[学习资料](https://pages.github.com/) ，如果仅仅是用来写博客，github Pages的300M空间以足够使用，因为现在主流的博客框架均为静态界面，不涉及到和数据库的交互,故不需要太大的空间。\n\n###  学习hexo\n搭建hexo环境需要node、npm，具体的安装步骤hexo[官网](https://hexo.io/zh-cn/docs/) 已给出，推荐hexo[学习资料](https://www.digitalocean.com/community/tutorials/how-to-create-a-blog-with-hexo-on-ubuntu-14-04) ，如果部署到站点后网页无样式，执行```hexo clean```命令后，再次部署到站点即可。笔者使用[jacman主题](https://github.com/wuchong/jacman)，由于jacman作者的[教程](http://jacman.wuchong.me/2014/11/20/how-to-use-jacman/) 较为详细，只需一步一步的操作，即可完成主题的设置。\n\n### 使用markdown写博客\n笔者在搭建博客之前从未接触过markdown，故首先下载了一个主流的markdown工具[reMarkable](https://getremarkable.com/) ,了解了markdown的基本语法后，整理了常用的markdown语法，希望对您有所帮助![ ](http://p1.bqimg.com/567571/10524bb9033523f6.png  \"示例\")   \n\n>如果您发现有的效果没有实现，不防加个空格试试。eg：```### 梦云智```（最后一个\"#\"和\"梦\"之间加空格）。\n\n### 上传图片\n因为写博客时经常需要图片加以说明，因此需要上传图片的功能，笔者使用的[极简图床](https://chrome.google.com/webstore/detail/%E6%9E%81%E7%AE%80%E5%9B%BE%E5%BA%8A/heebflcbemenefckkgfnnklbhdbdkagg?hl=zh-CN) 上传图片，下载后，上传图片，并复制图片地址，就实现了图片的上传功能。\n\n### 站内搜索\n折腾了百度站内搜索，没折腾出理想的效果，尝试了para，没有成功，最后无意中看到了[swiftype](https://swiftype.com/) ,效果可以再我的博客中尝试一下，推荐[教程](http://www.jerryfu.net/post/search-engine-for-hexo-with-swiftype-v2.html) 。相比于百度、Google的站内搜索，极力推荐swiftype。\n\n### 总结\n以上即为搭建个人博客的从无到有的过程。在搭建博客之前，可能会感觉需要过高的技术需求，但真正接触后，发现即使是一个技术小白，也完全有可能在较短的时间内搭建起自己的博客。相信读者只要有搭建博客的决心，就一定能如你所愿。Good Luck!\n\n\n如有错误，欢迎指正！\n","source":"_posts/搭建个人博客简要.md","raw":"---\ntitle: 搭建个人博客全过程简要\ntags: hexo\ndate: 2017-04-16 09:51:34\n---\n\n\n本文主要简述搭建个人博客的全部流程，从搭建个人站点、学习hexo，到使用markdown写博客、实现上传图片的功能，对具体的技术细节不做讲述。工具：github账号、node、npm、hexo、极简图床、markdown、swiftype。\n\n<!--more-->\n\n\n###   搭建个人站点\n\n笔者通过github Pages搭建自己的站点，推荐[学习资料](https://pages.github.com/) ，如果仅仅是用来写博客，github Pages的300M空间以足够使用，因为现在主流的博客框架均为静态界面，不涉及到和数据库的交互,故不需要太大的空间。\n\n###  学习hexo\n搭建hexo环境需要node、npm，具体的安装步骤hexo[官网](https://hexo.io/zh-cn/docs/) 已给出，推荐hexo[学习资料](https://www.digitalocean.com/community/tutorials/how-to-create-a-blog-with-hexo-on-ubuntu-14-04) ，如果部署到站点后网页无样式，执行```hexo clean```命令后，再次部署到站点即可。笔者使用[jacman主题](https://github.com/wuchong/jacman)，由于jacman作者的[教程](http://jacman.wuchong.me/2014/11/20/how-to-use-jacman/) 较为详细，只需一步一步的操作，即可完成主题的设置。\n\n### 使用markdown写博客\n笔者在搭建博客之前从未接触过markdown，故首先下载了一个主流的markdown工具[reMarkable](https://getremarkable.com/) ,了解了markdown的基本语法后，整理了常用的markdown语法，希望对您有所帮助![ ](http://p1.bqimg.com/567571/10524bb9033523f6.png  \"示例\")   \n\n>如果您发现有的效果没有实现，不防加个空格试试。eg：```### 梦云智```（最后一个\"#\"和\"梦\"之间加空格）。\n\n### 上传图片\n因为写博客时经常需要图片加以说明，因此需要上传图片的功能，笔者使用的[极简图床](https://chrome.google.com/webstore/detail/%E6%9E%81%E7%AE%80%E5%9B%BE%E5%BA%8A/heebflcbemenefckkgfnnklbhdbdkagg?hl=zh-CN) 上传图片，下载后，上传图片，并复制图片地址，就实现了图片的上传功能。\n\n### 站内搜索\n折腾了百度站内搜索，没折腾出理想的效果，尝试了para，没有成功，最后无意中看到了[swiftype](https://swiftype.com/) ,效果可以再我的博客中尝试一下，推荐[教程](http://www.jerryfu.net/post/search-engine-for-hexo-with-swiftype-v2.html) 。相比于百度、Google的站内搜索，极力推荐swiftype。\n\n### 总结\n以上即为搭建个人博客的从无到有的过程。在搭建博客之前，可能会感觉需要过高的技术需求，但真正接触后，发现即使是一个技术小白，也完全有可能在较短的时间内搭建起自己的博客。相信读者只要有搭建博客的决心，就一定能如你所愿。Good Luck!\n\n\n如有错误，欢迎指正！\n","slug":"搭建个人博客简要","published":1,"updated":"2017-07-30T02:26:03.957Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2eo0001snpjx6bf26jim","content":"<p>本文主要简述搭建个人博客的全部流程，从搭建个人站点、学习hexo，到使用markdown写博客、实现上传图片的功能，对具体的技术细节不做讲述。工具：github账号、node、npm、hexo、极简图床、markdown、swiftype。</p>\n<a id=\"more\"></a>\n<h3 id=\"搭建个人站点\"><a href=\"#搭建个人站点\" class=\"headerlink\" title=\"搭建个人站点\"></a>搭建个人站点</h3><p>笔者通过github Pages搭建自己的站点，推荐<a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"external\">学习资料</a> ，如果仅仅是用来写博客，github Pages的300M空间以足够使用，因为现在主流的博客框架均为静态界面，不涉及到和数据库的交互,故不需要太大的空间。</p>\n<h3 id=\"学习hexo\"><a href=\"#学习hexo\" class=\"headerlink\" title=\"学习hexo\"></a>学习hexo</h3><p>搭建hexo环境需要node、npm，具体的安装步骤hexo<a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"external\">官网</a> 已给出，推荐hexo<a href=\"https://www.digitalocean.com/community/tutorials/how-to-create-a-blog-with-hexo-on-ubuntu-14-04\" target=\"_blank\" rel=\"external\">学习资料</a> ，如果部署到站点后网页无样式，执行<code>hexo clean</code>命令后，再次部署到站点即可。笔者使用<a href=\"https://github.com/wuchong/jacman\" target=\"_blank\" rel=\"external\">jacman主题</a>，由于jacman作者的<a href=\"http://jacman.wuchong.me/2014/11/20/how-to-use-jacman/\" target=\"_blank\" rel=\"external\">教程</a> 较为详细，只需一步一步的操作，即可完成主题的设置。</p>\n<h3 id=\"使用markdown写博客\"><a href=\"#使用markdown写博客\" class=\"headerlink\" title=\"使用markdown写博客\"></a>使用markdown写博客</h3><p>笔者在搭建博客之前从未接触过markdown，故首先下载了一个主流的markdown工具<a href=\"https://getremarkable.com/\" target=\"_blank\" rel=\"external\">reMarkable</a> ,了解了markdown的基本语法后，整理了常用的markdown语法，希望对您有所帮助<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://p1.bqimg.com/567571/10524bb9033523f6.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>   </p>\n<blockquote>\n<p>如果您发现有的效果没有实现，不防加个空格试试。eg：<code>### 梦云智</code>（最后一个”#”和”梦”之间加空格）。</p>\n</blockquote>\n<h3 id=\"上传图片\"><a href=\"#上传图片\" class=\"headerlink\" title=\"上传图片\"></a>上传图片</h3><p>因为写博客时经常需要图片加以说明，因此需要上传图片的功能，笔者使用的<a href=\"https://chrome.google.com/webstore/detail/%E6%9E%81%E7%AE%80%E5%9B%BE%E5%BA%8A/heebflcbemenefckkgfnnklbhdbdkagg?hl=zh-CN\" target=\"_blank\" rel=\"external\">极简图床</a> 上传图片，下载后，上传图片，并复制图片地址，就实现了图片的上传功能。</p>\n<h3 id=\"站内搜索\"><a href=\"#站内搜索\" class=\"headerlink\" title=\"站内搜索\"></a>站内搜索</h3><p>折腾了百度站内搜索，没折腾出理想的效果，尝试了para，没有成功，最后无意中看到了<a href=\"https://swiftype.com/\" target=\"_blank\" rel=\"external\">swiftype</a> ,效果可以再我的博客中尝试一下，推荐<a href=\"http://www.jerryfu.net/post/search-engine-for-hexo-with-swiftype-v2.html\" target=\"_blank\" rel=\"external\">教程</a> 。相比于百度、Google的站内搜索，极力推荐swiftype。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>以上即为搭建个人博客的从无到有的过程。在搭建博客之前，可能会感觉需要过高的技术需求，但真正接触后，发现即使是一个技术小白，也完全有可能在较短的时间内搭建起自己的博客。相信读者只要有搭建博客的决心，就一定能如你所愿。Good Luck!</p>\n<p>如有错误，欢迎指正！</p>\n","excerpt":"<p>本文主要简述搭建个人博客的全部流程，从搭建个人站点、学习hexo，到使用markdown写博客、实现上传图片的功能，对具体的技术细节不做讲述。工具：github账号、node、npm、hexo、极简图床、markdown、swiftype。</p>","more":"<h3 id=\"搭建个人站点\"><a href=\"#搭建个人站点\" class=\"headerlink\" title=\"搭建个人站点\"></a>搭建个人站点</h3><p>笔者通过github Pages搭建自己的站点，推荐<a href=\"https://pages.github.com/\">学习资料</a> ，如果仅仅是用来写博客，github Pages的300M空间以足够使用，因为现在主流的博客框架均为静态界面，不涉及到和数据库的交互,故不需要太大的空间。</p>\n<h3 id=\"学习hexo\"><a href=\"#学习hexo\" class=\"headerlink\" title=\"学习hexo\"></a>学习hexo</h3><p>搭建hexo环境需要node、npm，具体的安装步骤hexo<a href=\"https://hexo.io/zh-cn/docs/\">官网</a> 已给出，推荐hexo<a href=\"https://www.digitalocean.com/community/tutorials/how-to-create-a-blog-with-hexo-on-ubuntu-14-04\">学习资料</a> ，如果部署到站点后网页无样式，执行<code>hexo clean</code>命令后，再次部署到站点即可。笔者使用<a href=\"https://github.com/wuchong/jacman\">jacman主题</a>，由于jacman作者的<a href=\"http://jacman.wuchong.me/2014/11/20/how-to-use-jacman/\">教程</a> 较为详细，只需一步一步的操作，即可完成主题的设置。</p>\n<h3 id=\"使用markdown写博客\"><a href=\"#使用markdown写博客\" class=\"headerlink\" title=\"使用markdown写博客\"></a>使用markdown写博客</h3><p>笔者在搭建博客之前从未接触过markdown，故首先下载了一个主流的markdown工具<a href=\"https://getremarkable.com/\">reMarkable</a> ,了解了markdown的基本语法后，整理了常用的markdown语法，希望对您有所帮助<figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"http://p1.bqimg.com/567571/10524bb9033523f6.png\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>   </p>\n<blockquote>\n<p>如果您发现有的效果没有实现，不防加个空格试试。eg：<code>### 梦云智</code>（最后一个”#”和”梦”之间加空格）。</p>\n</blockquote>\n<h3 id=\"上传图片\"><a href=\"#上传图片\" class=\"headerlink\" title=\"上传图片\"></a>上传图片</h3><p>因为写博客时经常需要图片加以说明，因此需要上传图片的功能，笔者使用的<a href=\"https://chrome.google.com/webstore/detail/%E6%9E%81%E7%AE%80%E5%9B%BE%E5%BA%8A/heebflcbemenefckkgfnnklbhdbdkagg?hl=zh-CN\">极简图床</a> 上传图片，下载后，上传图片，并复制图片地址，就实现了图片的上传功能。</p>\n<h3 id=\"站内搜索\"><a href=\"#站内搜索\" class=\"headerlink\" title=\"站内搜索\"></a>站内搜索</h3><p>折腾了百度站内搜索，没折腾出理想的效果，尝试了para，没有成功，最后无意中看到了<a href=\"https://swiftype.com/\">swiftype</a> ,效果可以再我的博客中尝试一下，推荐<a href=\"http://www.jerryfu.net/post/search-engine-for-hexo-with-swiftype-v2.html\">教程</a> 。相比于百度、Google的站内搜索，极力推荐swiftype。</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>以上即为搭建个人博客的从无到有的过程。在搭建博客之前，可能会感觉需要过高的技术需求，但真正接触后，发现即使是一个技术小白，也完全有可能在较短的时间内搭建起自己的博客。相信读者只要有搭建博客的决心，就一定能如你所愿。Good Luck!</p>\n<p>如有错误，欢迎指正！</p>"},{"title":"时序图使用记录","date":"2017-06-23T12:43:02.000Z","_content":"\n如果我们想清楚的表示两个类的交互过程，可以通过使用时序图来表示。本文从时序图在实际项目中的应用入手，从不规范到较为规范的过程。以及对时序图的简单学习。   \n \n<!--more-->\n## 背景\n本文的实例中，主要表示净水器和服务器之间的交互过程。需要注意的是，此实例主要表示净水器和服务器之间进行http请求。净水器的有效参数：上次交互时间、创建时间、净水前水质、净水后水质、净水器编号、用水量、充值信息。\n\n## 不规范的时序图\n![](/images/8.jpg)\n\n\n## 时序图的相关知识\n+ 时序图的定义：描述了对象之间传递消息的时间顺序, 用来表示用例中的行为顺序, 是强调消息时间顺序的交互图。\n+ 时序图组成 : 时序图包括四个元素 对象(Object), 生命线(Lifeline), 激活(Activation), 消息(Message);\n\n## 规范后的时序图\n![](/images/9.jpg)\n\n## 错误之处\n+ 请求成功的表示方法为200\n+ 返回信息为虚线，且返回消息后相应的对象不再处于激活状态\n+ 一般情况下，每发送一次消息，对方会进行回复，发送方从而判断发送的消息接收方是否接收到。\n+ 逻辑错误。（本文不予描述）\n\n> 参考文献：[UML入门 之 交互图 -- 时序图 协作图详解](http://blog.csdn.net/doniexun/article/details/38317537) ","source":"_posts/时序图使用记录.md","raw":"---\ntitle: 时序图使用记录\ndate: 2017-06-23 20:43:02\ntags: [时序图]\n---\n\n如果我们想清楚的表示两个类的交互过程，可以通过使用时序图来表示。本文从时序图在实际项目中的应用入手，从不规范到较为规范的过程。以及对时序图的简单学习。   \n \n<!--more-->\n## 背景\n本文的实例中，主要表示净水器和服务器之间的交互过程。需要注意的是，此实例主要表示净水器和服务器之间进行http请求。净水器的有效参数：上次交互时间、创建时间、净水前水质、净水后水质、净水器编号、用水量、充值信息。\n\n## 不规范的时序图\n![](/images/8.jpg)\n\n\n## 时序图的相关知识\n+ 时序图的定义：描述了对象之间传递消息的时间顺序, 用来表示用例中的行为顺序, 是强调消息时间顺序的交互图。\n+ 时序图组成 : 时序图包括四个元素 对象(Object), 生命线(Lifeline), 激活(Activation), 消息(Message);\n\n## 规范后的时序图\n![](/images/9.jpg)\n\n## 错误之处\n+ 请求成功的表示方法为200\n+ 返回信息为虚线，且返回消息后相应的对象不再处于激活状态\n+ 一般情况下，每发送一次消息，对方会进行回复，发送方从而判断发送的消息接收方是否接收到。\n+ 逻辑错误。（本文不予描述）\n\n> 参考文献：[UML入门 之 交互图 -- 时序图 协作图详解](http://blog.csdn.net/doniexun/article/details/38317537) ","slug":"时序图使用记录","published":1,"updated":"2017-06-26T14:58:41.791Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2eo2001unpjxy45v3xvi","content":"<p>如果我们想清楚的表示两个类的交互过程，可以通过使用时序图来表示。本文从时序图在实际项目中的应用入手，从不规范到较为规范的过程。以及对时序图的简单学习。   </p>\n<a id=\"more\"></a>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>本文的实例中，主要表示净水器和服务器之间的交互过程。需要注意的是，此实例主要表示净水器和服务器之间进行http请求。净水器的有效参数：上次交互时间、创建时间、净水前水质、净水后水质、净水器编号、用水量、充值信息。</p>\n<h2 id=\"不规范的时序图\"><a href=\"#不规范的时序图\" class=\"headerlink\" title=\"不规范的时序图\"></a>不规范的时序图</h2><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/8.jpg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h2 id=\"时序图的相关知识\"><a href=\"#时序图的相关知识\" class=\"headerlink\" title=\"时序图的相关知识\"></a>时序图的相关知识</h2><ul>\n<li>时序图的定义：描述了对象之间传递消息的时间顺序, 用来表示用例中的行为顺序, 是强调消息时间顺序的交互图。</li>\n<li>时序图组成 : 时序图包括四个元素 对象(Object), 生命线(Lifeline), 激活(Activation), 消息(Message);</li>\n</ul>\n<h2 id=\"规范后的时序图\"><a href=\"#规范后的时序图\" class=\"headerlink\" title=\"规范后的时序图\"></a>规范后的时序图</h2><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/9.jpg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h2 id=\"错误之处\"><a href=\"#错误之处\" class=\"headerlink\" title=\"错误之处\"></a>错误之处</h2><ul>\n<li>请求成功的表示方法为200</li>\n<li>返回信息为虚线，且返回消息后相应的对象不再处于激活状态</li>\n<li>一般情况下，每发送一次消息，对方会进行回复，发送方从而判断发送的消息接收方是否接收到。</li>\n<li>逻辑错误。（本文不予描述）</li>\n</ul>\n<blockquote>\n<p>参考文献：<a href=\"http://blog.csdn.net/doniexun/article/details/38317537\" target=\"_blank\" rel=\"external\">UML入门 之 交互图 – 时序图 协作图详解</a> </p>\n</blockquote>\n","excerpt":"<p>如果我们想清楚的表示两个类的交互过程，可以通过使用时序图来表示。本文从时序图在实际项目中的应用入手，从不规范到较为规范的过程。以及对时序图的简单学习。   </p>","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>本文的实例中，主要表示净水器和服务器之间的交互过程。需要注意的是，此实例主要表示净水器和服务器之间进行http请求。净水器的有效参数：上次交互时间、创建时间、净水前水质、净水后水质、净水器编号、用水量、充值信息。</p>\n<h2 id=\"不规范的时序图\"><a href=\"#不规范的时序图\" class=\"headerlink\" title=\"不规范的时序图\"></a>不规范的时序图</h2><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/8.jpg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h2 id=\"时序图的相关知识\"><a href=\"#时序图的相关知识\" class=\"headerlink\" title=\"时序图的相关知识\"></a>时序图的相关知识</h2><ul>\n<li>时序图的定义：描述了对象之间传递消息的时间顺序, 用来表示用例中的行为顺序, 是强调消息时间顺序的交互图。</li>\n<li>时序图组成 : 时序图包括四个元素 对象(Object), 生命线(Lifeline), 激活(Activation), 消息(Message);</li>\n</ul>\n<h2 id=\"规范后的时序图\"><a href=\"#规范后的时序图\" class=\"headerlink\" title=\"规范后的时序图\"></a>规范后的时序图</h2><figure class=\"image-bubble\">\n                <div class=\"img-lightbox\">\n                    <div class=\"overlay\"></div>\n                    <img src=\"/images/9.jpg\" alt=\"\" title=\"\">\n                </div>\n                <div class=\"image-caption\"></div>\n            </figure>\n<h2 id=\"错误之处\"><a href=\"#错误之处\" class=\"headerlink\" title=\"错误之处\"></a>错误之处</h2><ul>\n<li>请求成功的表示方法为200</li>\n<li>返回信息为虚线，且返回消息后相应的对象不再处于激活状态</li>\n<li>一般情况下，每发送一次消息，对方会进行回复，发送方从而判断发送的消息接收方是否接收到。</li>\n<li>逻辑错误。（本文不予描述）</li>\n</ul>\n<blockquote>\n<p>参考文献：<a href=\"http://blog.csdn.net/doniexun/article/details/38317537\">UML入门 之 交互图 – 时序图 协作图详解</a> </p>\n</blockquote>"},{"title":"跟媳妇儿去秦皇岛","date":"2017-04-29T13:00:47.000Z","_content":"\n16年十一假期的秦皇岛之旅，跟媳妇儿玩的很开心。\n<!--more-->\n \n\n\n\n<img src=\"/love/qinhuangdao/qinhuangdao (30).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (31).jpg\" >\n<img src=\"/love/qinhuangdao/qinhuangdao (35).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (36).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (5).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (6).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (7).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (8).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (9).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (10).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (11).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (12).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (13).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (14).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (15).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (16).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (17).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (18).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (19).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (20).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (21).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (22).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (23).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (24).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (25).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (26).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (27).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (28).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (29).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (1).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (2).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (32).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (33).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (34).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (3).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (4).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (37).jpg\" >\n\n这是一个gallery测试\t","source":"_posts/秦皇岛.md","raw":"---\ntitle: 跟媳妇儿去秦皇岛\ndate: 2017-04-29 21:00:47\ncategories: photos \n---\n\n16年十一假期的秦皇岛之旅，跟媳妇儿玩的很开心。\n<!--more-->\n \n\n\n\n<img src=\"/love/qinhuangdao/qinhuangdao (30).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (31).jpg\" >\n<img src=\"/love/qinhuangdao/qinhuangdao (35).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (36).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (5).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (6).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (7).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (8).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (9).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (10).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (11).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (12).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (13).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (14).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (15).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (16).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (17).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (18).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (19).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (20).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (21).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (22).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (23).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (24).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (25).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (26).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (27).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (28).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (29).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (1).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (2).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (32).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (33).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (34).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (3).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (4).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (37).jpg\" >\n\n这是一个gallery测试\t","slug":"秦皇岛","published":1,"updated":"2017-06-04T12:34:40.202Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2eo4001xnpjx1mhr4cls","content":"<p>16年十一假期的秦皇岛之旅，跟媳妇儿玩的很开心。<br><a id=\"more\"></a></p>\n<p><img src=\"/love/qinhuangdao/qinhuangdao (30).jpg\">    <img src=\"/love/qinhuangdao/qinhuangdao (31).jpg\"><br><img src=\"/love/qinhuangdao/qinhuangdao (35).jpg\">    <img src=\"/love/qinhuangdao/qinhuangdao (36).jpg\"><img src=\"/love/qinhuangdao/qinhuangdao (5).jpg\">    <img src=\"/love/qinhuangdao/qinhuangdao (6).jpg\"><img src=\"/love/qinhuangdao/qinhuangdao (7).jpg\">    <img src=\"/love/qinhuangdao/qinhuangdao (8).jpg\"><img src=\"/love/qinhuangdao/qinhuangdao (9).jpg\">    <img src=\"/love/qinhuangdao/qinhuangdao (10).jpg\"><img src=\"/love/qinhuangdao/qinhuangdao (11).jpg\">    <img src=\"/love/qinhuangdao/qinhuangdao (12).jpg\"><img src=\"/love/qinhuangdao/qinhuangdao (13).jpg\">    <img src=\"/love/qinhuangdao/qinhuangdao (14).jpg\"><img src=\"/love/qinhuangdao/qinhuangdao (15).jpg\">    <img src=\"/love/qinhuangdao/qinhuangdao (16).jpg\"><img src=\"/love/qinhuangdao/qinhuangdao (17).jpg\">    <img src=\"/love/qinhuangdao/qinhuangdao (18).jpg\"><img src=\"/love/qinhuangdao/qinhuangdao (19).jpg\">    <img src=\"/love/qinhuangdao/qinhuangdao (20).jpg\"><img src=\"/love/qinhuangdao/qinhuangdao (21).jpg\">    <img src=\"/love/qinhuangdao/qinhuangdao (22).jpg\"><img src=\"/love/qinhuangdao/qinhuangdao (23).jpg\">    <img src=\"/love/qinhuangdao/qinhuangdao (24).jpg\"><img src=\"/love/qinhuangdao/qinhuangdao (25).jpg\">    <img src=\"/love/qinhuangdao/qinhuangdao (26).jpg\"><img src=\"/love/qinhuangdao/qinhuangdao (27).jpg\">    <img src=\"/love/qinhuangdao/qinhuangdao (28).jpg\"><img src=\"/love/qinhuangdao/qinhuangdao (29).jpg\">    <img src=\"/love/qinhuangdao/qinhuangdao (1).jpg\"><img src=\"/love/qinhuangdao/qinhuangdao (2).jpg\">    <img src=\"/love/qinhuangdao/qinhuangdao (32).jpg\"><img src=\"/love/qinhuangdao/qinhuangdao (33).jpg\">    <img src=\"/love/qinhuangdao/qinhuangdao (34).jpg\"><img src=\"/love/qinhuangdao/qinhuangdao (3).jpg\">    <img src=\"/love/qinhuangdao/qinhuangdao (4).jpg\"><img src=\"/love/qinhuangdao/qinhuangdao (37).jpg\"></p>\n<p>这是一个gallery测试    </p>\n","excerpt":"<p>16年十一假期的秦皇岛之旅，跟媳妇儿玩的很开心。<br>","more":"</p>\n<p><img src=\"/love/qinhuangdao/qinhuangdao (30).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (31).jpg\" ><br><img src=\"/love/qinhuangdao/qinhuangdao (35).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (36).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (5).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (6).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (7).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (8).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (9).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (10).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (11).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (12).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (13).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (14).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (15).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (16).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (17).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (18).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (19).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (20).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (21).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (22).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (23).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (24).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (25).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (26).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (27).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (28).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (29).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (1).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (2).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (32).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (33).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (34).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (3).jpg\" >    <img src=\"/love/qinhuangdao/qinhuangdao (4).jpg\" ><img src=\"/love/qinhuangdao/qinhuangdao (37).jpg\" ></p>\n<p>这是一个gallery测试    </p>"},{"title":"订单号生成规则简述","date":"2017-05-13T01:51:34.000Z","_content":"\n最近做的项目需要生成订单编号，查阅资料后进行了学习总结，并将最终项目中使用的订单号生成规则进行记录。\n\n<!--more-->\n\n## 订单编号生成规则\n+ 不重复。这是生成订单号最基本、最重要的原则。比如一个人在京东上买了一个手机，另外一个人在京东上买了一包卫生纸，生成了一样的订单编号，一个人给客服打电话，客服一查，到底是哪个商品呢？\n+ 安全。订单编号不能暴露客户的id，或者让竞争对手很容易看出近期的订单量。\n+ 不能大规模生成随机码。当订单量比较多的时候，大规模生成随机码容易发生碰撞。\n+ 控制位数。客户向客服上报订单编号时，太长不仅容易出错，而且耽误时间。\n+ 符合实际需求。订单的生成规则要根据自己的项目中实际的需求。比如一个小型网站使用淘宝的订单编号生成规则，显然有点大费周章了。\n+ 订单号尽量保持整形。提高数据库的检索效率，也不至于凌乱，或是让一些英文发信不标准的朋友尴尬。\n\n## 实例参考\n+  小米订单生成规则。1——111218—03234—5170，将订单分为四个部分。第一部分，1表示购买，2表示退货。第二部分，表示2011年12月18日下的单。第三部分，时间戳对应0:53:54。最后一部分，表示在同一秒内下的第5170单，也就是说，小米认为，在一秒内不会超过一万个订单。\n\n+ 宅妈妈app订单生成规则。订单是一个四位数的自增数字，可能想让用户感觉到订单在不断的增加，或者业务初期不想让用户反馈问题时报上冗长的订单号。\n\n## 所犯的错\n开始的时候欲使用的订单生成规则为：年月日+时间戳（五为）+随机数（2位）+客户id后四位，如20170421—34324——32—32321。如果这样设置的话当客户超过十万人时，如果id为1和100001同一秒下单订单号就有可能重复，而且随机数的一般作用为混淆别人找出订单生成规则，而实际项目中没有必要，不是很符合实际需求。\n\n## 项目中使用的订单生成规则\n综合以上因素，项目中决定使用：年月日+时间戳（后五位）+同一秒内订单生成序列号（三位）。例：20170421—34234—001，前13位精确到秒，后三位表示同一秒内生成的第一单。如果同一秒内生成了多个订单，则这些订单钱13位一样，后三位依次递增，也就是系统认为一秒内不会同时生成1000个订单。\n \n > 如有错误，欢迎指正！","source":"_posts/订单号生成规则简述.md","raw":"---\ntitle: 订单号生成规则简述\ndate: 2017-05-13 09:51:34\ntags: [web]\n---\n\n最近做的项目需要生成订单编号，查阅资料后进行了学习总结，并将最终项目中使用的订单号生成规则进行记录。\n\n<!--more-->\n\n## 订单编号生成规则\n+ 不重复。这是生成订单号最基本、最重要的原则。比如一个人在京东上买了一个手机，另外一个人在京东上买了一包卫生纸，生成了一样的订单编号，一个人给客服打电话，客服一查，到底是哪个商品呢？\n+ 安全。订单编号不能暴露客户的id，或者让竞争对手很容易看出近期的订单量。\n+ 不能大规模生成随机码。当订单量比较多的时候，大规模生成随机码容易发生碰撞。\n+ 控制位数。客户向客服上报订单编号时，太长不仅容易出错，而且耽误时间。\n+ 符合实际需求。订单的生成规则要根据自己的项目中实际的需求。比如一个小型网站使用淘宝的订单编号生成规则，显然有点大费周章了。\n+ 订单号尽量保持整形。提高数据库的检索效率，也不至于凌乱，或是让一些英文发信不标准的朋友尴尬。\n\n## 实例参考\n+  小米订单生成规则。1——111218—03234—5170，将订单分为四个部分。第一部分，1表示购买，2表示退货。第二部分，表示2011年12月18日下的单。第三部分，时间戳对应0:53:54。最后一部分，表示在同一秒内下的第5170单，也就是说，小米认为，在一秒内不会超过一万个订单。\n\n+ 宅妈妈app订单生成规则。订单是一个四位数的自增数字，可能想让用户感觉到订单在不断的增加，或者业务初期不想让用户反馈问题时报上冗长的订单号。\n\n## 所犯的错\n开始的时候欲使用的订单生成规则为：年月日+时间戳（五为）+随机数（2位）+客户id后四位，如20170421—34324——32—32321。如果这样设置的话当客户超过十万人时，如果id为1和100001同一秒下单订单号就有可能重复，而且随机数的一般作用为混淆别人找出订单生成规则，而实际项目中没有必要，不是很符合实际需求。\n\n## 项目中使用的订单生成规则\n综合以上因素，项目中决定使用：年月日+时间戳（后五位）+同一秒内订单生成序列号（三位）。例：20170421—34234—001，前13位精确到秒，后三位表示同一秒内生成的第一单。如果同一秒内生成了多个订单，则这些订单钱13位一样，后三位依次递增，也就是系统认为一秒内不会同时生成1000个订单。\n \n > 如有错误，欢迎指正！","slug":"订单号生成规则简述","published":1,"updated":"2017-07-30T03:04:49.876Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2eo50020npjxywof1zrp","content":"<p>最近做的项目需要生成订单编号，查阅资料后进行了学习总结，并将最终项目中使用的订单号生成规则进行记录。</p>\n<a id=\"more\"></a>\n<h2 id=\"订单编号生成规则\"><a href=\"#订单编号生成规则\" class=\"headerlink\" title=\"订单编号生成规则\"></a>订单编号生成规则</h2><ul>\n<li>不重复。这是生成订单号最基本、最重要的原则。比如一个人在京东上买了一个手机，另外一个人在京东上买了一包卫生纸，生成了一样的订单编号，一个人给客服打电话，客服一查，到底是哪个商品呢？</li>\n<li>安全。订单编号不能暴露客户的id，或者让竞争对手很容易看出近期的订单量。</li>\n<li>不能大规模生成随机码。当订单量比较多的时候，大规模生成随机码容易发生碰撞。</li>\n<li>控制位数。客户向客服上报订单编号时，太长不仅容易出错，而且耽误时间。</li>\n<li>符合实际需求。订单的生成规则要根据自己的项目中实际的需求。比如一个小型网站使用淘宝的订单编号生成规则，显然有点大费周章了。</li>\n<li>订单号尽量保持整形。提高数据库的检索效率，也不至于凌乱，或是让一些英文发信不标准的朋友尴尬。</li>\n</ul>\n<h2 id=\"实例参考\"><a href=\"#实例参考\" class=\"headerlink\" title=\"实例参考\"></a>实例参考</h2><ul>\n<li><p>小米订单生成规则。1——111218—03234—5170，将订单分为四个部分。第一部分，1表示购买，2表示退货。第二部分，表示2011年12月18日下的单。第三部分，时间戳对应0:53:54。最后一部分，表示在同一秒内下的第5170单，也就是说，小米认为，在一秒内不会超过一万个订单。</p>\n</li>\n<li><p>宅妈妈app订单生成规则。订单是一个四位数的自增数字，可能想让用户感觉到订单在不断的增加，或者业务初期不想让用户反馈问题时报上冗长的订单号。</p>\n</li>\n</ul>\n<h2 id=\"所犯的错\"><a href=\"#所犯的错\" class=\"headerlink\" title=\"所犯的错\"></a>所犯的错</h2><p>开始的时候欲使用的订单生成规则为：年月日+时间戳（五为）+随机数（2位）+客户id后四位，如20170421—34324——32—32321。如果这样设置的话当客户超过十万人时，如果id为1和100001同一秒下单订单号就有可能重复，而且随机数的一般作用为混淆别人找出订单生成规则，而实际项目中没有必要，不是很符合实际需求。</p>\n<h2 id=\"项目中使用的订单生成规则\"><a href=\"#项目中使用的订单生成规则\" class=\"headerlink\" title=\"项目中使用的订单生成规则\"></a>项目中使用的订单生成规则</h2><p>综合以上因素，项目中决定使用：年月日+时间戳（后五位）+同一秒内订单生成序列号（三位）。例：20170421—34234—001，前13位精确到秒，后三位表示同一秒内生成的第一单。如果同一秒内生成了多个订单，则这些订单钱13位一样，后三位依次递增，也就是系统认为一秒内不会同时生成1000个订单。</p>\n<blockquote>\n<p>如有错误，欢迎指正！</p>\n</blockquote>\n","excerpt":"<p>最近做的项目需要生成订单编号，查阅资料后进行了学习总结，并将最终项目中使用的订单号生成规则进行记录。</p>","more":"<h2 id=\"订单编号生成规则\"><a href=\"#订单编号生成规则\" class=\"headerlink\" title=\"订单编号生成规则\"></a>订单编号生成规则</h2><ul>\n<li>不重复。这是生成订单号最基本、最重要的原则。比如一个人在京东上买了一个手机，另外一个人在京东上买了一包卫生纸，生成了一样的订单编号，一个人给客服打电话，客服一查，到底是哪个商品呢？</li>\n<li>安全。订单编号不能暴露客户的id，或者让竞争对手很容易看出近期的订单量。</li>\n<li>不能大规模生成随机码。当订单量比较多的时候，大规模生成随机码容易发生碰撞。</li>\n<li>控制位数。客户向客服上报订单编号时，太长不仅容易出错，而且耽误时间。</li>\n<li>符合实际需求。订单的生成规则要根据自己的项目中实际的需求。比如一个小型网站使用淘宝的订单编号生成规则，显然有点大费周章了。</li>\n<li>订单号尽量保持整形。提高数据库的检索效率，也不至于凌乱，或是让一些英文发信不标准的朋友尴尬。</li>\n</ul>\n<h2 id=\"实例参考\"><a href=\"#实例参考\" class=\"headerlink\" title=\"实例参考\"></a>实例参考</h2><ul>\n<li><p>小米订单生成规则。1——111218—03234—5170，将订单分为四个部分。第一部分，1表示购买，2表示退货。第二部分，表示2011年12月18日下的单。第三部分，时间戳对应0:53:54。最后一部分，表示在同一秒内下的第5170单，也就是说，小米认为，在一秒内不会超过一万个订单。</p>\n</li>\n<li><p>宅妈妈app订单生成规则。订单是一个四位数的自增数字，可能想让用户感觉到订单在不断的增加，或者业务初期不想让用户反馈问题时报上冗长的订单号。</p>\n</li>\n</ul>\n<h2 id=\"所犯的错\"><a href=\"#所犯的错\" class=\"headerlink\" title=\"所犯的错\"></a>所犯的错</h2><p>开始的时候欲使用的订单生成规则为：年月日+时间戳（五为）+随机数（2位）+客户id后四位，如20170421—34324——32—32321。如果这样设置的话当客户超过十万人时，如果id为1和100001同一秒下单订单号就有可能重复，而且随机数的一般作用为混淆别人找出订单生成规则，而实际项目中没有必要，不是很符合实际需求。</p>\n<h2 id=\"项目中使用的订单生成规则\"><a href=\"#项目中使用的订单生成规则\" class=\"headerlink\" title=\"项目中使用的订单生成规则\"></a>项目中使用的订单生成规则</h2><p>综合以上因素，项目中决定使用：年月日+时间戳（后五位）+同一秒内订单生成序列号（三位）。例：20170421—34234—001，前13位精确到秒，后三位表示同一秒内生成的第一单。如果同一秒内生成了多个订单，则这些订单钱13位一样，后三位依次递增，也就是系统认为一秒内不会同时生成1000个订单。</p>\n<blockquote>\n<p>如有错误，欢迎指正！</p>\n</blockquote>"},{"title":"数据结构——线性表","date":"2017-05-16T01:51:34.000Z","_content":"\n选择专业时没能选上技术方向，心痛。以后应该也没有数据结构的课程了，无奈，只能自学数据结构了，不过发现了一个很好的[视频教程](http://study.163.com/course/courseMain.htm?courseId=468002) ，讲的类似大话数据结构，很赞。因为时间比较紧张，而数据结构的课程有90个课时，所以这次学习的目标是了解数据结构的大致思想，敲写少量的代码加以巩固\n\n<!--more-->\n\n[线性表](https://zh.wikipedia.org/wiki/%E7%BA%BF%E6%80%A7%E8%A1%A8) 是由n个数据元素组成的有限序列。线性表分为[链表](https://zh.wikipedia.org/wiki/%E9%93%BE%E8%A1%A8) 和[顺序表](https://zh.wikipedia.org/wiki/%E9%A1%BA%E5%BA%8F%E8%A1%A8) 。\n+ 顺序表的一般表现形式为数组，顺序表的主要特点就是长度固定，不可避免的浪费一些内存。\n+ 链表的长度是不固定的，储存的空间也不是连续的，当增加或者删除元素是也不会影响全局，但是由于链表需要很多次小块的分配内存，而分配内存的操作相对比较耗时。因此，链表不像理论分析的那么美好。\n+ 为了弥补链表在内存分配上的不足，出现了静态链表。他会预先分配一个足够长的数组，之后的数据元素都会保存在里面了。静态链表一般是由两个表组成的，一个是保存数据元素的链表，一个是保存空闲节点的链表。由于数据元素都是储存在数组中，所以经常使用数组索引代替指针。由于静态链表不需要很多次的分配内存，所以静态链表的效率和顺序表的效率几乎一样。\n\n> 参考 http://www.cnblogs.com/cyjb/p/Lists.html","source":"_posts/链表.md","raw":"---\ntitle: 数据结构——线性表\ntags: [链表]\ncategories: [数据结构]\ndate: 2017-05-16 09:51:34\n---\n\n选择专业时没能选上技术方向，心痛。以后应该也没有数据结构的课程了，无奈，只能自学数据结构了，不过发现了一个很好的[视频教程](http://study.163.com/course/courseMain.htm?courseId=468002) ，讲的类似大话数据结构，很赞。因为时间比较紧张，而数据结构的课程有90个课时，所以这次学习的目标是了解数据结构的大致思想，敲写少量的代码加以巩固\n\n<!--more-->\n\n[线性表](https://zh.wikipedia.org/wiki/%E7%BA%BF%E6%80%A7%E8%A1%A8) 是由n个数据元素组成的有限序列。线性表分为[链表](https://zh.wikipedia.org/wiki/%E9%93%BE%E8%A1%A8) 和[顺序表](https://zh.wikipedia.org/wiki/%E9%A1%BA%E5%BA%8F%E8%A1%A8) 。\n+ 顺序表的一般表现形式为数组，顺序表的主要特点就是长度固定，不可避免的浪费一些内存。\n+ 链表的长度是不固定的，储存的空间也不是连续的，当增加或者删除元素是也不会影响全局，但是由于链表需要很多次小块的分配内存，而分配内存的操作相对比较耗时。因此，链表不像理论分析的那么美好。\n+ 为了弥补链表在内存分配上的不足，出现了静态链表。他会预先分配一个足够长的数组，之后的数据元素都会保存在里面了。静态链表一般是由两个表组成的，一个是保存数据元素的链表，一个是保存空闲节点的链表。由于数据元素都是储存在数组中，所以经常使用数组索引代替指针。由于静态链表不需要很多次的分配内存，所以静态链表的效率和顺序表的效率几乎一样。\n\n> 参考 http://www.cnblogs.com/cyjb/p/Lists.html","slug":"链表","published":1,"updated":"2017-07-30T02:25:39.033Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2eo70022npjx61w4qnz2","content":"<p>选择专业时没能选上技术方向，心痛。以后应该也没有数据结构的课程了，无奈，只能自学数据结构了，不过发现了一个很好的<a href=\"http://study.163.com/course/courseMain.htm?courseId=468002\" target=\"_blank\" rel=\"external\">视频教程</a> ，讲的类似大话数据结构，很赞。因为时间比较紧张，而数据结构的课程有90个课时，所以这次学习的目标是了解数据结构的大致思想，敲写少量的代码加以巩固</p>\n<a id=\"more\"></a>\n<p><a href=\"https://zh.wikipedia.org/wiki/%E7%BA%BF%E6%80%A7%E8%A1%A8\" target=\"_blank\" rel=\"external\">线性表</a> 是由n个数据元素组成的有限序列。线性表分为<a href=\"https://zh.wikipedia.org/wiki/%E9%93%BE%E8%A1%A8\" target=\"_blank\" rel=\"external\">链表</a> 和<a href=\"https://zh.wikipedia.org/wiki/%E9%A1%BA%E5%BA%8F%E8%A1%A8\" target=\"_blank\" rel=\"external\">顺序表</a> 。</p>\n<ul>\n<li>顺序表的一般表现形式为数组，顺序表的主要特点就是长度固定，不可避免的浪费一些内存。</li>\n<li>链表的长度是不固定的，储存的空间也不是连续的，当增加或者删除元素是也不会影响全局，但是由于链表需要很多次小块的分配内存，而分配内存的操作相对比较耗时。因此，链表不像理论分析的那么美好。</li>\n<li>为了弥补链表在内存分配上的不足，出现了静态链表。他会预先分配一个足够长的数组，之后的数据元素都会保存在里面了。静态链表一般是由两个表组成的，一个是保存数据元素的链表，一个是保存空闲节点的链表。由于数据元素都是储存在数组中，所以经常使用数组索引代替指针。由于静态链表不需要很多次的分配内存，所以静态链表的效率和顺序表的效率几乎一样。</li>\n</ul>\n<blockquote>\n<p>参考 <a href=\"http://www.cnblogs.com/cyjb/p/Lists.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/cyjb/p/Lists.html</a></p>\n</blockquote>\n","excerpt":"<p>选择专业时没能选上技术方向，心痛。以后应该也没有数据结构的课程了，无奈，只能自学数据结构了，不过发现了一个很好的<a href=\"http://study.163.com/course/courseMain.htm?courseId=468002\">视频教程</a> ，讲的类似大话数据结构，很赞。因为时间比较紧张，而数据结构的课程有90个课时，所以这次学习的目标是了解数据结构的大致思想，敲写少量的代码加以巩固</p>","more":"<p><a href=\"https://zh.wikipedia.org/wiki/%E7%BA%BF%E6%80%A7%E8%A1%A8\">线性表</a> 是由n个数据元素组成的有限序列。线性表分为<a href=\"https://zh.wikipedia.org/wiki/%E9%93%BE%E8%A1%A8\">链表</a> 和<a href=\"https://zh.wikipedia.org/wiki/%E9%A1%BA%E5%BA%8F%E8%A1%A8\">顺序表</a> 。</p>\n<ul>\n<li>顺序表的一般表现形式为数组，顺序表的主要特点就是长度固定，不可避免的浪费一些内存。</li>\n<li>链表的长度是不固定的，储存的空间也不是连续的，当增加或者删除元素是也不会影响全局，但是由于链表需要很多次小块的分配内存，而分配内存的操作相对比较耗时。因此，链表不像理论分析的那么美好。</li>\n<li>为了弥补链表在内存分配上的不足，出现了静态链表。他会预先分配一个足够长的数组，之后的数据元素都会保存在里面了。静态链表一般是由两个表组成的，一个是保存数据元素的链表，一个是保存空闲节点的链表。由于数据元素都是储存在数组中，所以经常使用数组索引代替指针。由于静态链表不需要很多次的分配内存，所以静态链表的效率和顺序表的效率几乎一样。</li>\n</ul>\n<blockquote>\n<p>参考 <a href=\"http://www.cnblogs.com/cyjb/p/Lists.html\">http://www.cnblogs.com/cyjb/p/Lists.html</a></p>\n</blockquote>"},{"title":"错题本","date":"2017-05-16T01:51:34.000Z","_content":"\n\n\n1.一些数据是有API借口的，如航班信息。有时间尝试在tour项目的航班管理中通过API获取航班信息。\n2.考研机试题[九度](http://ac.jobdu.com/problemset.php) ，配色网站[Color Scheme ](http://colorschemedesigner.com/csd-3.5/) ，易用框架[easyui](http://www.jeasyui.net/) ,\n3.数据库的视图的作用是查询，不能实现增删改的功能，如果多张表关联，查询信息如果比较麻烦，那么，用视图最好不过。\n\n<!---more-->\n\n4.数据表冗余问题，如果个数据表中的字段有多条信息，那么，就需要再建立一张关联的表，而不要为了方便转化成json字符串，一方面产生了数据的冗余，不易管理数据，一方面不符合软件设计的基本思想。\n5.剑指offer","source":"_posts/错题本.md","raw":"---\ntitle: 错题本\ndate: 2017-05-16 09:51:34\ntags:\n  - 错题\n---\n\n\n\n1.一些数据是有API借口的，如航班信息。有时间尝试在tour项目的航班管理中通过API获取航班信息。\n2.考研机试题[九度](http://ac.jobdu.com/problemset.php) ，配色网站[Color Scheme ](http://colorschemedesigner.com/csd-3.5/) ，易用框架[easyui](http://www.jeasyui.net/) ,\n3.数据库的视图的作用是查询，不能实现增删改的功能，如果多张表关联，查询信息如果比较麻烦，那么，用视图最好不过。\n\n<!---more-->\n\n4.数据表冗余问题，如果个数据表中的字段有多条信息，那么，就需要再建立一张关联的表，而不要为了方便转化成json字符串，一方面产生了数据的冗余，不易管理数据，一方面不符合软件设计的基本思想。\n5.剑指offer","slug":"错题本","published":1,"updated":"2017-07-30T02:26:39.631Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2eo90025npjxrlzjhb42","content":"<p>1.一些数据是有API借口的，如航班信息。有时间尝试在tour项目的航班管理中通过API获取航班信息。<br>2.考研机试题<a href=\"http://ac.jobdu.com/problemset.php\" target=\"_blank\" rel=\"external\">九度</a> ，配色网站<a href=\"http://colorschemedesigner.com/csd-3.5/\" target=\"_blank\" rel=\"external\">Color Scheme </a> ，易用框架<a href=\"http://www.jeasyui.net/\" target=\"_blank\" rel=\"external\">easyui</a> ,<br>3.数据库的视图的作用是查询，不能实现增删改的功能，如果多张表关联，查询信息如果比较麻烦，那么，用视图最好不过。</p>\n<a id=\"more\"></a>\n<p>4.数据表冗余问题，如果个数据表中的字段有多条信息，那么，就需要再建立一张关联的表，而不要为了方便转化成json字符串，一方面产生了数据的冗余，不易管理数据，一方面不符合软件设计的基本思想。<br>5.剑指offer</p>\n","excerpt":"<p>1.一些数据是有API借口的，如航班信息。有时间尝试在tour项目的航班管理中通过API获取航班信息。<br>2.考研机试题<a href=\"http://ac.jobdu.com/problemset.php\">九度</a> ，配色网站<a href=\"http://colorschemedesigner.com/csd-3.5/\">Color Scheme </a> ，易用框架<a href=\"http://www.jeasyui.net/\">easyui</a> ,<br>3.数据库的视图的作用是查询，不能实现增删改的功能，如果多张表关联，查询信息如果比较麻烦，那么，用视图最好不过。</p>","more":"<p>4.数据表冗余问题，如果个数据表中的字段有多条信息，那么，就需要再建立一张关联的表，而不要为了方便转化成json字符串，一方面产生了数据的冗余，不易管理数据，一方面不符合软件设计的基本思想。<br>5.剑指offer</p>"},{"title":"验证信息真伪加密算法记录","date":"2017-06-13T15:42:25.000Z","_content":"\n最近做的项目后台需要验证是不是我们的用户发送的请求。起初，考虑的是使用rsa算法通过公钥、私钥的方法进行加密解密，老师给我讲了另外一种比较简单的算法，却比较实用。\n\n<!--more-->\n\n## 问题场景\n前台需要向后台发送http请求，参数是``编号``，并根据编号获取相应的信息。那么后台如何辨别这个请求是不是我们的用户发送的呢？\n## 方案\n将发送http请求的header信息中增加几个参数，增加``时间戳``、``随机字符串``、``加密信息``三个参数，\n```JAVASCRIPT\n         timestamp: timestamp,\t//时间戳\n         randomString: randomString,\t\t//随机字符串\n         encryptionInfo: encryptionInfo\t//加密信息\n```\n加密信息指的是讲编号、时间戳、随机字符串、特定的字符串通过不可解密的方法加密，如sha1、md5算法，如果一次不放心的多加密几次。实例如下\n```\nvar encryptionString = timestamp + randomString + 'xiaoming';\nvar encryptionInfo = app.sha1(encryptionString);\n```\n后台对接受到的参数以及我们约定好的特定的字符串，按照同样的方法加密，如果加密后生成的字符串和前台发送的加密信息（encryptionInfo）相同，那么我们就认为这个http请求是我们的用户发送的请求。","source":"_posts/验证信息真伪加密算法记录.md","raw":"---\ntitle: 验证信息真伪加密算法记录\ndate: 2017-06-13 23:42:25\ntags:  [加密, 算法]\n---\n\n最近做的项目后台需要验证是不是我们的用户发送的请求。起初，考虑的是使用rsa算法通过公钥、私钥的方法进行加密解密，老师给我讲了另外一种比较简单的算法，却比较实用。\n\n<!--more-->\n\n## 问题场景\n前台需要向后台发送http请求，参数是``编号``，并根据编号获取相应的信息。那么后台如何辨别这个请求是不是我们的用户发送的呢？\n## 方案\n将发送http请求的header信息中增加几个参数，增加``时间戳``、``随机字符串``、``加密信息``三个参数，\n```JAVASCRIPT\n         timestamp: timestamp,\t//时间戳\n         randomString: randomString,\t\t//随机字符串\n         encryptionInfo: encryptionInfo\t//加密信息\n```\n加密信息指的是讲编号、时间戳、随机字符串、特定的字符串通过不可解密的方法加密，如sha1、md5算法，如果一次不放心的多加密几次。实例如下\n```\nvar encryptionString = timestamp + randomString + 'xiaoming';\nvar encryptionInfo = app.sha1(encryptionString);\n```\n后台对接受到的参数以及我们约定好的特定的字符串，按照同样的方法加密，如果加密后生成的字符串和前台发送的加密信息（encryptionInfo）相同，那么我们就认为这个http请求是我们的用户发送的请求。","slug":"验证信息真伪加密算法记录","published":1,"updated":"2017-07-16T01:57:59.849Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj5rs2eod0027npjxgn6jgz9q","content":"<p>最近做的项目后台需要验证是不是我们的用户发送的请求。起初，考虑的是使用rsa算法通过公钥、私钥的方法进行加密解密，老师给我讲了另外一种比较简单的算法，却比较实用。</p>\n<a id=\"more\"></a>\n<h2 id=\"问题场景\"><a href=\"#问题场景\" class=\"headerlink\" title=\"问题场景\"></a>问题场景</h2><p>前台需要向后台发送http请求，参数是<code>编号</code>，并根据编号获取相应的信息。那么后台如何辨别这个请求是不是我们的用户发送的呢？</p>\n<h2 id=\"方案\"><a href=\"#方案\" class=\"headerlink\" title=\"方案\"></a>方案</h2><p>将发送http请求的header信息中增加几个参数，增加<code>时间戳</code>、<code>随机字符串</code>、<code>加密信息</code>三个参数，<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">timestamp: timestamp,\t<span class=\"comment\">//时间戳</span></div><div class=\"line\">randomString: randomString,\t\t<span class=\"comment\">//随机字符串</span></div><div class=\"line\">encryptionInfo: encryptionInfo\t<span class=\"comment\">//加密信息</span></div></pre></td></tr></table></figure></p>\n<p>加密信息指的是讲编号、时间戳、随机字符串、特定的字符串通过不可解密的方法加密，如sha1、md5算法，如果一次不放心的多加密几次。实例如下<br><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">var encryptionString</span> = timestamp + randomString + <span class=\"string\">'xiaoming'</span>;</div><div class=\"line\"><span class=\"attribute\">var encryptionInfo</span> = app.sha1(encryptionString);</div></pre></td></tr></table></figure></p>\n<p>后台对接受到的参数以及我们约定好的特定的字符串，按照同样的方法加密，如果加密后生成的字符串和前台发送的加密信息（encryptionInfo）相同，那么我们就认为这个http请求是我们的用户发送的请求。</p>\n","excerpt":"<p>最近做的项目后台需要验证是不是我们的用户发送的请求。起初，考虑的是使用rsa算法通过公钥、私钥的方法进行加密解密，老师给我讲了另外一种比较简单的算法，却比较实用。</p>","more":"<h2 id=\"问题场景\"><a href=\"#问题场景\" class=\"headerlink\" title=\"问题场景\"></a>问题场景</h2><p>前台需要向后台发送http请求，参数是<code>编号</code>，并根据编号获取相应的信息。那么后台如何辨别这个请求是不是我们的用户发送的呢？</p>\n<h2 id=\"方案\"><a href=\"#方案\" class=\"headerlink\" title=\"方案\"></a>方案</h2><p>将发送http请求的header信息中增加几个参数，增加<code>时间戳</code>、<code>随机字符串</code>、<code>加密信息</code>三个参数，<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">timestamp: timestamp,\t<span class=\"comment\">//时间戳</span></div><div class=\"line\">randomString: randomString,\t\t<span class=\"comment\">//随机字符串</span></div><div class=\"line\">encryptionInfo: encryptionInfo\t<span class=\"comment\">//加密信息</span></div></pre></td></tr></table></figure></p>\n<p>加密信息指的是讲编号、时间戳、随机字符串、特定的字符串通过不可解密的方法加密，如sha1、md5算法，如果一次不放心的多加密几次。实例如下<br><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">var encryptionString</span> = timestamp + randomString + <span class=\"string\">'xiaoming'</span>;</div><div class=\"line\"><span class=\"attribute\">var encryptionInfo</span> = app.sha1(encryptionString);</div></pre></td></tr></table></figure></p>\n<p>后台对接受到的参数以及我们约定好的特定的字符串，按照同样的方法加密，如果加密后生成的字符串和前台发送的加密信息（encryptionInfo）相同，那么我们就认为这个http请求是我们的用户发送的请求。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj5rs2elw0000npjxxr23azb5","category_id":"cj5rs2em70004npjx56fvp393","_id":"cj5rs2emt000dnpjxafa0djnz"},{"post_id":"cj5rs2em30002npjxmzw4y09w","category_id":"cj5rs2em70004npjx56fvp393","_id":"cj5rs2emy000inpjx3nx6adew"},{"post_id":"cj5rs2emx000hnpjxe5raqqv2","category_id":"cj5rs2emv000gnpjxlups8psh","_id":"cj5rs2en2000onpjxug62wyz2"},{"post_id":"cj5rs2emc0005npjx80z90r8t","category_id":"cj5rs2emv000gnpjxlups8psh","_id":"cj5rs2en6000tnpjxt40tc3my"},{"post_id":"cj5rs2emg0007npjx0f2qk1b2","category_id":"cj5rs2en0000lnpjxx5asuv95","_id":"cj5rs2ena000xnpjxyuo7oaaz"},{"post_id":"cj5rs2emp000cnpjxaqmztqny","category_id":"cj5rs2en6000snpjxbisk4qik","_id":"cj5rs2ene0013npjx0zkcszgm"},{"post_id":"cj5rs2enb0012npjx70aq2cov","category_id":"cj5rs2en0000lnpjxx5asuv95","_id":"cj5rs2enj0018npjxbd6139ca"},{"post_id":"cj5rs2emu000enpjxkmacg5ji","category_id":"cj5rs2ena000znpjxw99qqfed","_id":"cj5rs2enl001cnpjxc8zxszyu"},{"post_id":"cj5rs2eni0017npjxs9pomqm3","category_id":"cj5rs2em70004npjx56fvp393","_id":"cj5rs2eno001fnpjxsr6vqrnu"},{"post_id":"cj5rs2emy000jnpjxy8cpkwh2","category_id":"cj5rs2en0000lnpjxx5asuv95","_id":"cj5rs2ens001knpjx9ehlpful"},{"post_id":"cj5rs2enm001dnpjxabay1nd8","category_id":"cj5rs2en0000lnpjxx5asuv95","_id":"cj5rs2enu001nnpjxmqq9d3so"},{"post_id":"cj5rs2en2000pnpjxljnn4tsd","category_id":"cj5rs2enl001anpjxu9os7g4v","_id":"cj5rs2eny001qnpjxm81rgboh"},{"post_id":"cj5rs2en7000unpjx8m6ystiw","category_id":"cj5rs2enr001inpjxzd4dmj2i","_id":"cj5rs2eo3001vnpjxvgdktih2"},{"post_id":"cj5rs2enk0019npjxvehzl6hx","category_id":"cj5rs2eny001pnpjxak322pqy","_id":"cj5rs2eo60021npjxs1lzy6uz"},{"post_id":"cj5rs2eo4001xnpjx1mhr4cls","category_id":"cj5rs2em70004npjx56fvp393","_id":"cj5rs2eo90024npjx6gl0vngo"},{"post_id":"cj5rs2enp001gnpjxu7c85enf","category_id":"cj5rs2eo3001wnpjxqnburtix","_id":"cj5rs2eod0026npjxuizqwx5q"},{"post_id":"cj5rs2eo70022npjx61w4qnz2","category_id":"cj5rs2eo3001wnpjxqnburtix","_id":"cj5rs2eoe0029npjxll4xi60k"}],"PostTag":[{"post_id":"cj5rs2emc0005npjx80z90r8t","tag_id":"cj5rs2emk0009npjxktv7zbik","_id":"cj5rs2en1000nnpjx0rt1iv8u"},{"post_id":"cj5rs2emc0005npjx80z90r8t","tag_id":"cj5rs2emv000fnpjx8sx17qyc","_id":"cj5rs2en4000qnpjx17hmfg0y"},{"post_id":"cj5rs2emg0007npjx0f2qk1b2","tag_id":"cj5rs2emz000knpjxg7cpdaj1","_id":"cj5rs2en7000vnpjx81hp2m6u"},{"post_id":"cj5rs2emp000cnpjxaqmztqny","tag_id":"cj5rs2en6000rnpjxmvwk2vza","_id":"cj5rs2enb0011npjx52qimx7a"},{"post_id":"cj5rs2emu000enpjxkmacg5ji","tag_id":"cj5rs2ena000ynpjxb2vebfr4","_id":"cj5rs2enn001enpjx8fw3oq8v"},{"post_id":"cj5rs2emu000enpjxkmacg5ji","tag_id":"cj5rs2enh0015npjxziboux3p","_id":"cj5rs2enq001hnpjxs1ft9tvi"},{"post_id":"cj5rs2emy000jnpjxy8cpkwh2","tag_id":"cj5rs2enl001bnpjxv2d3zmiq","_id":"cj5rs2enu001mnpjx0fwyje85"},{"post_id":"cj5rs2en1000mnpjxf44lclbr","tag_id":"cj5rs2enr001jnpjxz0v1otvo","_id":"cj5rs2eo1001tnpjxfy8i9t34"},{"post_id":"cj5rs2en2000pnpjxljnn4tsd","tag_id":"cj5rs2enz001rnpjx556nv4hb","_id":"cj5rs2eo5001znpjx1ji3vgm5"},{"post_id":"cj5rs2en7000unpjx8m6ystiw","tag_id":"cj5rs2eo4001ynpjxgeigh69c","_id":"cj5rs2eoe002anpjx9wtsbi6h"},{"post_id":"cj5rs2en7000unpjx8m6ystiw","tag_id":"cj5rs2eo90023npjx7751a8fo","_id":"cj5rs2eof002bnpjx3l4nvx6i"},{"post_id":"cj5rs2en9000wnpjx6puq9wn1","tag_id":"cj5rs2eoe0028npjxgsbf2fqw","_id":"cj5rs2eof002dnpjxcymdwoni"},{"post_id":"cj5rs2ena0010npjxghu37tx4","tag_id":"cj5rs2emz000knpjxg7cpdaj1","_id":"cj5rs2eog002hnpjxysijq7rw"},{"post_id":"cj5rs2ena0010npjxghu37tx4","tag_id":"cj5rs2eof002cnpjx0f8682yl","_id":"cj5rs2eog002inpjxzlk05g17"},{"post_id":"cj5rs2ena0010npjxghu37tx4","tag_id":"cj5rs2eof002enpjxbr0iuf39","_id":"cj5rs2eoh002knpjxxgxnqp1j"},{"post_id":"cj5rs2ena0010npjxghu37tx4","tag_id":"cj5rs2eog002fnpjxzs966epe","_id":"cj5rs2eoh002lnpjx3aocl62s"},{"post_id":"cj5rs2enb0012npjx70aq2cov","tag_id":"cj5rs2eog002gnpjx6cpw6kfe","_id":"cj5rs2eoh002nnpjxt3jbhkkc"},{"post_id":"cj5rs2ene0014npjxa8x9gyy5","tag_id":"cj5rs2eog002jnpjx602uk71t","_id":"cj5rs2eoi002qnpjxy1dvcpvx"},{"post_id":"cj5rs2ene0014npjxa8x9gyy5","tag_id":"cj5rs2eoh002mnpjxhsqiwaqe","_id":"cj5rs2eoj002rnpjxdvaky6gk"},{"post_id":"cj5rs2ene0014npjxa8x9gyy5","tag_id":"cj5rs2eoh002onpjx6d8w2qkp","_id":"cj5rs2eoj002tnpjx4qu094ap"},{"post_id":"cj5rs2enp001gnpjxu7c85enf","tag_id":"cj5rs2enz001rnpjx556nv4hb","_id":"cj5rs2eok002vnpjxsrudoeav"},{"post_id":"cj5rs2enp001gnpjxu7c85enf","tag_id":"cj5rs2eoj002snpjxjf8bipkr","_id":"cj5rs2eok002wnpjxxwp0pjjz"},{"post_id":"cj5rs2ens001lnpjxzr2v7dzo","tag_id":"cj5rs2eof002enpjxbr0iuf39","_id":"cj5rs2eom0030npjxumg7cr00"},{"post_id":"cj5rs2ens001lnpjxzr2v7dzo","tag_id":"cj5rs2eok002xnpjx32lvmeun","_id":"cj5rs2eom0031npjx9ne7r96j"},{"post_id":"cj5rs2ens001lnpjxzr2v7dzo","tag_id":"cj5rs2eog002gnpjx6cpw6kfe","_id":"cj5rs2eom0033npjx8s0ljymr"},{"post_id":"cj5rs2env001onpjxmd5ahiih","tag_id":"cj5rs2eol002znpjxkhm43bnr","_id":"cj5rs2eom0034npjxhlv8fc0v"},{"post_id":"cj5rs2eo0001snpjx6bf26jim","tag_id":"cj5rs2eol002znpjxkhm43bnr","_id":"cj5rs2eon0036npjxppfnj5ri"},{"post_id":"cj5rs2eo2001unpjxy45v3xvi","tag_id":"cj5rs2eon0035npjxnkte04bq","_id":"cj5rs2eon0038npjx1h5s11jl"},{"post_id":"cj5rs2eo50020npjxywof1zrp","tag_id":"cj5rs2eon0037npjx2ll05kh5","_id":"cj5rs2eoo003anpjxe8uqpxbp"},{"post_id":"cj5rs2eo70022npjx61w4qnz2","tag_id":"cj5rs2eoj002snpjxjf8bipkr","_id":"cj5rs2eop003cnpjxdyg89qis"},{"post_id":"cj5rs2eo90025npjxrlzjhb42","tag_id":"cj5rs2eoo003bnpjxzh1qgmim","_id":"cj5rs2eop003enpjxwhg5t9yd"},{"post_id":"cj5rs2eod0027npjxgn6jgz9q","tag_id":"cj5rs2eop003dnpjxahcrzoo5","_id":"cj5rs2eoq003gnpjxiib22t0k"},{"post_id":"cj5rs2eod0027npjxgn6jgz9q","tag_id":"cj5rs2eoq003fnpjxw0myvmjs","_id":"cj5rs2eoq003hnpjxikni46qm"}],"Tag":[{"name":"GET","_id":"cj5rs2emk0009npjxktv7zbik"},{"name":"POST","_id":"cj5rs2emv000fnpjx8sx17qyc"},{"name":"https","_id":"cj5rs2emz000knpjxg7cpdaj1"},{"name":"asynchronously","_id":"cj5rs2en6000rnpjxmvwk2vza"},{"name":"ubuntu","_id":"cj5rs2ena000ynpjxb2vebfr4"},{"name":"enviroment","_id":"cj5rs2enh0015npjxziboux3p"},{"name":"session","_id":"cj5rs2enl001bnpjxv2d3zmiq"},{"name":"API","_id":"cj5rs2enr001jnpjxz0v1otvo"},{"name":"demo","_id":"cj5rs2enz001rnpjx556nv4hb"},{"name":"浮动","_id":"cj5rs2eo4001ynpjxgeigh69c"},{"name":"实战","_id":"cj5rs2eo90023npjx7751a8fo"},{"name":"git","_id":"cj5rs2eoe0028npjxgsbf2fqw"},{"name":"安全","_id":"cj5rs2eof002cnpjx0f8682yl"},{"name":"服务器","_id":"cj5rs2eof002enpjxbr0iuf39"},{"name":"性能","_id":"cj5rs2eog002fnpjxzs966epe"},{"name":"小程序","_id":"cj5rs2eog002gnpjx6cpw6kfe"},{"name":"sql","_id":"cj5rs2eog002jnpjx602uk71t"},{"name":"关键字","_id":"cj5rs2eoh002mnpjxhsqiwaqe"},{"name":"hebinate","_id":"cj5rs2eoh002onpjx6d8w2qkp"},{"name":"链表","_id":"cj5rs2eoj002snpjxjf8bipkr"},{"name":"wx.request","_id":"cj5rs2eok002xnpjx32lvmeun"},{"name":"hexo","_id":"cj5rs2eol002znpjxkhm43bnr"},{"name":"时序图","_id":"cj5rs2eon0035npjxnkte04bq"},{"name":"web","_id":"cj5rs2eon0037npjx2ll05kh5"},{"name":"错题","_id":"cj5rs2eoo003bnpjxzh1qgmim"},{"name":"加密","_id":"cj5rs2eop003dnpjxahcrzoo5"},{"name":"算法","_id":"cj5rs2eoq003fnpjxw0myvmjs"}]}}